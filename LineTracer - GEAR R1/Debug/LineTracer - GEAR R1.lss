
LineTracer - GEAR R1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007c76  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000362  00800060  00007c76  00007d2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000015e  008003c2  008003c2  0000808c  2**0
                  ALLOC
  3 .eeprom       00000189  00810000  00810000  0000808c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00008215  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00008274  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000300  00000000  00000000  000082b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00006cea  00000000  00000000  000085b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000bef  00000000  00000000  0000f29a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000048f6  00000000  00000000  0000fe89  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000848  00000000  00000000  00014780  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000132e  00000000  00000000  00014fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000034fc  00000000  00000000  000162f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000358  00000000  00000000  000197f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__ctors_end>
       4:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
       8:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
       c:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      10:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      14:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      18:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      1c:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      20:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      24:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      28:	0c 94 a9 15 	jmp	0x2b52	; 0x2b52 <__vector_10>
      2c:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      30:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      34:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      38:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      3c:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      40:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      44:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      48:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      4c:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      50:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__bad_interrupt>
      54:	0f 1c       	adc	r0, r15
      56:	c5 1c       	adc	r12, r5
      58:	35 25       	eor	r19, r5
      5a:	58 25       	eor	r21, r8
      5c:	0d 26       	eor	r0, r29
      5e:	17 27       	eor	r17, r23
      60:	a7 28       	or	r10, r7
      62:	19 29       	or	r17, r9
      64:	06 2a       	or	r0, r22
      66:	6c 2a       	or	r6, r28
      68:	87 2a       	or	r8, r23
      6a:	bf 1d       	adc	r27, r15
      6c:	c3 1d       	adc	r28, r3
      6e:	c7 1d       	adc	r28, r7
      70:	cb 1d       	adc	r28, r11
      72:	cf 1d       	adc	r28, r15
      74:	d3 1d       	adc	r29, r3
      76:	d7 1d       	adc	r29, r7
      78:	db 1d       	adc	r29, r11
      7a:	de 1d       	adc	r29, r14
      7c:	e2 1d       	adc	r30, r2
      7e:	e6 1d       	adc	r30, r6
      80:	e9 1d       	adc	r30, r9
      82:	ec 1d       	adc	r30, r12
      84:	ef 1d       	adc	r30, r15
      86:	7b 1f       	adc	r23, r27
      88:	86 1f       	adc	r24, r22
      8a:	9a 1f       	adc	r25, r26
      8c:	b0 1f       	adc	r27, r16
      8e:	c3 1f       	adc	r28, r19
      90:	d1 1f       	adc	r29, r17
      92:	e2 1f       	adc	r30, r18
      94:	ec 1f       	adc	r30, r28
      96:	a1 2c       	mov	r10, r1
      98:	3d 2f       	mov	r19, r29
      9a:	ba 36       	cpi	r27, 0x6A	; 106
      9c:	bb 32       	cpi	r27, 0x2B	; 43
      9e:	fa 32       	cpi	r31, 0x2A	; 42
      a0:	7d 33       	cpi	r23, 0x3D	; 61
      a2:	61 34       	cpi	r22, 0x41	; 65
      a4:	e7 34       	cpi	r30, 0x47	; 71
      a6:	46 35       	cpi	r20, 0x56	; 86
      a8:	81 35       	cpi	r24, 0x51	; 81
      aa:	95 35       	cpi	r25, 0x55	; 85
      ac:	0f 1c       	adc	r0, r15
      ae:	c5 1c       	adc	r12, r5
      b0:	35 25       	eor	r19, r5
      b2:	58 25       	eor	r21, r8
      b4:	0d 26       	eor	r0, r29
      b6:	17 27       	eor	r17, r23
      b8:	a7 28       	or	r10, r7
      ba:	19 29       	or	r17, r9
      bc:	06 2a       	or	r0, r22
      be:	6c 2a       	or	r6, r28
      c0:	87 2a       	or	r8, r23
      c2:	a1 2c       	mov	r10, r1
      c4:	3d 2f       	mov	r19, r29
      c6:	c0 36       	cpi	r28, 0x60	; 96
      c8:	bb 32       	cpi	r27, 0x2B	; 43
      ca:	fa 32       	cpi	r31, 0x2A	; 42
      cc:	7d 33       	cpi	r23, 0x3D	; 61
      ce:	61 34       	cpi	r22, 0x41	; 65
      d0:	e7 34       	cpi	r30, 0x47	; 71
      d2:	46 35       	cpi	r20, 0x56	; 86
      d4:	81 35       	cpi	r24, 0x51	; 81
      d6:	95 35       	cpi	r25, 0x55	; 85
      d8:	a1 2c       	mov	r10, r1
      da:	3d 2f       	mov	r19, r29
      dc:	ec 18       	sub	r14, r12
      de:	bb 32       	cpi	r27, 0x2B	; 43
      e0:	fa 32       	cpi	r31, 0x2A	; 42
      e2:	7d 33       	cpi	r23, 0x3D	; 61
      e4:	61 34       	cpi	r22, 0x41	; 65
      e6:	e7 34       	cpi	r30, 0x47	; 71
      e8:	46 35       	cpi	r20, 0x56	; 86
      ea:	81 35       	cpi	r24, 0x51	; 81
      ec:	95 35       	cpi	r25, 0x55	; 85
      ee:	a1 2c       	mov	r10, r1
      f0:	3d 2f       	mov	r19, r29
      f2:	ba 36       	cpi	r27, 0x6A	; 106
      f4:	bb 32       	cpi	r27, 0x2B	; 43
      f6:	fa 32       	cpi	r31, 0x2A	; 42
      f8:	7d 33       	cpi	r23, 0x3D	; 61
      fa:	61 34       	cpi	r22, 0x41	; 65
      fc:	e7 34       	cpi	r30, 0x47	; 71
      fe:	46 35       	cpi	r20, 0x56	; 86
     100:	81 35       	cpi	r24, 0x51	; 81
     102:	9a 35       	cpi	r25, 0x5A	; 90
     104:	0f 1c       	adc	r0, r15
     106:	7a 38       	cpi	r23, 0x8A	; 138
     108:	35 25       	eor	r19, r5
     10a:	58 25       	eor	r21, r8
     10c:	0d 26       	eor	r0, r29
     10e:	17 27       	eor	r17, r23
     110:	a7 28       	or	r10, r7
     112:	19 29       	or	r17, r9
     114:	06 2a       	or	r0, r22
     116:	6c 2a       	or	r6, r28
     118:	87 2a       	or	r8, r23

0000011a <__trampolines_end>:
     11a:	c0 00       	.word	0x00c0	; ????
     11c:	e0 41       	sbci	r30, 0x10	; 16
     11e:	00 60       	ori	r16, 0x00	; 0
     120:	00 70       	andi	r16, 0x00	; 0
     122:	00 78       	andi	r16, 0x80	; 128
     124:	01 40       	sbci	r16, 0x01	; 1
     126:	03 40       	sbci	r16, 0x03	; 3
     128:	07 40       	sbci	r16, 0x07	; 7
     12a:	e0 01       	movw	r28, r0
     12c:	80 07       	cpc	r24, r16
     12e:	78 00       	.word	0x0078	; ????

00000130 <_ZL10dlySensStr>:
     130:	2d 2d 00 4c 37 00 4c 36 00 4c 35 00 4c 34 00 4c     --.L7.L6.L5.L4.L
     140:	33 00 4c 32 00 4c 31 00 52 31 00 52 32 00 52 33     3.L2.L1.R1.R2.R3
     150:	00 52 34 00 52 35 00 52 36 00 52 37 00              .R4.R5.R6.R7.

0000015d <_ZL11startIdxStr>:
     15d:	20 20 20 53 74 61 72 74 20 49 6e 64 65 78 20 20        Start Index  
	...

0000016e <_ZL11editSensStr>:
     16e:	45 64 69 74 20 53 65 6e 73 6f 72 00                 Edit Sensor.

0000017a <_ZL10idxMenuStr>:
     17a:	49 6e 64 65 78 20 4d 65 6e 75 00                    Index Menu.

00000185 <_ZL11progMenuStr>:
     185:	50 72 6f 67 20 4d 65 6e 75 00                       Prog Menu.

0000018f <_ZL10stopRunStr>:
     18f:	53 54 4f 50 00 52 55 4e 20 00                       STOP.RUN .

00000199 <_ZL9invNrmStr>:
     199:	49 6e 76 00 4e 72 6d 00                             Inv.Nrm.

000001a1 <_ZL8offOnStr>:
     1a1:	4f 46 46 00 4f 4e 20 00                             OFF.ON .

000001a9 <_ZL11lineModeStr>:
     1a9:	4e 6c 69 6e 65 00 43 6c 69 6e 65 00 53 6c 69 6e     Nline.Cline.Slin
     1b9:	65 00 4c 6c 69 6e 65 00 52 6c 69 6e 65 00           e.Lline.Rline.

000001c7 <_ZL10pidModeStr>:
     1c7:	52 44 43 00 44 49 46 00                             RDC.DIF.

000001cf <_ZL7settStr>:
     1cf:	20 52 75 6e 20 44 6c 79 20 00 00 00 00 00 20 54      Run Dly ..... T
     1df:	69 6d 65 6f 75 74 20 00 00 00 00 00 20 45 6e 64     imeout ..... End
     1ef:	20 42 72 61 6b 65 20 00 00 00 20 56 62 61 74 20      Brake ... Vbat 
     1ff:	43 6f 6d 70 20 00 00 00 20 44 69 61 67 6e 6f 73     Comp ... Diagnos
     20f:	74 69 63 73 00 00                                   tics..

00000215 <_ZL9idxCmdStr>:
     215:	52 75 6e 20 20 00 4c 65 66 74 20 00 52 69 67 68     Run  .Left .Righ
     225:	74 00 46 77 72 64 20 00 52 65 76 72 73 00 53 74     t.Fwrd .Revrs.St
     235:	6f 70 20 00 53 65 72 76 6f 00 47 6f 54 6f 20 00     op .Servo.GoTo .
     245:	45 6e 64 20 20 00                                   End  .

0000024b <_ZL10lineColStr>:
     24b:	41 42 57                                            ABW

0000024e <_ZL7menuStr>:
     24e:	20 50 72 6f 67 72 61 6d 00 00 00 00 00 00 00 00      Program........
     25e:	00 20 53 74 6f 70 20 61 74 20 69 00 00 00 00 00     . Stop at i.....
     26e:	00 00 20 43 68 65 63 6b 50 6f 69 6e 74 00 00 00     .. CheckPoint...
     27e:	00 00 00 20 53 65 74 20 50 44 20 00 00 00 00 00     ... Set PD .....
     28e:	00 00 00 00 20 53 65 6e 73 6f 72 20 43 6f 6e 66     .... Sensor Conf
     29e:	69 67 00 00 00 20 4d 6f 74 6f 72 20 4f 66 66 73     ig... Motor Offs
     2ae:	65 74 00 00 00 00 20 53 65 6c 66 54 65 73 74 00     et.... SelfTest.
     2be:	00 00 00 00 00 00 00 20 50 72 65 73 63 61 6c 65     ....... Prescale
     2ce:	72 73 00 00 00 00 00 00 20 56 62 61 74 20 00 00     rs...... Vbat ..
	...
     2e6:	00 20 53 65 74 74 69 6e 67 73 00 00 00 00 00 00     . Settings......
	...

000002f8 <_ZL9aboutDisp>:
     2f8:	20 50 4f 4c 49 4e 45 4d 41 20 32 30 31 39 20 20      POLINEMA 2019  
     308:	00 20 20 20 57 53 45 43 2d 32 33 20 41 42 20 20     .   WSEC-23 AB  
     318:	20 00                                                .

0000031a <__ctors_start>:
     31a:	8e 38       	cpi	r24, 0x8E	; 142

0000031c <__ctors_end>:
     31c:	11 24       	eor	r1, r1
     31e:	1f be       	out	0x3f, r1	; 63
     320:	cf e5       	ldi	r28, 0x5F	; 95
     322:	d8 e0       	ldi	r29, 0x08	; 8
     324:	de bf       	out	0x3e, r29	; 62
     326:	cd bf       	out	0x3d, r28	; 61

00000328 <__do_copy_data>:
     328:	13 e0       	ldi	r17, 0x03	; 3
     32a:	a0 e6       	ldi	r26, 0x60	; 96
     32c:	b0 e0       	ldi	r27, 0x00	; 0
     32e:	e6 e7       	ldi	r30, 0x76	; 118
     330:	fc e7       	ldi	r31, 0x7C	; 124
     332:	02 c0       	rjmp	.+4      	; 0x338 <__do_copy_data+0x10>
     334:	05 90       	lpm	r0, Z+
     336:	0d 92       	st	X+, r0
     338:	a2 3c       	cpi	r26, 0xC2	; 194
     33a:	b1 07       	cpc	r27, r17
     33c:	d9 f7       	brne	.-10     	; 0x334 <__do_copy_data+0xc>

0000033e <__do_clear_bss>:
     33e:	25 e0       	ldi	r18, 0x05	; 5
     340:	a2 ec       	ldi	r26, 0xC2	; 194
     342:	b3 e0       	ldi	r27, 0x03	; 3
     344:	01 c0       	rjmp	.+2      	; 0x348 <.do_clear_bss_start>

00000346 <.do_clear_bss_loop>:
     346:	1d 92       	st	X+, r1

00000348 <.do_clear_bss_start>:
     348:	a0 32       	cpi	r26, 0x20	; 32
     34a:	b2 07       	cpc	r27, r18
     34c:	e1 f7       	brne	.-8      	; 0x346 <.do_clear_bss_loop>

0000034e <__do_global_ctors>:
     34e:	11 e0       	ldi	r17, 0x01	; 1
     350:	ce e8       	ldi	r28, 0x8E	; 142
     352:	d1 e0       	ldi	r29, 0x01	; 1
     354:	04 c0       	rjmp	.+8      	; 0x35e <__do_global_ctors+0x10>
     356:	21 97       	sbiw	r28, 0x01	; 1
     358:	fe 01       	movw	r30, r28
     35a:	0e 94 da 3a 	call	0x75b4	; 0x75b4 <__tablejump2__>
     35e:	cd 38       	cpi	r28, 0x8D	; 141
     360:	d1 07       	cpc	r29, r17
     362:	c9 f7       	brne	.-14     	; 0x356 <__do_global_ctors+0x8>
     364:	0e 94 ba 15 	call	0x2b74	; 0x2b74 <main>
     368:	0c 94 39 3e 	jmp	0x7c72	; 0x7c72 <_exit>

0000036c <__bad_interrupt>:
     36c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000370 <_ZN4hI2C4InitEb>:
}
uint16_t I2CEEPROM::AllocBlock(uint16_t n){
	uint16_t tmp=_i2ceeprom_alloc_address;
	_i2ceeprom_alloc_address += n;
	return tmp;
}
     370:	61 11       	cpse	r22, r1
     372:	02 c0       	rjmp	.+4      	; 0x378 <_ZN4hI2C4InitEb+0x8>
     374:	88 e4       	ldi	r24, 0x48	; 72
     376:	01 c0       	rjmp	.+2      	; 0x37a <_ZN4hI2C4InitEb+0xa>
     378:	8c e0       	ldi	r24, 0x0C	; 12
     37a:	80 b9       	out	0x00, r24	; 0
     37c:	11 b8       	out	0x01, r1	; 1
     37e:	08 95       	ret

00000380 <_ZN4hI2C5StartEh>:
     380:	84 ea       	ldi	r24, 0xA4	; 164
     382:	86 bf       	out	0x36, r24	; 54
     384:	06 b6       	in	r0, 0x36	; 54
     386:	07 fe       	sbrs	r0, 7
     388:	fd cf       	rjmp	.-6      	; 0x384 <_ZN4hI2C5StartEh+0x4>
     38a:	81 b1       	in	r24, 0x01	; 1
     38c:	88 7f       	andi	r24, 0xF8	; 248
     38e:	88 30       	cpi	r24, 0x08	; 8
     390:	11 f0       	breq	.+4      	; 0x396 <_ZN4hI2C5StartEh+0x16>
     392:	80 31       	cpi	r24, 0x10	; 16
     394:	79 f4       	brne	.+30     	; 0x3b4 <_ZN4hI2C5StartEh+0x34>
     396:	63 b9       	out	0x03, r22	; 3
     398:	84 e8       	ldi	r24, 0x84	; 132
     39a:	86 bf       	out	0x36, r24	; 54
     39c:	06 b6       	in	r0, 0x36	; 54
     39e:	07 fe       	sbrs	r0, 7
     3a0:	fd cf       	rjmp	.-6      	; 0x39c <_ZN4hI2C5StartEh+0x1c>
     3a2:	91 b1       	in	r25, 0x01	; 1
     3a4:	98 7f       	andi	r25, 0xF8	; 248
     3a6:	98 31       	cpi	r25, 0x18	; 24
     3a8:	39 f0       	breq	.+14     	; 0x3b8 <_ZN4hI2C5StartEh+0x38>
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	90 34       	cpi	r25, 0x40	; 64
     3ae:	29 f0       	breq	.+10     	; 0x3ba <_ZN4hI2C5StartEh+0x3a>
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	08 95       	ret
     3b4:	80 e0       	ldi	r24, 0x00	; 0
     3b6:	08 95       	ret
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	08 95       	ret

000003bc <_ZN4hI2C4ReadEb>:
     3bc:	80 e4       	ldi	r24, 0x40	; 64
     3be:	68 9f       	mul	r22, r24
     3c0:	b0 01       	movw	r22, r0
     3c2:	11 24       	eor	r1, r1
     3c4:	64 68       	ori	r22, 0x84	; 132
     3c6:	66 bf       	out	0x36, r22	; 54
     3c8:	06 b6       	in	r0, 0x36	; 54
     3ca:	07 fe       	sbrs	r0, 7
     3cc:	fd cf       	rjmp	.-6      	; 0x3c8 <_ZN4hI2C4ReadEb+0xc>
     3ce:	83 b1       	in	r24, 0x03	; 3
     3d0:	08 95       	ret

000003d2 <_ZN4hI2C5WriteEh>:
     3d2:	63 b9       	out	0x03, r22	; 3
     3d4:	84 e8       	ldi	r24, 0x84	; 132
     3d6:	86 bf       	out	0x36, r24	; 54
     3d8:	06 b6       	in	r0, 0x36	; 54
     3da:	07 fe       	sbrs	r0, 7
     3dc:	fd cf       	rjmp	.-6      	; 0x3d8 <_ZN4hI2C5WriteEh+0x6>
     3de:	91 b1       	in	r25, 0x01	; 1
     3e0:	98 7f       	andi	r25, 0xF8	; 248
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	98 32       	cpi	r25, 0x28	; 40
     3e6:	09 f0       	breq	.+2      	; 0x3ea <_ZN4hI2C5WriteEh+0x18>
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	08 95       	ret

000003ec <_ZN4hI2C4StopEv>:
     3ec:	84 e9       	ldi	r24, 0x94	; 148
     3ee:	86 bf       	out	0x36, r24	; 54
     3f0:	08 95       	ret

000003f2 <_ZL7SysInitv>:
     3f2:	8f 9a       	sbi	0x11, 7	; 17
     3f4:	8a 9a       	sbi	0x11, 2	; 17
     3f6:	be 9a       	sbi	0x17, 6	; 23
     3f8:	c6 98       	cbi	0x18, 6	; 24
     3fa:	a3 9a       	sbi	0x14, 3	; 20
     3fc:	ab 98       	cbi	0x15, 3	; 21
     3fe:	a4 98       	cbi	0x14, 4	; 20
     400:	ac 9a       	sbi	0x15, 4	; 21
     402:	a2 98       	cbi	0x14, 2	; 20
     404:	aa 9a       	sbi	0x15, 2	; 21
     406:	a5 98       	cbi	0x14, 5	; 20
     408:	ad 9a       	sbi	0x15, 5	; 21
     40a:	ba 9a       	sbi	0x17, 2	; 23
     40c:	88 9a       	sbi	0x11, 0	; 17
     40e:	89 9a       	sbi	0x11, 1	; 17
     410:	08 95       	ret

00000412 <_ZL6arrcpyPhPKhh>:
     412:	dc 01       	movw	r26, r24
     414:	44 23       	and	r20, r20
     416:	71 f0       	breq	.+28     	; 0x434 <_ZL6arrcpyPhPKhh+0x22>
     418:	24 2f       	mov	r18, r20
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	21 50       	subi	r18, 0x01	; 1
     41e:	31 09       	sbc	r19, r1
     420:	fb 01       	movw	r30, r22
     422:	e2 0f       	add	r30, r18
     424:	f3 1f       	adc	r31, r19
     426:	90 81       	ld	r25, Z
     428:	fd 01       	movw	r30, r26
     42a:	e2 0f       	add	r30, r18
     42c:	f3 1f       	adc	r31, r19
     42e:	90 83       	st	Z, r25
     430:	41 50       	subi	r20, 0x01	; 1
     432:	91 f7       	brne	.-28     	; 0x418 <_ZL6arrcpyPhPKhh+0x6>
     434:	08 95       	ret

00000436 <_ZL11setMaskBytePhhh>:
     436:	cf 93       	push	r28
     438:	df 93       	push	r29
     43a:	ec 01       	movw	r28, r24
     43c:	20 e0       	ldi	r18, 0x00	; 0
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	a1 e0       	ldi	r26, 0x01	; 1
     446:	b0 e0       	ldi	r27, 0x00	; 0
     448:	fb 01       	movw	r30, r22
     44a:	02 2e       	mov	r0, r18
     44c:	02 c0       	rjmp	.+4      	; 0x452 <_ZL11setMaskBytePhhh+0x1c>
     44e:	f5 95       	asr	r31
     450:	e7 95       	ror	r30
     452:	0a 94       	dec	r0
     454:	e2 f7       	brpl	.-8      	; 0x44e <_ZL11setMaskBytePhhh+0x18>
     456:	e0 ff       	sbrs	r30, 0
     458:	1e c0       	rjmp	.+60     	; 0x496 <_ZL11setMaskBytePhhh+0x60>
     45a:	fa 01       	movw	r30, r20
     45c:	02 2e       	mov	r0, r18
     45e:	02 c0       	rjmp	.+4      	; 0x464 <_ZL11setMaskBytePhhh+0x2e>
     460:	f5 95       	asr	r31
     462:	e7 95       	ror	r30
     464:	0a 94       	dec	r0
     466:	e2 f7       	brpl	.-8      	; 0x460 <_ZL11setMaskBytePhhh+0x2a>
     468:	e0 ff       	sbrs	r30, 0
     46a:	0a c0       	rjmp	.+20     	; 0x480 <_ZL11setMaskBytePhhh+0x4a>
     46c:	fd 01       	movw	r30, r26
     46e:	02 2e       	mov	r0, r18
     470:	02 c0       	rjmp	.+4      	; 0x476 <_ZL11setMaskBytePhhh+0x40>
     472:	ee 0f       	add	r30, r30
     474:	ff 1f       	adc	r31, r31
     476:	0a 94       	dec	r0
     478:	e2 f7       	brpl	.-8      	; 0x472 <_ZL11setMaskBytePhhh+0x3c>
     47a:	88 81       	ld	r24, Y
     47c:	e8 2b       	or	r30, r24
     47e:	0a c0       	rjmp	.+20     	; 0x494 <_ZL11setMaskBytePhhh+0x5e>
     480:	fd 01       	movw	r30, r26
     482:	02 2e       	mov	r0, r18
     484:	02 c0       	rjmp	.+4      	; 0x48a <_ZL11setMaskBytePhhh+0x54>
     486:	ee 0f       	add	r30, r30
     488:	ff 1f       	adc	r31, r31
     48a:	0a 94       	dec	r0
     48c:	e2 f7       	brpl	.-8      	; 0x486 <_ZL11setMaskBytePhhh+0x50>
     48e:	e0 95       	com	r30
     490:	98 81       	ld	r25, Y
     492:	e9 23       	and	r30, r25
     494:	e8 83       	st	Y, r30
     496:	2f 5f       	subi	r18, 0xFF	; 255
     498:	3f 4f       	sbci	r19, 0xFF	; 255
     49a:	28 30       	cpi	r18, 0x08	; 8
     49c:	31 05       	cpc	r19, r1
     49e:	a1 f6       	brne	.-88     	; 0x448 <_ZL11setMaskBytePhhh+0x12>
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	08 95       	ret

000004a6 <_ZL8readVbatv>:
     4a6:	17 b8       	out	0x07, r1	; 7
     4a8:	85 e3       	ldi	r24, 0x35	; 53
     4aa:	8a 95       	dec	r24
     4ac:	f1 f7       	brne	.-4      	; 0x4aa <_ZL8readVbatv+0x4>
     4ae:	00 00       	nop
     4b0:	36 9a       	sbi	0x06, 6	; 6
     4b2:	34 9b       	sbis	0x06, 4	; 6
     4b4:	fe cf       	rjmp	.-4      	; 0x4b2 <_ZL8readVbatv+0xc>
     4b6:	34 9a       	sbi	0x06, 4	; 6
     4b8:	64 b1       	in	r22, 0x04	; 4
     4ba:	75 b1       	in	r23, 0x05	; 5
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
     4c4:	2e e4       	ldi	r18, 0x4E	; 78
     4c6:	32 e6       	ldi	r19, 0x62	; 98
     4c8:	4c e9       	ldi	r20, 0x9C	; 156
     4ca:	50 e4       	ldi	r21, 0x40	; 64
     4cc:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
     4d0:	28 eb       	ldi	r18, 0xB8	; 184
     4d2:	3f ea       	ldi	r19, 0xAF	; 175
     4d4:	43 ea       	ldi	r20, 0xA3	; 163
     4d6:	5e e3       	ldi	r21, 0x3E	; 62
     4d8:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	4a e7       	ldi	r20, 0x7A	; 122
     4e2:	53 e4       	ldi	r21, 0x43	; 67
     4e4:	0e 94 ab 38 	call	0x7156	; 0x7156 <__addsf3>
     4e8:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
     4ec:	cb 01       	movw	r24, r22
     4ee:	08 95       	ret

000004f0 <_ZL14updateSensOffsv>:
     4f0:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <_ZL6gpVar2>
     4f4:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <_ZL6gpVar2>
     4f8:	8e 30       	cpi	r24, 0x0E	; 14
     4fa:	a0 f4       	brcc	.+40     	; 0x524 <_ZL14updateSensOffsv+0x34>
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	fc 01       	movw	r30, r24
     500:	ee 0f       	add	r30, r30
     502:	ff 1f       	adc	r31, r31
     504:	e6 53       	subi	r30, 0x36	; 54
     506:	fb 4f       	sbci	r31, 0xFB	; 251
     508:	60 81       	ld	r22, Z
     50a:	71 81       	ldd	r23, Z+1	; 0x01
     50c:	88 0f       	add	r24, r24
     50e:	99 1f       	adc	r25, r25
     510:	80 50       	subi	r24, 0x00	; 0
     512:	90 40       	sbci	r25, 0x00	; 0
     514:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
     518:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <_ZL6gpVar2>
     51c:	8f 5f       	subi	r24, 0xFF	; 255
     51e:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <_ZL6gpVar2>
     522:	e8 cf       	rjmp	.-48     	; 0x4f4 <_ZL14updateSensOffsv+0x4>
     524:	08 95       	ret

00000526 <_ZL13updateSensCfgv>:
     526:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ZL6useATC>
     52a:	88 23       	and	r24, r24
     52c:	89 f0       	breq	.+34     	; 0x550 <_ZL13updateSensCfgv+0x2a>
     52e:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <_ZL6sensLo>
     532:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
     536:	80 e2       	ldi	r24, 0x20	; 32
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
     53e:	60 91 11 04 	lds	r22, 0x0411	; 0x800411 <_ZL6sensHi>
     542:	70 91 12 04 	lds	r23, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
     546:	8e e1       	ldi	r24, 0x1E	; 30
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
     54e:	08 95       	ret
     550:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <_ZL6sensLo>
     554:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
     558:	82 e2       	ldi	r24, 0x22	; 34
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
     560:	60 91 11 04 	lds	r22, 0x0411	; 0x800411 <_ZL6sensHi>
     564:	70 91 12 04 	lds	r23, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
     568:	84 e2       	ldi	r24, 0x24	; 36
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
     570:	08 95       	ret

00000572 <_ZL14updateStartIdxv>:
     572:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
     576:	81 11       	cpse	r24, r1
     578:	0b c0       	rjmp	.+22     	; 0x590 <_ZL14updateStartIdxv+0x1e>
     57a:	e3 e7       	ldi	r30, 0x73	; 115
     57c:	f4 e0       	ldi	r31, 0x04	; 4
     57e:	ab e6       	ldi	r26, 0x6B	; 107
     580:	b4 e0       	ldi	r27, 0x04	; 4
     582:	15 96       	adiw	r26, 0x05	; 5
     584:	8c 91       	ld	r24, X
     586:	15 97       	sbiw	r26, 0x05	; 5
     588:	80 83       	st	Z, r24
     58a:	16 96       	adiw	r26, 0x06	; 6
     58c:	8c 91       	ld	r24, X
     58e:	81 83       	std	Z+1, r24	; 0x01
     590:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <_ZL7progInv>
     594:	88 23       	and	r24, r24
     596:	21 f0       	breq	.+8      	; 0x5a0 <_ZL14updateStartIdxv+0x2e>
     598:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_ZL8startIdx+0x1>
     59c:	80 68       	ori	r24, 0x80	; 128
     59e:	03 c0       	rjmp	.+6      	; 0x5a6 <_ZL14updateStartIdxv+0x34>
     5a0:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_ZL8startIdx+0x1>
     5a4:	8f 77       	andi	r24, 0x7F	; 127
     5a6:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <_ZL8startIdx+0x1>
     5aa:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	66 0f       	add	r22, r22
     5b2:	77 1f       	adc	r23, r23
     5b4:	6f 5a       	subi	r22, 0xAF	; 175
     5b6:	7f 4f       	sbci	r23, 0xFF	; 255
     5b8:	42 e0       	ldi	r20, 0x02	; 2
     5ba:	50 e0       	ldi	r21, 0x00	; 0
     5bc:	83 e7       	ldi	r24, 0x73	; 115
     5be:	94 e0       	ldi	r25, 0x04	; 4
     5c0:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
     5c4:	08 95       	ret

000005c6 <_ZL13updateConfMemv>:
     5c6:	43 e0       	ldi	r20, 0x03	; 3
     5c8:	50 e0       	ldi	r21, 0x00	; 0
     5ca:	6e e2       	ldi	r22, 0x2E	; 46
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	8e e4       	ldi	r24, 0x4E	; 78
     5d0:	94 e0       	ldi	r25, 0x04	; 4
     5d2:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
     5d6:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
     5da:	82 e3       	ldi	r24, 0x32	; 50
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     5e2:	60 91 4d 04 	lds	r22, 0x044D	; 0x80044d <_ZL7scanVel>
     5e6:	81 e3       	ldi	r24, 0x31	; 49
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     5ee:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <_ZL6prescT>
     5f2:	8d e2       	ldi	r24, 0x2D	; 45
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     5fa:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
     5fe:	8c e2       	ldi	r24, 0x2C	; 44
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     606:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <_ZL8mtrOffsL>
     60a:	8b e2       	ldi	r24, 0x2B	; 43
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     612:	60 91 65 00 	lds	r22, 0x0065	; 0x800065 <_ZL8mtrOffsR>
     616:	8a e2       	ldi	r24, 0x2A	; 42
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     61e:	60 91 4a 04 	lds	r22, 0x044A	; 0x80044a <_ZL9vVbatComp>
     622:	89 e2       	ldi	r24, 0x29	; 41
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     62a:	60 91 4c 04 	lds	r22, 0x044C	; 0x80044c <_ZL6runDly>
     62e:	88 e2       	ldi	r24, 0x28	; 40
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     636:	60 91 4b 04 	lds	r22, 0x044B	; 0x80044b <_ZL8toutTime>
     63a:	87 e2       	ldi	r24, 0x27	; 39
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     642:	60 91 3b 04 	lds	r22, 0x043B	; 0x80043b <_ZL9brakeTime>
     646:	8d e1       	ldi	r24, 0x1D	; 29
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     64e:	60 91 ca 03 	lds	r22, 0x03CA	; 0x8003ca <_ZL6useATC>
     652:	66 0f       	add	r22, r22
     654:	86 e2       	ldi	r24, 0x26	; 38
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
     65c:	08 95       	ret

0000065e <_ZL11readConfMemv>:
     65e:	cf 93       	push	r28
     660:	43 e0       	ldi	r20, 0x03	; 3
     662:	50 e0       	ldi	r21, 0x00	; 0
     664:	6e e2       	ldi	r22, 0x2E	; 46
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	8e e4       	ldi	r24, 0x4E	; 78
     66a:	94 e0       	ldi	r25, 0x04	; 4
     66c:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
     670:	82 e3       	ldi	r24, 0x32	; 50
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     678:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <_ZL7progSel>
     67c:	81 e3       	ldi	r24, 0x31	; 49
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     684:	80 93 4d 04 	sts	0x044D, r24	; 0x80044d <_ZL7scanVel>
     688:	8d e2       	ldi	r24, 0x2D	; 45
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     690:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <_ZL6prescT>
     694:	8c e2       	ldi	r24, 0x2C	; 44
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     69c:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <_ZL6prescD>
     6a0:	8b e2       	ldi	r24, 0x2B	; 43
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6a8:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <_ZL8mtrOffsL>
     6ac:	8a e2       	ldi	r24, 0x2A	; 42
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6b4:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <_ZL8mtrOffsR>
     6b8:	89 e2       	ldi	r24, 0x29	; 41
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6c0:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <_ZL9vVbatComp>
     6c4:	88 e2       	ldi	r24, 0x28	; 40
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6cc:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <_ZL6runDly>
     6d0:	87 e2       	ldi	r24, 0x27	; 39
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6d8:	80 93 4b 04 	sts	0x044B, r24	; 0x80044b <_ZL8toutTime>
     6dc:	86 e2       	ldi	r24, 0x26	; 38
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6e4:	c8 2f       	mov	r28, r24
     6e6:	8d e1       	ldi	r24, 0x1D	; 29
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
     6ee:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <_ZL9brakeTime>
     6f2:	c6 95       	lsr	r28
     6f4:	c1 70       	andi	r28, 0x01	; 1
     6f6:	c0 93 ca 03 	sts	0x03CA, r28	; 0x8003ca <_ZL6useATC>
     6fa:	cf 91       	pop	r28
     6fc:	08 95       	ret

000006fe <_ZL12readStartIdxv>:
     6fe:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	66 0f       	add	r22, r22
     706:	77 1f       	adc	r23, r23
     708:	6f 5a       	subi	r22, 0xAF	; 175
     70a:	7f 4f       	sbci	r23, 0xFF	; 255
     70c:	42 e0       	ldi	r20, 0x02	; 2
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	83 e7       	ldi	r24, 0x73	; 115
     712:	94 e0       	ldi	r25, 0x04	; 4
     714:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
     718:	e3 e7       	ldi	r30, 0x73	; 115
     71a:	f4 e0       	ldi	r31, 0x04	; 4
     71c:	81 81       	ldd	r24, Z+1	; 0x01
     71e:	98 2f       	mov	r25, r24
     720:	99 1f       	adc	r25, r25
     722:	99 27       	eor	r25, r25
     724:	99 1f       	adc	r25, r25
     726:	90 93 c5 03 	sts	0x03C5, r25	; 0x8003c5 <_ZL7progInv>
     72a:	8f 77       	andi	r24, 0x7F	; 127
     72c:	81 83       	std	Z+1, r24	; 0x01
     72e:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <_ZL6idxSel>
     732:	91 11       	cpse	r25, r1
     734:	06 c0       	rjmp	.+12     	; 0x742 <_ZL12readStartIdxv+0x44>
     736:	eb e6       	ldi	r30, 0x6B	; 107
     738:	f4 e0       	ldi	r31, 0x04	; 4
     73a:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <_ZL8startIdx>
     73e:	95 83       	std	Z+5, r25	; 0x05
     740:	86 83       	std	Z+6, r24	; 0x06
     742:	08 95       	ret

00000744 <_ZL11readSensCfgv>:
     744:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ZL6useATC>
     748:	88 23       	and	r24, r24
     74a:	89 f0       	breq	.+34     	; 0x76e <_ZL11readSensCfgv+0x2a>
     74c:	80 e2       	ldi	r24, 0x20	; 32
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	0e 94 d5 3d 	call	0x7baa	; 0x7baa <eeprom_read_word>
     754:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <_ZL6sensLo+0x1>
     758:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <_ZL6sensLo>
     75c:	8e e1       	ldi	r24, 0x1E	; 30
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	0e 94 d5 3d 	call	0x7baa	; 0x7baa <eeprom_read_word>
     764:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <_ZL6sensHi+0x1>
     768:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <_ZL6sensHi>
     76c:	08 95       	ret
     76e:	82 e2       	ldi	r24, 0x22	; 34
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0e 94 d5 3d 	call	0x7baa	; 0x7baa <eeprom_read_word>
     776:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <_ZL6sensLo+0x1>
     77a:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <_ZL6sensLo>
     77e:	84 e2       	ldi	r24, 0x24	; 36
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	0e 94 d5 3d 	call	0x7baa	; 0x7baa <eeprom_read_word>
     786:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <_ZL6sensHi+0x1>
     78a:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <_ZL6sensHi>
     78e:	08 95       	ret

00000790 <_ZL12readSensOffsv>:
     790:	ef 92       	push	r14
     792:	ff 92       	push	r15
     794:	0f 93       	push	r16
     796:	1f 93       	push	r17
     798:	cf 93       	push	r28
     79a:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <_ZL6gpVar2>
     79e:	00 e0       	ldi	r16, 0x00	; 0
     7a0:	10 e0       	ldi	r17, 0x00	; 0
     7a2:	0f 2e       	mov	r0, r31
     7a4:	fa ec       	ldi	r31, 0xCA	; 202
     7a6:	ef 2e       	mov	r14, r31
     7a8:	f4 e0       	ldi	r31, 0x04	; 4
     7aa:	ff 2e       	mov	r15, r31
     7ac:	f0 2d       	mov	r31, r0
     7ae:	c1 e0       	ldi	r28, 0x01	; 1
     7b0:	c8 01       	movw	r24, r16
     7b2:	0e 94 d5 3d 	call	0x7baa	; 0x7baa <eeprom_read_word>
     7b6:	f7 01       	movw	r30, r14
     7b8:	81 93       	st	Z+, r24
     7ba:	91 93       	st	Z+, r25
     7bc:	7f 01       	movw	r14, r30
     7be:	c0 93 3e 04 	sts	0x043E, r28	; 0x80043e <_ZL6gpVar2>
     7c2:	cf 5f       	subi	r28, 0xFF	; 255
     7c4:	0e 5f       	subi	r16, 0xFE	; 254
     7c6:	1f 4f       	sbci	r17, 0xFF	; 255
     7c8:	cf 30       	cpi	r28, 0x0F	; 15
     7ca:	91 f7       	brne	.-28     	; 0x7b0 <_ZL12readSensOffsv+0x20>
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	0f 91       	pop	r16
     7d2:	ff 90       	pop	r15
     7d4:	ef 90       	pop	r14
     7d6:	08 95       	ret

000007d8 <_ZL11readSensMemv>:
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <_ZL9indexBuff+0x1>
     7e0:	8f 71       	andi	r24, 0x1F	; 31
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	88 0f       	add	r24, r24
     7e6:	99 1f       	adc	r25, r25
     7e8:	85 5b       	subi	r24, 0xB5	; 181
     7ea:	9e 4f       	sbci	r25, 0xFE	; 254
     7ec:	0e 94 d5 3d 	call	0x7baa	; 0x7baa <eeprom_read_word>
     7f0:	20 91 c5 03 	lds	r18, 0x03C5	; 0x8003c5 <_ZL7progInv>
     7f4:	22 23       	and	r18, r18
     7f6:	09 f4       	brne	.+2      	; 0x7fa <_ZL11readSensMemv+0x22>
     7f8:	41 c0       	rjmp	.+130    	; 0x87c <__stack+0x1d>
     7fa:	40 91 2b 04 	lds	r20, 0x042B	; 0x80042b <_ZL8sensMask>
     7fe:	50 91 2c 04 	lds	r21, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	ad e0       	ldi	r26, 0x0D	; 13
     808:	b0 e0       	ldi	r27, 0x00	; 0
     80a:	e1 e0       	ldi	r30, 0x01	; 1
     80c:	f0 e0       	ldi	r31, 0x00	; 0
     80e:	bd 01       	movw	r22, r26
     810:	62 1b       	sub	r22, r18
     812:	73 0b       	sbc	r23, r19
     814:	ec 01       	movw	r28, r24
     816:	02 c0       	rjmp	.+4      	; 0x81c <_ZL11readSensMemv+0x44>
     818:	d6 95       	lsr	r29
     81a:	c7 95       	ror	r28
     81c:	6a 95       	dec	r22
     81e:	e2 f7       	brpl	.-8      	; 0x818 <_ZL11readSensMemv+0x40>
     820:	c0 ff       	sbrs	r28, 0
     822:	0a c0       	rjmp	.+20     	; 0x838 <_ZL11readSensMemv+0x60>
     824:	bf 01       	movw	r22, r30
     826:	02 2e       	mov	r0, r18
     828:	02 c0       	rjmp	.+4      	; 0x82e <_ZL11readSensMemv+0x56>
     82a:	66 0f       	add	r22, r22
     82c:	77 1f       	adc	r23, r23
     82e:	0a 94       	dec	r0
     830:	e2 f7       	brpl	.-8      	; 0x82a <_ZL11readSensMemv+0x52>
     832:	46 2b       	or	r20, r22
     834:	57 2b       	or	r21, r23
     836:	0b c0       	rjmp	.+22     	; 0x84e <_ZL11readSensMemv+0x76>
     838:	bf 01       	movw	r22, r30
     83a:	02 2e       	mov	r0, r18
     83c:	02 c0       	rjmp	.+4      	; 0x842 <_ZL11readSensMemv+0x6a>
     83e:	66 0f       	add	r22, r22
     840:	77 1f       	adc	r23, r23
     842:	0a 94       	dec	r0
     844:	e2 f7       	brpl	.-8      	; 0x83e <_ZL11readSensMemv+0x66>
     846:	60 95       	com	r22
     848:	70 95       	com	r23
     84a:	46 23       	and	r20, r22
     84c:	57 23       	and	r21, r23
     84e:	2f 5f       	subi	r18, 0xFF	; 255
     850:	3f 4f       	sbci	r19, 0xFF	; 255
     852:	2e 30       	cpi	r18, 0x0E	; 14
     854:	31 05       	cpc	r19, r1
     856:	d9 f6       	brne	.-74     	; 0x80e <_ZL11readSensMemv+0x36>
     858:	2e e0       	ldi	r18, 0x0E	; 14
     85a:	20 93 3e 04 	sts	0x043E, r18	; 0x80043e <_ZL6gpVar2>
     85e:	96 ff       	sbrs	r25, 6
     860:	02 c0       	rjmp	.+4      	; 0x866 <__stack+0x7>
     862:	50 64       	ori	r21, 0x40	; 64
     864:	01 c0       	rjmp	.+2      	; 0x868 <__stack+0x9>
     866:	5f 7b       	andi	r21, 0xBF	; 191
     868:	99 23       	and	r25, r25
     86a:	14 f4       	brge	.+4      	; 0x870 <__stack+0x11>
     86c:	50 68       	ori	r21, 0x80	; 128
     86e:	01 c0       	rjmp	.+2      	; 0x872 <__stack+0x13>
     870:	5f 77       	andi	r21, 0x7F	; 127
     872:	50 93 2c 04 	sts	0x042C, r21	; 0x80042c <_ZL8sensMask+0x1>
     876:	40 93 2b 04 	sts	0x042B, r20	; 0x80042b <_ZL8sensMask>
     87a:	04 c0       	rjmp	.+8      	; 0x884 <__stack+0x25>
     87c:	90 93 2c 04 	sts	0x042C, r25	; 0x80042c <_ZL8sensMask+0x1>
     880:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <_ZL8sensMask>
     884:	df 91       	pop	r29
     886:	cf 91       	pop	r28
     888:	08 95       	ret

0000088a <_ZN8MotorLib4InitEv>:
     88a:	8b 9a       	sbi	0x11, 3	; 17
     88c:	8c 9a       	sbi	0x11, 4	; 17
     88e:	8e 9a       	sbi	0x11, 6	; 17
     890:	8d 9a       	sbi	0x11, 5	; 17
     892:	83 ea       	ldi	r24, 0xA3	; 163
     894:	8f bd       	out	0x2f, r24	; 47
     896:	82 e0       	ldi	r24, 0x02	; 2
     898:	8e bd       	out	0x2e, r24	; 46
     89a:	08 95       	ret

0000089c <_ZN8MotorLib5DriveEii>:
     89c:	4f 92       	push	r4
     89e:	5f 92       	push	r5
     8a0:	6f 92       	push	r6
     8a2:	7f 92       	push	r7
     8a4:	af 92       	push	r10
     8a6:	bf 92       	push	r11
     8a8:	cf 92       	push	r12
     8aa:	df 92       	push	r13
     8ac:	ef 92       	push	r14
     8ae:	ff 92       	push	r15
     8b0:	0f 93       	push	r16
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
     8b8:	ec 01       	movw	r28, r24
     8ba:	8b 01       	movw	r16, r22
     8bc:	5a 01       	movw	r10, r20
     8be:	6a 81       	ldd	r22, Y+2	; 0x02
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	48 ec       	ldi	r20, 0xC8	; 200
     8d0:	52 e4       	ldi	r21, 0x42	; 66
     8d2:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
     8d6:	6b 01       	movw	r12, r22
     8d8:	7c 01       	movw	r14, r24
     8da:	b8 01       	movw	r22, r16
     8dc:	11 0f       	add	r17, r17
     8de:	88 0b       	sbc	r24, r24
     8e0:	99 0b       	sbc	r25, r25
     8e2:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
     8e6:	9b 01       	movw	r18, r22
     8e8:	ac 01       	movw	r20, r24
     8ea:	c7 01       	movw	r24, r14
     8ec:	b6 01       	movw	r22, r12
     8ee:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
     8f2:	0e 94 89 39 	call	0x7312	; 0x7312 <__fixsfsi>
     8f6:	6b 01       	movw	r12, r22
     8f8:	7c 01       	movw	r14, r24
     8fa:	8b 01       	movw	r16, r22
     8fc:	6b 81       	ldd	r22, Y+3	; 0x03
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
     908:	20 e0       	ldi	r18, 0x00	; 0
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	48 ec       	ldi	r20, 0xC8	; 200
     90e:	52 e4       	ldi	r21, 0x42	; 66
     910:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
     914:	2b 01       	movw	r4, r22
     916:	3c 01       	movw	r6, r24
     918:	b5 01       	movw	r22, r10
     91a:	bb 0c       	add	r11, r11
     91c:	88 0b       	sbc	r24, r24
     91e:	99 0b       	sbc	r25, r25
     920:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
     924:	9b 01       	movw	r18, r22
     926:	ac 01       	movw	r20, r24
     928:	c3 01       	movw	r24, r6
     92a:	b2 01       	movw	r22, r4
     92c:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
     930:	0e 94 89 39 	call	0x7312	; 0x7312 <__fixsfsi>
     934:	9b 01       	movw	r18, r22
     936:	dd 20       	and	r13, r13
     938:	94 f4       	brge	.+36     	; 0x95e <_ZN8MotorLib5DriveEii+0xc2>
     93a:	48 81       	ld	r20, Y
     93c:	59 81       	ldd	r21, Y+1	; 0x01
     93e:	d1 94       	neg	r13
     940:	c1 94       	neg	r12
     942:	d1 08       	sbc	r13, r1
     944:	4c 15       	cp	r20, r12
     946:	5d 05       	cpc	r21, r13
     948:	24 f4       	brge	.+8      	; 0x952 <_ZN8MotorLib5DriveEii+0xb6>
     94a:	00 27       	eor	r16, r16
     94c:	11 27       	eor	r17, r17
     94e:	04 1b       	sub	r16, r20
     950:	15 0b       	sbc	r17, r21
     952:	01 50       	subi	r16, 0x01	; 1
     954:	1c 4f       	sbci	r17, 0xFC	; 252
     956:	19 bd       	out	0x29, r17	; 41
     958:	08 bd       	out	0x28, r16	; 40
     95a:	93 9a       	sbi	0x12, 3	; 18
     95c:	09 c0       	rjmp	.+18     	; 0x970 <_ZN8MotorLib5DriveEii+0xd4>
     95e:	48 81       	ld	r20, Y
     960:	59 81       	ldd	r21, Y+1	; 0x01
     962:	4c 15       	cp	r20, r12
     964:	5d 05       	cpc	r21, r13
     966:	0c f4       	brge	.+2      	; 0x96a <_ZN8MotorLib5DriveEii+0xce>
     968:	6a 01       	movw	r12, r20
     96a:	d9 bc       	out	0x29, r13	; 41
     96c:	c8 bc       	out	0x28, r12	; 40
     96e:	93 98       	cbi	0x12, 3	; 18
     970:	33 23       	and	r19, r19
     972:	94 f4       	brge	.+36     	; 0x998 <_ZN8MotorLib5DriveEii+0xfc>
     974:	48 81       	ld	r20, Y
     976:	59 81       	ldd	r21, Y+1	; 0x01
     978:	71 95       	neg	r23
     97a:	61 95       	neg	r22
     97c:	71 09       	sbc	r23, r1
     97e:	46 17       	cp	r20, r22
     980:	57 07       	cpc	r21, r23
     982:	24 f4       	brge	.+8      	; 0x98c <_ZN8MotorLib5DriveEii+0xf0>
     984:	22 27       	eor	r18, r18
     986:	33 27       	eor	r19, r19
     988:	24 1b       	sub	r18, r20
     98a:	35 0b       	sbc	r19, r21
     98c:	21 50       	subi	r18, 0x01	; 1
     98e:	3c 4f       	sbci	r19, 0xFC	; 252
     990:	3b bd       	out	0x2b, r19	; 43
     992:	2a bd       	out	0x2a, r18	; 42
     994:	96 9a       	sbi	0x12, 6	; 18
     996:	09 c0       	rjmp	.+18     	; 0x9aa <_ZN8MotorLib5DriveEii+0x10e>
     998:	28 81       	ld	r18, Y
     99a:	39 81       	ldd	r19, Y+1	; 0x01
     99c:	26 17       	cp	r18, r22
     99e:	37 07       	cpc	r19, r23
     9a0:	0c f4       	brge	.+2      	; 0x9a4 <_ZN8MotorLib5DriveEii+0x108>
     9a2:	b9 01       	movw	r22, r18
     9a4:	7b bd       	out	0x2b, r23	; 43
     9a6:	6a bd       	out	0x2a, r22	; 42
     9a8:	96 98       	cbi	0x12, 6	; 18
     9aa:	df 91       	pop	r29
     9ac:	cf 91       	pop	r28
     9ae:	1f 91       	pop	r17
     9b0:	0f 91       	pop	r16
     9b2:	ff 90       	pop	r15
     9b4:	ef 90       	pop	r14
     9b6:	df 90       	pop	r13
     9b8:	cf 90       	pop	r12
     9ba:	bf 90       	pop	r11
     9bc:	af 90       	pop	r10
     9be:	7f 90       	pop	r7
     9c0:	6f 90       	pop	r6
     9c2:	5f 90       	pop	r5
     9c4:	4f 90       	pop	r4
     9c6:	08 95       	ret

000009c8 <_ZN4PLCD4SendEbh>:
     9c8:	fc 01       	movw	r30, r24
     9ca:	66 23       	and	r22, r22
     9cc:	19 f0       	breq	.+6      	; 0x9d4 <_ZN4PLCD4SendEbh+0xc>
     9ce:	88 b3       	in	r24, 0x18	; 24
     9d0:	81 60       	ori	r24, 0x01	; 1
     9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <_ZN4PLCD4SendEbh+0x10>
     9d4:	88 b3       	in	r24, 0x18	; 24
     9d6:	8e 7f       	andi	r24, 0xFE	; 254
     9d8:	88 bb       	out	0x18, r24	; 24
     9da:	44 ff       	sbrs	r20, 4
     9dc:	03 c0       	rjmp	.+6      	; 0x9e4 <_ZN4PLCD4SendEbh+0x1c>
     9de:	88 b3       	in	r24, 0x18	; 24
     9e0:	88 60       	ori	r24, 0x08	; 8
     9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <_ZN4PLCD4SendEbh+0x20>
     9e4:	88 b3       	in	r24, 0x18	; 24
     9e6:	87 7f       	andi	r24, 0xF7	; 247
     9e8:	88 bb       	out	0x18, r24	; 24
     9ea:	45 ff       	sbrs	r20, 5
     9ec:	03 c0       	rjmp	.+6      	; 0x9f4 <_ZN4PLCD4SendEbh+0x2c>
     9ee:	88 b3       	in	r24, 0x18	; 24
     9f0:	80 61       	ori	r24, 0x10	; 16
     9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <_ZN4PLCD4SendEbh+0x30>
     9f4:	88 b3       	in	r24, 0x18	; 24
     9f6:	8f 7e       	andi	r24, 0xEF	; 239
     9f8:	88 bb       	out	0x18, r24	; 24
     9fa:	46 ff       	sbrs	r20, 6
     9fc:	03 c0       	rjmp	.+6      	; 0xa04 <_ZN4PLCD4SendEbh+0x3c>
     9fe:	88 b3       	in	r24, 0x18	; 24
     a00:	80 62       	ori	r24, 0x20	; 32
     a02:	02 c0       	rjmp	.+4      	; 0xa08 <_ZN4PLCD4SendEbh+0x40>
     a04:	88 b3       	in	r24, 0x18	; 24
     a06:	8f 7d       	andi	r24, 0xDF	; 223
     a08:	88 bb       	out	0x18, r24	; 24
     a0a:	44 23       	and	r20, r20
     a0c:	1c f4       	brge	.+6      	; 0xa14 <_ZN4PLCD4SendEbh+0x4c>
     a0e:	88 b3       	in	r24, 0x18	; 24
     a10:	80 68       	ori	r24, 0x80	; 128
     a12:	02 c0       	rjmp	.+4      	; 0xa18 <_ZN4PLCD4SendEbh+0x50>
     a14:	88 b3       	in	r24, 0x18	; 24
     a16:	8f 77       	andi	r24, 0x7F	; 127
     a18:	88 bb       	out	0x18, r24	; 24
     a1a:	a3 81       	ldd	r26, Z+3	; 0x03
     a1c:	b4 81       	ldd	r27, Z+4	; 0x04
     a1e:	5c 91       	ld	r21, X
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	9c 01       	movw	r18, r24
     a26:	05 80       	ldd	r0, Z+5	; 0x05
     a28:	02 c0       	rjmp	.+4      	; 0xa2e <_ZN4PLCD4SendEbh+0x66>
     a2a:	22 0f       	add	r18, r18
     a2c:	33 1f       	adc	r19, r19
     a2e:	0a 94       	dec	r0
     a30:	e2 f7       	brpl	.-8      	; 0xa2a <_ZN4PLCD4SendEbh+0x62>
     a32:	25 2b       	or	r18, r21
     a34:	2c 93       	st	X, r18
     a36:	a3 81       	ldd	r26, Z+3	; 0x03
     a38:	b4 81       	ldd	r27, Z+4	; 0x04
     a3a:	2c 91       	ld	r18, X
     a3c:	05 80       	ldd	r0, Z+5	; 0x05
     a3e:	02 c0       	rjmp	.+4      	; 0xa44 <_ZN4PLCD4SendEbh+0x7c>
     a40:	88 0f       	add	r24, r24
     a42:	99 1f       	adc	r25, r25
     a44:	0a 94       	dec	r0
     a46:	e2 f7       	brpl	.-8      	; 0xa40 <_ZN4PLCD4SendEbh+0x78>
     a48:	80 95       	com	r24
     a4a:	82 23       	and	r24, r18
     a4c:	8c 93       	st	X, r24
     a4e:	40 ff       	sbrs	r20, 0
     a50:	03 c0       	rjmp	.+6      	; 0xa58 <_ZN4PLCD4SendEbh+0x90>
     a52:	88 b3       	in	r24, 0x18	; 24
     a54:	88 60       	ori	r24, 0x08	; 8
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <_ZN4PLCD4SendEbh+0x94>
     a58:	88 b3       	in	r24, 0x18	; 24
     a5a:	87 7f       	andi	r24, 0xF7	; 247
     a5c:	88 bb       	out	0x18, r24	; 24
     a5e:	41 ff       	sbrs	r20, 1
     a60:	03 c0       	rjmp	.+6      	; 0xa68 <_ZN4PLCD4SendEbh+0xa0>
     a62:	88 b3       	in	r24, 0x18	; 24
     a64:	80 61       	ori	r24, 0x10	; 16
     a66:	02 c0       	rjmp	.+4      	; 0xa6c <_ZN4PLCD4SendEbh+0xa4>
     a68:	88 b3       	in	r24, 0x18	; 24
     a6a:	8f 7e       	andi	r24, 0xEF	; 239
     a6c:	88 bb       	out	0x18, r24	; 24
     a6e:	42 ff       	sbrs	r20, 2
     a70:	03 c0       	rjmp	.+6      	; 0xa78 <_ZN4PLCD4SendEbh+0xb0>
     a72:	88 b3       	in	r24, 0x18	; 24
     a74:	80 62       	ori	r24, 0x20	; 32
     a76:	02 c0       	rjmp	.+4      	; 0xa7c <_ZN4PLCD4SendEbh+0xb4>
     a78:	88 b3       	in	r24, 0x18	; 24
     a7a:	8f 7d       	andi	r24, 0xDF	; 223
     a7c:	88 bb       	out	0x18, r24	; 24
     a7e:	43 ff       	sbrs	r20, 3
     a80:	03 c0       	rjmp	.+6      	; 0xa88 <_ZN4PLCD4SendEbh+0xc0>
     a82:	88 b3       	in	r24, 0x18	; 24
     a84:	80 68       	ori	r24, 0x80	; 128
     a86:	02 c0       	rjmp	.+4      	; 0xa8c <_ZN4PLCD4SendEbh+0xc4>
     a88:	88 b3       	in	r24, 0x18	; 24
     a8a:	8f 77       	andi	r24, 0x7F	; 127
     a8c:	88 bb       	out	0x18, r24	; 24
     a8e:	a3 81       	ldd	r26, Z+3	; 0x03
     a90:	b4 81       	ldd	r27, Z+4	; 0x04
     a92:	4c 91       	ld	r20, X
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	9c 01       	movw	r18, r24
     a9a:	05 80       	ldd	r0, Z+5	; 0x05
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <_ZN4PLCD4SendEbh+0xda>
     a9e:	22 0f       	add	r18, r18
     aa0:	33 1f       	adc	r19, r19
     aa2:	0a 94       	dec	r0
     aa4:	e2 f7       	brpl	.-8      	; 0xa9e <_ZN4PLCD4SendEbh+0xd6>
     aa6:	24 2b       	or	r18, r20
     aa8:	2c 93       	st	X, r18
     aaa:	a3 81       	ldd	r26, Z+3	; 0x03
     aac:	b4 81       	ldd	r27, Z+4	; 0x04
     aae:	2c 91       	ld	r18, X
     ab0:	05 80       	ldd	r0, Z+5	; 0x05
     ab2:	02 c0       	rjmp	.+4      	; 0xab8 <_ZN4PLCD4SendEbh+0xf0>
     ab4:	88 0f       	add	r24, r24
     ab6:	99 1f       	adc	r25, r25
     ab8:	0a 94       	dec	r0
     aba:	e2 f7       	brpl	.-8      	; 0xab4 <_ZN4PLCD4SendEbh+0xec>
     abc:	80 95       	com	r24
     abe:	82 23       	and	r24, r18
     ac0:	8c 93       	st	X, r24
     ac2:	8f e8       	ldi	r24, 0x8F	; 143
     ac4:	91 e0       	ldi	r25, 0x01	; 1
     ac6:	01 97       	sbiw	r24, 0x01	; 1
     ac8:	f1 f7       	brne	.-4      	; 0xac6 <_ZN4PLCD4SendEbh+0xfe>
     aca:	00 c0       	rjmp	.+0      	; 0xacc <_ZN4PLCD4SendEbh+0x104>
     acc:	00 00       	nop
     ace:	08 95       	ret

00000ad0 <_ZN4PLCD8Send4bitEh>:
     ad0:	fc 01       	movw	r30, r24
     ad2:	c0 98       	cbi	0x18, 0	; 24
     ad4:	60 ff       	sbrs	r22, 0
     ad6:	03 c0       	rjmp	.+6      	; 0xade <_ZN4PLCD8Send4bitEh+0xe>
     ad8:	88 b3       	in	r24, 0x18	; 24
     ada:	88 60       	ori	r24, 0x08	; 8
     adc:	02 c0       	rjmp	.+4      	; 0xae2 <_ZN4PLCD8Send4bitEh+0x12>
     ade:	88 b3       	in	r24, 0x18	; 24
     ae0:	87 7f       	andi	r24, 0xF7	; 247
     ae2:	88 bb       	out	0x18, r24	; 24
     ae4:	61 ff       	sbrs	r22, 1
     ae6:	03 c0       	rjmp	.+6      	; 0xaee <_ZN4PLCD8Send4bitEh+0x1e>
     ae8:	88 b3       	in	r24, 0x18	; 24
     aea:	80 61       	ori	r24, 0x10	; 16
     aec:	02 c0       	rjmp	.+4      	; 0xaf2 <_ZN4PLCD8Send4bitEh+0x22>
     aee:	88 b3       	in	r24, 0x18	; 24
     af0:	8f 7e       	andi	r24, 0xEF	; 239
     af2:	88 bb       	out	0x18, r24	; 24
     af4:	62 ff       	sbrs	r22, 2
     af6:	03 c0       	rjmp	.+6      	; 0xafe <_ZN4PLCD8Send4bitEh+0x2e>
     af8:	88 b3       	in	r24, 0x18	; 24
     afa:	80 62       	ori	r24, 0x20	; 32
     afc:	02 c0       	rjmp	.+4      	; 0xb02 <_ZN4PLCD8Send4bitEh+0x32>
     afe:	88 b3       	in	r24, 0x18	; 24
     b00:	8f 7d       	andi	r24, 0xDF	; 223
     b02:	88 bb       	out	0x18, r24	; 24
     b04:	63 ff       	sbrs	r22, 3
     b06:	03 c0       	rjmp	.+6      	; 0xb0e <_ZN4PLCD8Send4bitEh+0x3e>
     b08:	88 b3       	in	r24, 0x18	; 24
     b0a:	80 68       	ori	r24, 0x80	; 128
     b0c:	02 c0       	rjmp	.+4      	; 0xb12 <_ZN4PLCD8Send4bitEh+0x42>
     b0e:	88 b3       	in	r24, 0x18	; 24
     b10:	8f 77       	andi	r24, 0x7F	; 127
     b12:	88 bb       	out	0x18, r24	; 24
     b14:	a3 81       	ldd	r26, Z+3	; 0x03
     b16:	b4 81       	ldd	r27, Z+4	; 0x04
     b18:	4c 91       	ld	r20, X
     b1a:	21 e0       	ldi	r18, 0x01	; 1
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	c9 01       	movw	r24, r18
     b20:	05 80       	ldd	r0, Z+5	; 0x05
     b22:	02 c0       	rjmp	.+4      	; 0xb28 <_ZN4PLCD8Send4bitEh+0x58>
     b24:	88 0f       	add	r24, r24
     b26:	99 1f       	adc	r25, r25
     b28:	0a 94       	dec	r0
     b2a:	e2 f7       	brpl	.-8      	; 0xb24 <_ZN4PLCD8Send4bitEh+0x54>
     b2c:	84 2b       	or	r24, r20
     b2e:	8c 93       	st	X, r24
     b30:	a3 81       	ldd	r26, Z+3	; 0x03
     b32:	b4 81       	ldd	r27, Z+4	; 0x04
     b34:	8c 91       	ld	r24, X
     b36:	05 80       	ldd	r0, Z+5	; 0x05
     b38:	02 c0       	rjmp	.+4      	; 0xb3e <_ZN4PLCD8Send4bitEh+0x6e>
     b3a:	22 0f       	add	r18, r18
     b3c:	33 1f       	adc	r19, r19
     b3e:	0a 94       	dec	r0
     b40:	e2 f7       	brpl	.-8      	; 0xb3a <_ZN4PLCD8Send4bitEh+0x6a>
     b42:	20 95       	com	r18
     b44:	28 23       	and	r18, r24
     b46:	2c 93       	st	X, r18
     b48:	8f e8       	ldi	r24, 0x8F	; 143
     b4a:	91 e0       	ldi	r25, 0x01	; 1
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	f1 f7       	brne	.-4      	; 0xb4c <_ZN4PLCD8Send4bitEh+0x7c>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <_ZN4PLCD8Send4bitEh+0x82>
     b52:	00 00       	nop
     b54:	08 95       	ret

00000b56 <_ZN4PLCD8WriteChrEc>:
     b56:	46 2f       	mov	r20, r22
     b58:	61 e0       	ldi	r22, 0x01	; 1
     b5a:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     b5e:	08 95       	ret

00000b60 <_ZL8BarGraphh>:
     b60:	89 30       	cpi	r24, 0x09	; 9
     b62:	08 f0       	brcs	.+2      	; 0xb66 <_ZL8BarGraphh+0x6>
     b64:	88 e0       	ldi	r24, 0x08	; 8
     b66:	88 23       	and	r24, r24
     b68:	41 f0       	breq	.+16     	; 0xb7a <_ZL8BarGraphh+0x1a>
     b6a:	81 50       	subi	r24, 0x01	; 1
     b6c:	68 2f       	mov	r22, r24
     b6e:	67 70       	andi	r22, 0x07	; 7
     b70:	89 e0       	ldi	r24, 0x09	; 9
     b72:	95 e0       	ldi	r25, 0x05	; 5
     b74:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     b78:	08 95       	ret
     b7a:	60 e2       	ldi	r22, 0x20	; 32
     b7c:	89 e0       	ldi	r24, 0x09	; 9
     b7e:	95 e0       	ldi	r25, 0x05	; 5
     b80:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     b84:	08 95       	ret

00000b86 <_ZN4PLCD5ClearEv>:
     b86:	41 e0       	ldi	r20, 0x01	; 1
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     b8e:	8f ef       	ldi	r24, 0xFF	; 255
     b90:	9c e7       	ldi	r25, 0x7C	; 124
     b92:	01 97       	sbiw	r24, 0x01	; 1
     b94:	f1 f7       	brne	.-4      	; 0xb92 <_ZN4PLCD5ClearEv+0xc>
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <_ZN4PLCD5ClearEv+0x12>
     b98:	00 00       	nop
     b9a:	08 95       	ret

00000b9c <_ZN4PLCD4InitEv>:
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	ec 01       	movw	r28, r24
     ba2:	e9 81       	ldd	r30, Y+1	; 0x01
     ba4:	fa 81       	ldd	r31, Y+2	; 0x02
     ba6:	20 81       	ld	r18, Z
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	0d 80       	ldd	r0, Y+5	; 0x05
     bae:	02 c0       	rjmp	.+4      	; 0xbb4 <_ZN4PLCD4InitEv+0x18>
     bb0:	88 0f       	add	r24, r24
     bb2:	99 1f       	adc	r25, r25
     bb4:	0a 94       	dec	r0
     bb6:	e2 f7       	brpl	.-8      	; 0xbb0 <_ZN4PLCD4InitEv+0x14>
     bb8:	82 2b       	or	r24, r18
     bba:	80 83       	st	Z, r24
     bbc:	b8 9a       	sbi	0x17, 0	; 23
     bbe:	bb 9a       	sbi	0x17, 3	; 23
     bc0:	bc 9a       	sbi	0x17, 4	; 23
     bc2:	bd 9a       	sbi	0x17, 5	; 23
     bc4:	bf 9a       	sbi	0x17, 7	; 23
     bc6:	2f ef       	ldi	r18, 0xFF	; 255
     bc8:	89 ef       	ldi	r24, 0xF9	; 249
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	21 50       	subi	r18, 0x01	; 1
     bce:	80 40       	sbci	r24, 0x00	; 0
     bd0:	90 40       	sbci	r25, 0x00	; 0
     bd2:	e1 f7       	brne	.-8      	; 0xbcc <_ZN4PLCD4InitEv+0x30>
     bd4:	00 c0       	rjmp	.+0      	; 0xbd6 <_ZN4PLCD4InitEv+0x3a>
     bd6:	00 00       	nop
     bd8:	63 e0       	ldi	r22, 0x03	; 3
     bda:	ce 01       	movw	r24, r28
     bdc:	0e 94 68 05 	call	0xad0	; 0xad0 <_ZN4PLCD8Send4bitEh>
     be0:	8f eb       	ldi	r24, 0xBF	; 191
     be2:	9d e5       	ldi	r25, 0x5D	; 93
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	f1 f7       	brne	.-4      	; 0xbe4 <_ZN4PLCD4InitEv+0x48>
     be8:	00 c0       	rjmp	.+0      	; 0xbea <_ZN4PLCD4InitEv+0x4e>
     bea:	00 00       	nop
     bec:	63 e0       	ldi	r22, 0x03	; 3
     bee:	ce 01       	movw	r24, r28
     bf0:	0e 94 68 05 	call	0xad0	; 0xad0 <_ZN4PLCD8Send4bitEh>
     bf4:	8f eb       	ldi	r24, 0xBF	; 191
     bf6:	9d e5       	ldi	r25, 0x5D	; 93
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	f1 f7       	brne	.-4      	; 0xbf8 <_ZN4PLCD4InitEv+0x5c>
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <_ZN4PLCD4InitEv+0x62>
     bfe:	00 00       	nop
     c00:	63 e0       	ldi	r22, 0x03	; 3
     c02:	ce 01       	movw	r24, r28
     c04:	0e 94 68 05 	call	0xad0	; 0xad0 <_ZN4PLCD8Send4bitEh>
     c08:	8f e9       	ldi	r24, 0x9F	; 159
     c0a:	9f e0       	ldi	r25, 0x0F	; 15
     c0c:	01 97       	sbiw	r24, 0x01	; 1
     c0e:	f1 f7       	brne	.-4      	; 0xc0c <_ZN4PLCD4InitEv+0x70>
     c10:	00 c0       	rjmp	.+0      	; 0xc12 <_ZN4PLCD4InitEv+0x76>
     c12:	00 00       	nop
     c14:	62 e0       	ldi	r22, 0x02	; 2
     c16:	ce 01       	movw	r24, r28
     c18:	0e 94 68 05 	call	0xad0	; 0xad0 <_ZN4PLCD8Send4bitEh>
     c1c:	8f e9       	ldi	r24, 0x9F	; 159
     c1e:	9f e0       	ldi	r25, 0x0F	; 15
     c20:	01 97       	sbiw	r24, 0x01	; 1
     c22:	f1 f7       	brne	.-4      	; 0xc20 <_ZN4PLCD4InitEv+0x84>
     c24:	00 c0       	rjmp	.+0      	; 0xc26 <_ZN4PLCD4InitEv+0x8a>
     c26:	00 00       	nop
     c28:	48 e2       	ldi	r20, 0x28	; 40
     c2a:	60 e0       	ldi	r22, 0x00	; 0
     c2c:	ce 01       	movw	r24, r28
     c2e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     c32:	8f e1       	ldi	r24, 0x1F	; 31
     c34:	9e e4       	ldi	r25, 0x4E	; 78
     c36:	01 97       	sbiw	r24, 0x01	; 1
     c38:	f1 f7       	brne	.-4      	; 0xc36 <_ZN4PLCD4InitEv+0x9a>
     c3a:	00 c0       	rjmp	.+0      	; 0xc3c <_ZN4PLCD4InitEv+0xa0>
     c3c:	00 00       	nop
     c3e:	48 e0       	ldi	r20, 0x08	; 8
     c40:	60 e0       	ldi	r22, 0x00	; 0
     c42:	ce 01       	movw	r24, r28
     c44:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     c48:	8f e1       	ldi	r24, 0x1F	; 31
     c4a:	9e e4       	ldi	r25, 0x4E	; 78
     c4c:	01 97       	sbiw	r24, 0x01	; 1
     c4e:	f1 f7       	brne	.-4      	; 0xc4c <_ZN4PLCD4InitEv+0xb0>
     c50:	00 c0       	rjmp	.+0      	; 0xc52 <_ZN4PLCD4InitEv+0xb6>
     c52:	00 00       	nop
     c54:	ce 01       	movw	r24, r28
     c56:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
     c5a:	8f e1       	ldi	r24, 0x1F	; 31
     c5c:	9e e4       	ldi	r25, 0x4E	; 78
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	f1 f7       	brne	.-4      	; 0xc5e <_ZN4PLCD4InitEv+0xc2>
     c62:	00 c0       	rjmp	.+0      	; 0xc64 <_ZN4PLCD4InitEv+0xc8>
     c64:	00 00       	nop
     c66:	46 e0       	ldi	r20, 0x06	; 6
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	ce 01       	movw	r24, r28
     c6c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     c70:	8f e1       	ldi	r24, 0x1F	; 31
     c72:	9e e4       	ldi	r25, 0x4E	; 78
     c74:	01 97       	sbiw	r24, 0x01	; 1
     c76:	f1 f7       	brne	.-4      	; 0xc74 <_ZN4PLCD4InitEv+0xd8>
     c78:	00 c0       	rjmp	.+0      	; 0xc7a <_ZN4PLCD4InitEv+0xde>
     c7a:	00 00       	nop
     c7c:	47 e1       	ldi	r20, 0x17	; 23
     c7e:	60 e0       	ldi	r22, 0x00	; 0
     c80:	ce 01       	movw	r24, r28
     c82:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     c86:	8f e1       	ldi	r24, 0x1F	; 31
     c88:	9e e4       	ldi	r25, 0x4E	; 78
     c8a:	01 97       	sbiw	r24, 0x01	; 1
     c8c:	f1 f7       	brne	.-4      	; 0xc8a <_ZN4PLCD4InitEv+0xee>
     c8e:	00 c0       	rjmp	.+0      	; 0xc90 <_ZN4PLCD4InitEv+0xf4>
     c90:	00 00       	nop
     c92:	4c e0       	ldi	r20, 0x0C	; 12
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	ce 01       	movw	r24, r28
     c98:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     c9c:	8f e1       	ldi	r24, 0x1F	; 31
     c9e:	9e e4       	ldi	r25, 0x4E	; 78
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	f1 f7       	brne	.-4      	; 0xca0 <_ZN4PLCD4InitEv+0x104>
     ca4:	00 c0       	rjmp	.+0      	; 0xca6 <_ZN4PLCD4InitEv+0x10a>
     ca6:	00 00       	nop
     ca8:	df 91       	pop	r29
     caa:	cf 91       	pop	r28
     cac:	08 95       	ret

00000cae <_ZN4PLCD6CursorEhh>:
     cae:	41 11       	cpse	r20, r1
     cb0:	41 e0       	ldi	r20, 0x01	; 1
     cb2:	42 95       	swap	r20
     cb4:	44 0f       	add	r20, r20
     cb6:	44 0f       	add	r20, r20
     cb8:	40 7c       	andi	r20, 0xC0	; 192
     cba:	40 58       	subi	r20, 0x80	; 128
     cbc:	60 31       	cpi	r22, 0x10	; 16
     cbe:	08 f0       	brcs	.+2      	; 0xcc2 <_ZN4PLCD6CursorEhh+0x14>
     cc0:	6f e0       	ldi	r22, 0x0F	; 15
     cc2:	46 0f       	add	r20, r22
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     cca:	08 95       	ret

00000ccc <_ZL8sensDispj>:
     ccc:	af 92       	push	r10
     cce:	bf 92       	push	r11
     cd0:	cf 92       	push	r12
     cd2:	df 92       	push	r13
     cd4:	ef 92       	push	r14
     cd6:	ff 92       	push	r15
     cd8:	0f 93       	push	r16
     cda:	1f 93       	push	r17
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	6c 01       	movw	r12, r24
     ce2:	7c 01       	movw	r14, r24
     ce4:	ee 24       	eor	r14, r14
     ce6:	ff 0c       	add	r15, r15
     ce8:	ee 1c       	adc	r14, r14
     cea:	ff 0c       	add	r15, r15
     cec:	ee 1c       	adc	r14, r14
     cee:	ff 24       	eor	r15, r15
     cf0:	0d e0       	ldi	r16, 0x0D	; 13
     cf2:	10 e0       	ldi	r17, 0x00	; 0
     cf4:	c0 e0       	ldi	r28, 0x00	; 0
     cf6:	68 94       	set
     cf8:	bb 24       	eor	r11, r11
     cfa:	b2 f8       	bld	r11, 2
     cfc:	d3 e0       	ldi	r29, 0x03	; 3
     cfe:	0f 2e       	mov	r0, r31
     d00:	f7 e0       	ldi	r31, 0x07	; 7
     d02:	af 2e       	mov	r10, r31
     d04:	f0 2d       	mov	r31, r0
     d06:	04 c0       	rjmp	.+8      	; 0xd10 <_ZL8sensDispj+0x44>
     d08:	01 50       	subi	r16, 0x01	; 1
     d0a:	11 09       	sbc	r17, r1
     d0c:	ce 30       	cpi	r28, 0x0E	; 14
     d0e:	69 f1       	breq	.+90     	; 0xd6a <_ZL8sensDispj+0x9e>
     d10:	cf 5f       	subi	r28, 0xFF	; 255
     d12:	40 e0       	ldi	r20, 0x00	; 0
     d14:	6c 2f       	mov	r22, r28
     d16:	89 e0       	ldi	r24, 0x09	; 9
     d18:	95 e0       	ldi	r25, 0x05	; 5
     d1a:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
     d1e:	82 e0       	ldi	r24, 0x02	; 2
     d20:	e8 16       	cp	r14, r24
     d22:	f1 04       	cpc	r15, r1
     d24:	88 f4       	brcc	.+34     	; 0xd48 <_ZL8sensDispj+0x7c>
     d26:	c6 01       	movw	r24, r12
     d28:	00 2e       	mov	r0, r16
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <_ZL8sensDispj+0x64>
     d2c:	96 95       	lsr	r25
     d2e:	87 95       	ror	r24
     d30:	0a 94       	dec	r0
     d32:	e2 f7       	brpl	.-8      	; 0xd2c <_ZL8sensDispj+0x60>
     d34:	80 fd       	sbrc	r24, 0
     d36:	02 c0       	rjmp	.+4      	; 0xd3c <_ZL8sensDispj+0x70>
     d38:	60 e0       	ldi	r22, 0x00	; 0
     d3a:	01 c0       	rjmp	.+2      	; 0xd3e <_ZL8sensDispj+0x72>
     d3c:	6a 2d       	mov	r22, r10
     d3e:	89 e0       	ldi	r24, 0x09	; 9
     d40:	95 e0       	ldi	r25, 0x05	; 5
     d42:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     d46:	e0 cf       	rjmp	.-64     	; 0xd08 <_ZL8sensDispj+0x3c>
     d48:	c6 01       	movw	r24, r12
     d4a:	00 2e       	mov	r0, r16
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <_ZL8sensDispj+0x86>
     d4e:	96 95       	lsr	r25
     d50:	87 95       	ror	r24
     d52:	0a 94       	dec	r0
     d54:	e2 f7       	brpl	.-8      	; 0xd4e <_ZL8sensDispj+0x82>
     d56:	80 fd       	sbrc	r24, 0
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <_ZL8sensDispj+0x92>
     d5a:	6d 2f       	mov	r22, r29
     d5c:	01 c0       	rjmp	.+2      	; 0xd60 <_ZL8sensDispj+0x94>
     d5e:	6b 2d       	mov	r22, r11
     d60:	89 e0       	ldi	r24, 0x09	; 9
     d62:	95 e0       	ldi	r25, 0x05	; 5
     d64:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     d68:	cf cf       	rjmp	.-98     	; 0xd08 <_ZL8sensDispj+0x3c>
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	e8 16       	cp	r14, r24
     d6e:	f1 04       	cpc	r15, r1
     d70:	81 f0       	breq	.+32     	; 0xd92 <_ZL8sensDispj+0xc6>
     d72:	48 f0       	brcs	.+18     	; 0xd86 <_ZL8sensDispj+0xba>
     d74:	82 e0       	ldi	r24, 0x02	; 2
     d76:	e8 16       	cp	r14, r24
     d78:	f1 04       	cpc	r15, r1
     d7a:	89 f0       	breq	.+34     	; 0xd9e <_ZL8sensDispj+0xd2>
     d7c:	83 e0       	ldi	r24, 0x03	; 3
     d7e:	e8 16       	cp	r14, r24
     d80:	f1 04       	cpc	r15, r1
     d82:	99 f0       	breq	.+38     	; 0xdaa <_ZL8sensDispj+0xde>
     d84:	17 c0       	rjmp	.+46     	; 0xdb4 <_ZL8sensDispj+0xe8>
     d86:	66 e2       	ldi	r22, 0x26	; 38
     d88:	89 e0       	ldi	r24, 0x09	; 9
     d8a:	95 e0       	ldi	r25, 0x05	; 5
     d8c:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     d90:	11 c0       	rjmp	.+34     	; 0xdb4 <_ZL8sensDispj+0xe8>
     d92:	6c e7       	ldi	r22, 0x7C	; 124
     d94:	89 e0       	ldi	r24, 0x09	; 9
     d96:	95 e0       	ldi	r25, 0x05	; 5
     d98:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     d9c:	0b c0       	rjmp	.+22     	; 0xdb4 <_ZL8sensDispj+0xe8>
     d9e:	66 e2       	ldi	r22, 0x26	; 38
     da0:	89 e0       	ldi	r24, 0x09	; 9
     da2:	95 e0       	ldi	r25, 0x05	; 5
     da4:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     da8:	05 c0       	rjmp	.+10     	; 0xdb4 <_ZL8sensDispj+0xe8>
     daa:	6c e7       	ldi	r22, 0x7C	; 124
     dac:	89 e0       	ldi	r24, 0x09	; 9
     dae:	95 e0       	ldi	r25, 0x05	; 5
     db0:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
     db4:	df 91       	pop	r29
     db6:	cf 91       	pop	r28
     db8:	1f 91       	pop	r17
     dba:	0f 91       	pop	r16
     dbc:	ff 90       	pop	r15
     dbe:	ef 90       	pop	r14
     dc0:	df 90       	pop	r13
     dc2:	cf 90       	pop	r12
     dc4:	bf 90       	pop	r11
     dc6:	af 90       	pop	r10
     dc8:	08 95       	ret

00000dca <_ZN4PLCD8WriteStrEPKc>:
     dca:	ef 92       	push	r14
     dcc:	ff 92       	push	r15
     dce:	0f 93       	push	r16
     dd0:	1f 93       	push	r17
     dd2:	cf 93       	push	r28
     dd4:	fb 01       	movw	r30, r22
     dd6:	40 81       	ld	r20, Z
     dd8:	44 23       	and	r20, r20
     dda:	71 f0       	breq	.+28     	; 0xdf8 <_ZN4PLCD8WriteStrEPKc+0x2e>
     ddc:	8b 01       	movw	r16, r22
     dde:	7c 01       	movw	r14, r24
     de0:	c0 e0       	ldi	r28, 0x00	; 0
     de2:	61 e0       	ldi	r22, 0x01	; 1
     de4:	c7 01       	movw	r24, r14
     de6:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     dea:	cf 5f       	subi	r28, 0xFF	; 255
     dec:	f8 01       	movw	r30, r16
     dee:	ec 0f       	add	r30, r28
     df0:	f1 1d       	adc	r31, r1
     df2:	40 81       	ld	r20, Z
     df4:	41 11       	cpse	r20, r1
     df6:	f5 cf       	rjmp	.-22     	; 0xde2 <_ZN4PLCD8WriteStrEPKc+0x18>
     df8:	cf 91       	pop	r28
     dfa:	1f 91       	pop	r17
     dfc:	0f 91       	pop	r16
     dfe:	ff 90       	pop	r15
     e00:	ef 90       	pop	r14
     e02:	08 95       	ret

00000e04 <_ZL11shortDisp_PhPKc>:
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	eb 01       	movw	r28, r22
     e0a:	89 e0       	ldi	r24, 0x09	; 9
     e0c:	95 e0       	ldi	r25, 0x05	; 5
     e0e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
     e12:	be 01       	movw	r22, r28
     e14:	83 ee       	ldi	r24, 0xE3	; 227
     e16:	93 e0       	ldi	r25, 0x03	; 3
     e18:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
     e1c:	40 e0       	ldi	r20, 0x00	; 0
     e1e:	63 e0       	ldi	r22, 0x03	; 3
     e20:	89 e0       	ldi	r24, 0x09	; 9
     e22:	95 e0       	ldi	r25, 0x05	; 5
     e24:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
     e28:	63 ee       	ldi	r22, 0xE3	; 227
     e2a:	73 e0       	ldi	r23, 0x03	; 3
     e2c:	89 e0       	ldi	r24, 0x09	; 9
     e2e:	95 e0       	ldi	r25, 0x05	; 5
     e30:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
     e34:	2f ef       	ldi	r18, 0xFF	; 255
     e36:	89 e6       	ldi	r24, 0x69	; 105
     e38:	98 e1       	ldi	r25, 0x18	; 24
     e3a:	21 50       	subi	r18, 0x01	; 1
     e3c:	80 40       	sbci	r24, 0x00	; 0
     e3e:	90 40       	sbci	r25, 0x00	; 0
     e40:	e1 f7       	brne	.-8      	; 0xe3a <_ZL11shortDisp_PhPKc+0x36>
     e42:	00 c0       	rjmp	.+0      	; 0xe44 <_ZL11shortDisp_PhPKc+0x40>
     e44:	00 00       	nop
     e46:	89 e0       	ldi	r24, 0x09	; 9
     e48:	95 e0       	ldi	r25, 0x05	; 5
     e4a:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
     e4e:	df 91       	pop	r29
     e50:	cf 91       	pop	r28
     e52:	08 95       	ret

00000e54 <_ZN4PLCD9GraphInitEv>:
     e54:	cf 92       	push	r12
     e56:	df 92       	push	r13
     e58:	ef 92       	push	r14
     e5a:	ff 92       	push	r15
     e5c:	0f 93       	push	r16
     e5e:	1f 93       	push	r17
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	8c 01       	movw	r16, r24
     e66:	0f 2e       	mov	r0, r31
     e68:	fc e6       	ldi	r31, 0x6C	; 108
     e6a:	cf 2e       	mov	r12, r31
     e6c:	f3 e0       	ldi	r31, 0x03	; 3
     e6e:	df 2e       	mov	r13, r31
     e70:	f0 2d       	mov	r31, r0
     e72:	c0 e4       	ldi	r28, 0x40	; 64
     e74:	d8 e0       	ldi	r29, 0x08	; 8
     e76:	dc 0f       	add	r29, r28
     e78:	76 01       	movw	r14, r12
     e7a:	4c 2f       	mov	r20, r28
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	c8 01       	movw	r24, r16
     e80:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     e84:	f7 01       	movw	r30, r14
     e86:	41 91       	ld	r20, Z+
     e88:	7f 01       	movw	r14, r30
     e8a:	61 e0       	ldi	r22, 0x01	; 1
     e8c:	c8 01       	movw	r24, r16
     e8e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN4PLCD4SendEbh>
     e92:	cf 5f       	subi	r28, 0xFF	; 255
     e94:	cd 13       	cpse	r28, r29
     e96:	f1 cf       	rjmp	.-30     	; 0xe7a <_ZN4PLCD9GraphInitEv+0x26>
     e98:	40 e0       	ldi	r20, 0x00	; 0
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	c8 01       	movw	r24, r16
     e9e:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
     ea2:	f8 e0       	ldi	r31, 0x08	; 8
     ea4:	cf 0e       	add	r12, r31
     ea6:	d1 1c       	adc	r13, r1
     ea8:	cd 2f       	mov	r28, r29
     eaa:	d0 38       	cpi	r29, 0x80	; 128
     eac:	19 f7       	brne	.-58     	; 0xe74 <_ZN4PLCD9GraphInitEv+0x20>
     eae:	df 91       	pop	r29
     eb0:	cf 91       	pop	r28
     eb2:	1f 91       	pop	r17
     eb4:	0f 91       	pop	r16
     eb6:	ff 90       	pop	r15
     eb8:	ef 90       	pop	r14
     eba:	df 90       	pop	r13
     ebc:	cf 90       	pop	r12
     ebe:	08 95       	ret

00000ec0 <_ZN13SensorLibGEAR4InitEh>:
     ec0:	a7 9a       	sbi	0x14, 7	; 20
     ec2:	a6 9a       	sbi	0x14, 6	; 20
     ec4:	17 b8       	out	0x07, r1	; 7
     ec6:	86 2f       	mov	r24, r22
     ec8:	86 70       	andi	r24, 0x06	; 6
     eca:	80 6c       	ori	r24, 0xC0	; 192
     ecc:	61 70       	andi	r22, 0x01	; 1
     ece:	68 2b       	or	r22, r24
     ed0:	66 b9       	out	0x06, r22	; 6
     ed2:	34 9b       	sbis	0x06, 4	; 6
     ed4:	fe cf       	rjmp	.-4      	; 0xed2 <_ZN13SensorLibGEAR4InitEh+0x12>
     ed6:	34 9a       	sbi	0x06, 4	; 6
     ed8:	08 95       	ret

00000eda <_ZN13SensorLibGEAR4CtrlEb>:
     eda:	fc 01       	movw	r30, r24
     edc:	85 ad       	ldd	r24, Z+61	; 0x3d
     ede:	86 17       	cp	r24, r22
     ee0:	18 f4       	brcc	.+6      	; 0xee8 <_ZN13SensorLibGEAR4CtrlEb+0xe>
     ee2:	85 b3       	in	r24, 0x15	; 21
     ee4:	80 68       	ori	r24, 0x80	; 128
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <_ZN13SensorLibGEAR4CtrlEb+0x12>
     ee8:	85 b3       	in	r24, 0x15	; 21
     eea:	8f 77       	andi	r24, 0x7F	; 127
     eec:	85 bb       	out	0x15, r24	; 21
     eee:	85 ad       	ldd	r24, Z+61	; 0x3d
     ef0:	88 23       	and	r24, r24
     ef2:	29 f0       	breq	.+10     	; 0xefe <_ZN13SensorLibGEAR4CtrlEb+0x24>
     ef4:	66 23       	and	r22, r22
     ef6:	19 f0       	breq	.+6      	; 0xefe <_ZN13SensorLibGEAR4CtrlEb+0x24>
     ef8:	85 b3       	in	r24, 0x15	; 21
     efa:	80 64       	ori	r24, 0x40	; 64
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <_ZN13SensorLibGEAR4CtrlEb+0x28>
     efe:	85 b3       	in	r24, 0x15	; 21
     f00:	8f 7b       	andi	r24, 0xBF	; 191
     f02:	85 bb       	out	0x15, r24	; 21
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	86 af       	std	Z+62, r24	; 0x3e
     f08:	85 ad       	ldd	r24, Z+61	; 0x3d
     f0a:	08 95       	ret

00000f0c <_ZN13SensorLibGEAR4ReadEv>:
     f0c:	af 92       	push	r10
     f0e:	bf 92       	push	r11
     f10:	df 92       	push	r13
     f12:	ef 92       	push	r14
     f14:	ff 92       	push	r15
     f16:	0f 93       	push	r16
     f18:	1f 93       	push	r17
     f1a:	cf 93       	push	r28
     f1c:	df 93       	push	r29
     f1e:	dc 01       	movw	r26, r24
     f20:	de 96       	adiw	r26, 0x3e	; 62
     f22:	8c 91       	ld	r24, X
     f24:	de 97       	sbiw	r26, 0x3e	; 62
     f26:	88 23       	and	r24, r24
     f28:	09 f4       	brne	.+2      	; 0xf2c <_ZN13SensorLibGEAR4ReadEv+0x20>
     f2a:	9c c0       	rjmp	.+312    	; 0x1064 <_ZN13SensorLibGEAR4ReadEv+0x158>
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	81 e0       	ldi	r24, 0x01	; 1
     f32:	98 2f       	mov	r25, r24
     f34:	97 70       	andi	r25, 0x07	; 7
     f36:	97 b9       	out	0x07, r25	; 7
     f38:	95 e3       	ldi	r25, 0x35	; 53
     f3a:	9a 95       	dec	r25
     f3c:	f1 f7       	brne	.-4      	; 0xf3a <_ZN13SensorLibGEAR4ReadEv+0x2e>
     f3e:	00 00       	nop
     f40:	36 9a       	sbi	0x06, 6	; 6
     f42:	34 9b       	sbis	0x06, 4	; 6
     f44:	fe cf       	rjmp	.-4      	; 0xf42 <_ZN13SensorLibGEAR4ReadEv+0x36>
     f46:	34 9a       	sbi	0x06, 4	; 6
     f48:	dd 96       	adiw	r26, 0x3d	; 61
     f4a:	4c 91       	ld	r20, X
     f4c:	dd 97       	sbiw	r26, 0x3d	; 61
     f4e:	64 b1       	in	r22, 0x04	; 4
     f50:	75 b1       	in	r23, 0x05	; 5
     f52:	f9 01       	movw	r30, r18
     f54:	c7 e0       	ldi	r28, 0x07	; 7
     f56:	4c 9f       	mul	r20, r28
     f58:	e0 0d       	add	r30, r0
     f5a:	f1 1d       	adc	r31, r1
     f5c:	11 24       	eor	r1, r1
     f5e:	ee 0f       	add	r30, r30
     f60:	ff 1f       	adc	r31, r31
     f62:	ea 0f       	add	r30, r26
     f64:	fb 1f       	adc	r31, r27
     f66:	ff 96       	adiw	r30, 0x3f	; 63
     f68:	71 83       	std	Z+1, r23	; 0x01
     f6a:	60 83       	st	Z, r22
     f6c:	8f 5f       	subi	r24, 0xFF	; 255
     f6e:	2f 5f       	subi	r18, 0xFF	; 255
     f70:	3f 4f       	sbci	r19, 0xFF	; 255
     f72:	88 30       	cpi	r24, 0x08	; 8
     f74:	f1 f6       	brne	.-68     	; 0xf32 <_ZN13SensorLibGEAR4ReadEv+0x26>
     f76:	44 23       	and	r20, r20
     f78:	09 f4       	brne	.+2      	; 0xf7c <_ZN13SensorLibGEAR4ReadEv+0x70>
     f7a:	6d c0       	rjmp	.+218    	; 0x1056 <_ZN13SensorLibGEAR4ReadEv+0x14a>
     f7c:	5f 96       	adiw	r26, 0x1f	; 31
     f7e:	1c 92       	st	X, r1
     f80:	1e 92       	st	-X, r1
     f82:	5e 97       	sbiw	r26, 0x1e	; 30
     f84:	8f ef       	ldi	r24, 0xFF	; 255
     f86:	93 e0       	ldi	r25, 0x03	; 3
     f88:	5d 96       	adiw	r26, 0x1d	; 29
     f8a:	9c 93       	st	X, r25
     f8c:	8e 93       	st	-X, r24
     f8e:	5c 97       	sbiw	r26, 0x1c	; 28
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	dc 96       	adiw	r26, 0x3c	; 60
     f94:	8c 93       	st	X, r24
     f96:	dc 97       	sbiw	r26, 0x3c	; 60
     f98:	8d 01       	movw	r16, r26
     f9a:	01 5c       	subi	r16, 0xC1	; 193
     f9c:	1f 4f       	sbci	r17, 0xFF	; 255
     f9e:	fd 01       	movw	r30, r26
     fa0:	5d 01       	movw	r10, r26
     fa2:	de e0       	ldi	r29, 0x0E	; 14
     fa4:	ad 0e       	add	r10, r29
     fa6:	b1 1c       	adc	r11, r1
     fa8:	9d 01       	movw	r18, r26
     faa:	d1 2c       	mov	r13, r1
     fac:	50 e0       	ldi	r21, 0x00	; 0
     fae:	e8 01       	movw	r28, r16
     fb0:	89 91       	ld	r24, Y+
     fb2:	99 91       	ld	r25, Y+
     fb4:	8e 01       	movw	r16, r28
     fb6:	79 01       	movw	r14, r18
     fb8:	e9 01       	movw	r28, r18
     fba:	68 a1       	ldd	r22, Y+32	; 0x20
     fbc:	79 a1       	ldd	r23, Y+33	; 0x21
     fbe:	86 17       	cp	r24, r22
     fc0:	97 07       	cpc	r25, r23
     fc2:	18 f0       	brcs	.+6      	; 0xfca <_ZN13SensorLibGEAR4ReadEv+0xbe>
     fc4:	86 1b       	sub	r24, r22
     fc6:	97 0b       	sbc	r25, r23
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <_ZN13SensorLibGEAR4ReadEv+0xc2>
     fca:	8d 2d       	mov	r24, r13
     fcc:	95 2f       	mov	r25, r21
     fce:	e7 01       	movw	r28, r14
     fd0:	99 83       	std	Y+1, r25	; 0x01
     fd2:	88 83       	st	Y, r24
     fd4:	2e 5f       	subi	r18, 0xFE	; 254
     fd6:	3f 4f       	sbci	r19, 0xFF	; 255
     fd8:	2a 15       	cp	r18, r10
     fda:	3b 05       	cpc	r19, r11
     fdc:	41 f7       	brne	.-48     	; 0xfae <_ZN13SensorLibGEAR4ReadEv+0xa2>
     fde:	8d 01       	movw	r16, r26
     fe0:	05 5a       	subi	r16, 0xA5	; 165
     fe2:	1f 4f       	sbci	r17, 0xFF	; 255
     fe4:	bd 01       	movw	r22, r26
     fe6:	64 5e       	subi	r22, 0xE4	; 228
     fe8:	7f 4f       	sbci	r23, 0xFF	; 255
     fea:	d1 2c       	mov	r13, r1
     fec:	50 e0       	ldi	r21, 0x00	; 0
     fee:	e8 01       	movw	r28, r16
     ff0:	9a 91       	ld	r25, -Y
     ff2:	8a 91       	ld	r24, -Y
     ff4:	8e 01       	movw	r16, r28
     ff6:	75 01       	movw	r14, r10
     ff8:	e5 01       	movw	r28, r10
     ffa:	28 a1       	ldd	r18, Y+32	; 0x20
     ffc:	39 a1       	ldd	r19, Y+33	; 0x21
     ffe:	82 17       	cp	r24, r18
    1000:	93 07       	cpc	r25, r19
    1002:	18 f0       	brcs	.+6      	; 0x100a <_ZN13SensorLibGEAR4ReadEv+0xfe>
    1004:	82 1b       	sub	r24, r18
    1006:	93 0b       	sbc	r25, r19
    1008:	02 c0       	rjmp	.+4      	; 0x100e <_ZN13SensorLibGEAR4ReadEv+0x102>
    100a:	8d 2d       	mov	r24, r13
    100c:	95 2f       	mov	r25, r21
    100e:	e7 01       	movw	r28, r14
    1010:	99 83       	std	Y+1, r25	; 0x01
    1012:	88 83       	st	Y, r24
    1014:	d2 e0       	ldi	r29, 0x02	; 2
    1016:	ad 0e       	add	r10, r29
    1018:	b1 1c       	adc	r11, r1
    101a:	a6 16       	cp	r10, r22
    101c:	b7 06       	cpc	r11, r23
    101e:	39 f7       	brne	.-50     	; 0xfee <_ZN13SensorLibGEAR4ReadEv+0xe2>
    1020:	81 91       	ld	r24, Z+
    1022:	91 91       	ld	r25, Z+
    1024:	5e 96       	adiw	r26, 0x1e	; 30
    1026:	2d 91       	ld	r18, X+
    1028:	3c 91       	ld	r19, X
    102a:	5f 97       	sbiw	r26, 0x1f	; 31
    102c:	28 17       	cp	r18, r24
    102e:	39 07       	cpc	r19, r25
    1030:	20 f4       	brcc	.+8      	; 0x103a <_ZN13SensorLibGEAR4ReadEv+0x12e>
    1032:	5f 96       	adiw	r26, 0x1f	; 31
    1034:	9c 93       	st	X, r25
    1036:	8e 93       	st	-X, r24
    1038:	5e 97       	sbiw	r26, 0x1e	; 30
    103a:	5c 96       	adiw	r26, 0x1c	; 28
    103c:	2d 91       	ld	r18, X+
    103e:	3c 91       	ld	r19, X
    1040:	5d 97       	sbiw	r26, 0x1d	; 29
    1042:	82 17       	cp	r24, r18
    1044:	93 07       	cpc	r25, r19
    1046:	20 f4       	brcc	.+8      	; 0x1050 <_ZN13SensorLibGEAR4ReadEv+0x144>
    1048:	5d 96       	adiw	r26, 0x1d	; 29
    104a:	9c 93       	st	X, r25
    104c:	8e 93       	st	-X, r24
    104e:	5c 97       	sbiw	r26, 0x1c	; 28
    1050:	e6 17       	cp	r30, r22
    1052:	f7 07       	cpc	r31, r23
    1054:	29 f7       	brne	.-54     	; 0x1020 <_ZN13SensorLibGEAR4ReadEv+0x114>
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	48 27       	eor	r20, r24
    105a:	dd 96       	adiw	r26, 0x3d	; 61
    105c:	4c 93       	st	X, r20
    105e:	dd 97       	sbiw	r26, 0x3d	; 61
    1060:	de 96       	adiw	r26, 0x3e	; 62
    1062:	1c 92       	st	X, r1
    1064:	df 91       	pop	r29
    1066:	cf 91       	pop	r28
    1068:	1f 91       	pop	r17
    106a:	0f 91       	pop	r16
    106c:	ff 90       	pop	r15
    106e:	ef 90       	pop	r14
    1070:	df 90       	pop	r13
    1072:	bf 90       	pop	r11
    1074:	af 90       	pop	r10
    1076:	08 95       	ret

00001078 <_ZN15LineDetectorLib8DigitizeEjjjjPjh>:
    1078:	2f 92       	push	r2
    107a:	3f 92       	push	r3
    107c:	4f 92       	push	r4
    107e:	5f 92       	push	r5
    1080:	6f 92       	push	r6
    1082:	7f 92       	push	r7
    1084:	8f 92       	push	r8
    1086:	9f 92       	push	r9
    1088:	af 92       	push	r10
    108a:	bf 92       	push	r11
    108c:	cf 92       	push	r12
    108e:	df 92       	push	r13
    1090:	ef 92       	push	r14
    1092:	ff 92       	push	r15
    1094:	0f 93       	push	r16
    1096:	1f 93       	push	r17
    1098:	cf 93       	push	r28
    109a:	df 93       	push	r29
    109c:	1c 01       	movw	r2, r24
    109e:	5b 01       	movw	r10, r22
    10a0:	48 01       	movw	r8, r16
    10a2:	1c 2d       	mov	r17, r12
    10a4:	6a 01       	movw	r12, r20
    10a6:	c6 1a       	sub	r12, r22
    10a8:	d7 0a       	sbc	r13, r23
    10aa:	dc 01       	movw	r26, r24
    10ac:	cd 92       	st	X+, r12
    10ae:	dc 92       	st	X, r13
    10b0:	c2 16       	cp	r12, r18
    10b2:	d3 06       	cpc	r13, r19
    10b4:	78 f4       	brcc	.+30     	; 0x10d4 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x5c>
    10b6:	61 39       	cpi	r22, 0x91	; 145
    10b8:	71 40       	sbci	r23, 0x01	; 1
    10ba:	20 f0       	brcs	.+8      	; 0x10c4 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x4c>
    10bc:	fc 01       	movw	r30, r24
    10be:	13 82       	std	Z+3, r1	; 0x03
    10c0:	12 82       	std	Z+2, r1	; 0x02
    10c2:	b6 c0       	rjmp	.+364    	; 0x1230 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x1b8>
    10c4:	8f ef       	ldi	r24, 0xFF	; 255
    10c6:	93 e0       	ldi	r25, 0x03	; 3
    10c8:	d1 01       	movw	r26, r2
    10ca:	13 96       	adiw	r26, 0x03	; 3
    10cc:	9c 93       	st	X, r25
    10ce:	8e 93       	st	-X, r24
    10d0:	12 97       	sbiw	r26, 0x02	; 2
    10d2:	ae c0       	rjmp	.+348    	; 0x1230 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x1b8>
    10d4:	dc 01       	movw	r26, r24
    10d6:	55 96       	adiw	r26, 0x15	; 21
    10d8:	ed 91       	ld	r30, X+
    10da:	fc 91       	ld	r31, X
    10dc:	56 97       	sbiw	r26, 0x16	; 22
    10de:	6e 17       	cp	r22, r30
    10e0:	7f 07       	cpc	r23, r31
    10e2:	28 f4       	brcc	.+10     	; 0x10ee <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x76>
    10e4:	56 96       	adiw	r26, 0x16	; 22
    10e6:	7c 93       	st	X, r23
    10e8:	6e 93       	st	-X, r22
    10ea:	55 97       	sbiw	r26, 0x15	; 21
    10ec:	12 c0       	rjmp	.+36     	; 0x1112 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x9a>
    10ee:	9b 01       	movw	r18, r22
    10f0:	36 95       	lsr	r19
    10f2:	27 95       	ror	r18
    10f4:	36 95       	lsr	r19
    10f6:	27 95       	ror	r18
    10f8:	ab e7       	ldi	r26, 0x7B	; 123
    10fa:	b4 e1       	ldi	r27, 0x14	; 20
    10fc:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    1100:	96 95       	lsr	r25
    1102:	87 95       	ror	r24
    1104:	e8 0f       	add	r30, r24
    1106:	f9 1f       	adc	r31, r25
    1108:	d1 01       	movw	r26, r2
    110a:	56 96       	adiw	r26, 0x16	; 22
    110c:	fc 93       	st	X, r31
    110e:	ee 93       	st	-X, r30
    1110:	55 97       	sbiw	r26, 0x15	; 21
    1112:	d1 01       	movw	r26, r2
    1114:	57 96       	adiw	r26, 0x17	; 23
    1116:	ed 91       	ld	r30, X+
    1118:	fc 91       	ld	r31, X
    111a:	58 97       	sbiw	r26, 0x18	; 24
    111c:	e4 17       	cp	r30, r20
    111e:	f5 07       	cpc	r31, r21
    1120:	28 f4       	brcc	.+10     	; 0x112c <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0xb4>
    1122:	58 96       	adiw	r26, 0x18	; 24
    1124:	5c 93       	st	X, r21
    1126:	4e 93       	st	-X, r20
    1128:	57 97       	sbiw	r26, 0x17	; 23
    112a:	12 c0       	rjmp	.+36     	; 0x1150 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0xd8>
    112c:	9a 01       	movw	r18, r20
    112e:	36 95       	lsr	r19
    1130:	27 95       	ror	r18
    1132:	36 95       	lsr	r19
    1134:	27 95       	ror	r18
    1136:	ab e7       	ldi	r26, 0x7B	; 123
    1138:	b4 e1       	ldi	r27, 0x14	; 20
    113a:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    113e:	96 95       	lsr	r25
    1140:	87 95       	ror	r24
    1142:	e8 1b       	sub	r30, r24
    1144:	f9 0b       	sbc	r31, r25
    1146:	d1 01       	movw	r26, r2
    1148:	58 96       	adiw	r26, 0x18	; 24
    114a:	fc 93       	st	X, r31
    114c:	ee 93       	st	-X, r30
    114e:	57 97       	sbiw	r26, 0x17	; 23
    1150:	b6 01       	movw	r22, r12
    1152:	80 e0       	ldi	r24, 0x00	; 0
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
    115a:	2b 01       	movw	r4, r22
    115c:	3c 01       	movw	r6, r24
    115e:	b4 01       	movw	r22, r8
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	48 ec       	ldi	r20, 0xC8	; 200
    116e:	52 e4       	ldi	r21, 0x42	; 66
    1170:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    1174:	9b 01       	movw	r18, r22
    1176:	ac 01       	movw	r20, r24
    1178:	c3 01       	movw	r24, r6
    117a:	b2 01       	movw	r22, r4
    117c:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    1180:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
    1184:	6a 0d       	add	r22, r10
    1186:	7b 1d       	adc	r23, r11
    1188:	f1 01       	movw	r30, r2
    118a:	73 83       	std	Z+3, r23	; 0x03
    118c:	62 83       	std	Z+2, r22	; 0x02
    118e:	50 c0       	rjmp	.+160    	; 0x1230 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x1b8>
    1190:	89 91       	ld	r24, Y+
    1192:	99 91       	ld	r25, Y+
    1194:	84 17       	cp	r24, r20
    1196:	95 07       	cpc	r25, r21
    1198:	10 f0       	brcs	.+4      	; 0x119e <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x126>
    119a:	30 83       	st	Z, r19
    119c:	04 c0       	rjmp	.+8      	; 0x11a6 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x12e>
    119e:	c8 16       	cp	r12, r24
    11a0:	d9 06       	cpc	r13, r25
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x12e>
    11a4:	10 82       	st	Z, r1
    11a6:	81 91       	ld	r24, Z+
    11a8:	28 0f       	add	r18, r24
    11aa:	ee 15       	cp	r30, r14
    11ac:	ff 05       	cpc	r31, r15
    11ae:	81 f7       	brne	.-32     	; 0x1190 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x118>
    11b0:	f1 01       	movw	r30, r2
    11b2:	95 81       	ldd	r25, Z+5	; 0x05
    11b4:	86 81       	ldd	r24, Z+6	; 0x06
    11b6:	89 2b       	or	r24, r25
    11b8:	91 89       	ldd	r25, Z+17	; 0x11
    11ba:	89 2b       	or	r24, r25
    11bc:	21 f4       	brne	.+8      	; 0x11c6 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x14e>
    11be:	82 89       	ldd	r24, Z+18	; 0x12
    11c0:	81 11       	cpse	r24, r1
    11c2:	01 c0       	rjmp	.+2      	; 0x11c6 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x14e>
    11c4:	20 e0       	ldi	r18, 0x00	; 0
    11c6:	f1 01       	movw	r30, r2
    11c8:	43 89       	ldd	r20, Z+19	; 0x13
    11ca:	54 89       	ldd	r21, Z+20	; 0x14
    11cc:	8d e0       	ldi	r24, 0x0D	; 13
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	01 e0       	ldi	r16, 0x01	; 1
    11d2:	e1 e0       	ldi	r30, 0x01	; 1
    11d4:	f0 e0       	ldi	r31, 0x00	; 0
    11d6:	11 11       	cpse	r17, r1
    11d8:	06 c0       	rjmp	.+12     	; 0x11e6 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x16e>
    11da:	28 30       	cpi	r18, 0x08	; 8
    11dc:	48 f0       	brcs	.+18     	; 0x11f0 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x178>
    11de:	3c 91       	ld	r19, X
    11e0:	30 27       	eor	r19, r16
    11e2:	3c 93       	st	X, r19
    11e4:	05 c0       	rjmp	.+10     	; 0x11f0 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x178>
    11e6:	12 30       	cpi	r17, 0x02	; 2
    11e8:	19 f4       	brne	.+6      	; 0x11f0 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x178>
    11ea:	3c 91       	ld	r19, X
    11ec:	30 27       	eor	r19, r16
    11ee:	3c 93       	st	X, r19
    11f0:	3d 91       	ld	r19, X+
    11f2:	33 23       	and	r19, r19
    11f4:	51 f0       	breq	.+20     	; 0x120a <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x192>
    11f6:	bf 01       	movw	r22, r30
    11f8:	08 2e       	mov	r0, r24
    11fa:	02 c0       	rjmp	.+4      	; 0x1200 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x188>
    11fc:	66 0f       	add	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	0a 94       	dec	r0
    1202:	e2 f7       	brpl	.-8      	; 0x11fc <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x184>
    1204:	46 2b       	or	r20, r22
    1206:	57 2b       	or	r21, r23
    1208:	0b c0       	rjmp	.+22     	; 0x1220 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x1a8>
    120a:	bf 01       	movw	r22, r30
    120c:	08 2e       	mov	r0, r24
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x19c>
    1210:	66 0f       	add	r22, r22
    1212:	77 1f       	adc	r23, r23
    1214:	0a 94       	dec	r0
    1216:	e2 f7       	brpl	.-8      	; 0x1210 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x198>
    1218:	60 95       	com	r22
    121a:	70 95       	com	r23
    121c:	46 23       	and	r20, r22
    121e:	57 23       	and	r21, r23
    1220:	01 97       	sbiw	r24, 0x01	; 1
    1222:	c8 f6       	brcc	.-78     	; 0x11d6 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x15e>
    1224:	d1 01       	movw	r26, r2
    1226:	54 96       	adiw	r26, 0x14	; 20
    1228:	5c 93       	st	X, r21
    122a:	4e 93       	st	-X, r20
    122c:	53 97       	sbiw	r26, 0x13	; 19
    122e:	1b c0       	rjmp	.+54     	; 0x1266 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x1ee>
    1230:	f1 01       	movw	r30, r2
    1232:	42 81       	ldd	r20, Z+2	; 0x02
    1234:	53 81       	ldd	r21, Z+3	; 0x03
    1236:	96 01       	movw	r18, r12
    1238:	36 95       	lsr	r19
    123a:	27 95       	ror	r18
    123c:	ab e7       	ldi	r26, 0x7B	; 123
    123e:	b4 e1       	ldi	r27, 0x14	; 20
    1240:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    1244:	96 95       	lsr	r25
    1246:	87 95       	ror	r24
    1248:	6a 01       	movw	r12, r20
    124a:	c8 1a       	sub	r12, r24
    124c:	d9 0a       	sbc	r13, r25
    124e:	ce 2d       	mov	r28, r14
    1250:	df 2d       	mov	r29, r15
    1252:	d1 01       	movw	r26, r2
    1254:	15 96       	adiw	r26, 0x05	; 5
    1256:	71 01       	movw	r14, r2
    1258:	f3 e1       	ldi	r31, 0x13	; 19
    125a:	ef 0e       	add	r14, r31
    125c:	f1 1c       	adc	r15, r1
    125e:	fd 01       	movw	r30, r26
    1260:	20 e0       	ldi	r18, 0x00	; 0
    1262:	31 e0       	ldi	r19, 0x01	; 1
    1264:	95 cf       	rjmp	.-214    	; 0x1190 <_ZN15LineDetectorLib8DigitizeEjjjjPjh+0x118>
    1266:	df 91       	pop	r29
    1268:	cf 91       	pop	r28
    126a:	1f 91       	pop	r17
    126c:	0f 91       	pop	r16
    126e:	ff 90       	pop	r15
    1270:	ef 90       	pop	r14
    1272:	df 90       	pop	r13
    1274:	cf 90       	pop	r12
    1276:	bf 90       	pop	r11
    1278:	af 90       	pop	r10
    127a:	9f 90       	pop	r9
    127c:	8f 90       	pop	r8
    127e:	7f 90       	pop	r7
    1280:	6f 90       	pop	r6
    1282:	5f 90       	pop	r5
    1284:	4f 90       	pop	r4
    1286:	3f 90       	pop	r3
    1288:	2f 90       	pop	r2
    128a:	08 95       	ret

0000128c <_ZN15LineDetectorLib6DetectEh>:
    128c:	fc 01       	movw	r30, r24
    128e:	65 30       	cpi	r22, 0x05	; 5
    1290:	09 f0       	breq	.+2      	; 0x1294 <_ZN15LineDetectorLib6DetectEh+0x8>
    1292:	bb c0       	rjmp	.+374    	; 0x140a <_ZN15LineDetectorLib6DetectEh+0x17e>
    1294:	83 89       	ldd	r24, Z+19	; 0x13
    1296:	94 89       	ldd	r25, Z+20	; 0x14
    1298:	95 ff       	sbrs	r25, 5
    129a:	03 c0       	rjmp	.+6      	; 0x12a2 <_ZN15LineDetectorLib6DetectEh+0x16>
    129c:	82 ee       	ldi	r24, 0xE2	; 226
    129e:	84 83       	std	Z+4, r24	; 0x04
    12a0:	08 95       	ret
    12a2:	9c 01       	movw	r18, r24
    12a4:	22 27       	eor	r18, r18
    12a6:	30 73       	andi	r19, 0x30	; 48
    12a8:	23 2b       	or	r18, r19
    12aa:	19 f0       	breq	.+6      	; 0x12b2 <_ZN15LineDetectorLib6DetectEh+0x26>
    12ac:	86 ee       	ldi	r24, 0xE6	; 230
    12ae:	84 83       	std	Z+4, r24	; 0x04
    12b0:	08 95       	ret
    12b2:	94 ff       	sbrs	r25, 4
    12b4:	03 c0       	rjmp	.+6      	; 0x12bc <_ZN15LineDetectorLib6DetectEh+0x30>
    12b6:	8a ee       	ldi	r24, 0xEA	; 234
    12b8:	84 83       	std	Z+4, r24	; 0x04
    12ba:	08 95       	ret
    12bc:	9c 01       	movw	r18, r24
    12be:	22 27       	eor	r18, r18
    12c0:	38 71       	andi	r19, 0x18	; 24
    12c2:	23 2b       	or	r18, r19
    12c4:	19 f0       	breq	.+6      	; 0x12cc <_ZN15LineDetectorLib6DetectEh+0x40>
    12c6:	8e ee       	ldi	r24, 0xEE	; 238
    12c8:	84 83       	std	Z+4, r24	; 0x04
    12ca:	08 95       	ret
    12cc:	93 ff       	sbrs	r25, 3
    12ce:	03 c0       	rjmp	.+6      	; 0x12d6 <_ZN15LineDetectorLib6DetectEh+0x4a>
    12d0:	82 ef       	ldi	r24, 0xF2	; 242
    12d2:	84 83       	std	Z+4, r24	; 0x04
    12d4:	08 95       	ret
    12d6:	9c 01       	movw	r18, r24
    12d8:	22 27       	eor	r18, r18
    12da:	3c 70       	andi	r19, 0x0C	; 12
    12dc:	23 2b       	or	r18, r19
    12de:	19 f0       	breq	.+6      	; 0x12e6 <_ZN15LineDetectorLib6DetectEh+0x5a>
    12e0:	86 ef       	ldi	r24, 0xF6	; 246
    12e2:	84 83       	std	Z+4, r24	; 0x04
    12e4:	08 95       	ret
    12e6:	92 ff       	sbrs	r25, 2
    12e8:	03 c0       	rjmp	.+6      	; 0x12f0 <_ZN15LineDetectorLib6DetectEh+0x64>
    12ea:	89 ef       	ldi	r24, 0xF9	; 249
    12ec:	84 83       	std	Z+4, r24	; 0x04
    12ee:	08 95       	ret
    12f0:	9c 01       	movw	r18, r24
    12f2:	22 27       	eor	r18, r18
    12f4:	36 70       	andi	r19, 0x06	; 6
    12f6:	23 2b       	or	r18, r19
    12f8:	19 f0       	breq	.+6      	; 0x1300 <_ZN15LineDetectorLib6DetectEh+0x74>
    12fa:	8a ef       	ldi	r24, 0xFA	; 250
    12fc:	84 83       	std	Z+4, r24	; 0x04
    12fe:	08 95       	ret
    1300:	91 ff       	sbrs	r25, 1
    1302:	03 c0       	rjmp	.+6      	; 0x130a <_ZN15LineDetectorLib6DetectEh+0x7e>
    1304:	8b ef       	ldi	r24, 0xFB	; 251
    1306:	84 83       	std	Z+4, r24	; 0x04
    1308:	08 95       	ret
    130a:	9c 01       	movw	r18, r24
    130c:	22 27       	eor	r18, r18
    130e:	33 70       	andi	r19, 0x03	; 3
    1310:	23 2b       	or	r18, r19
    1312:	19 f0       	breq	.+6      	; 0x131a <_ZN15LineDetectorLib6DetectEh+0x8e>
    1314:	8c ef       	ldi	r24, 0xFC	; 252
    1316:	84 83       	std	Z+4, r24	; 0x04
    1318:	08 95       	ret
    131a:	90 ff       	sbrs	r25, 0
    131c:	03 c0       	rjmp	.+6      	; 0x1324 <_ZN15LineDetectorLib6DetectEh+0x98>
    131e:	8d ef       	ldi	r24, 0xFD	; 253
    1320:	84 83       	std	Z+4, r24	; 0x04
    1322:	08 95       	ret
    1324:	9c 01       	movw	r18, r24
    1326:	20 78       	andi	r18, 0x80	; 128
    1328:	31 70       	andi	r19, 0x01	; 1
    132a:	23 2b       	or	r18, r19
    132c:	19 f0       	breq	.+6      	; 0x1334 <_ZN15LineDetectorLib6DetectEh+0xa8>
    132e:	8e ef       	ldi	r24, 0xFE	; 254
    1330:	84 83       	std	Z+4, r24	; 0x04
    1332:	08 95       	ret
    1334:	87 ff       	sbrs	r24, 7
    1336:	03 c0       	rjmp	.+6      	; 0x133e <_ZN15LineDetectorLib6DetectEh+0xb2>
    1338:	8f ef       	ldi	r24, 0xFF	; 255
    133a:	84 83       	std	Z+4, r24	; 0x04
    133c:	08 95       	ret
    133e:	9c 01       	movw	r18, r24
    1340:	20 7c       	andi	r18, 0xC0	; 192
    1342:	33 27       	eor	r19, r19
    1344:	23 2b       	or	r18, r19
    1346:	11 f0       	breq	.+4      	; 0x134c <_ZN15LineDetectorLib6DetectEh+0xc0>
    1348:	14 82       	std	Z+4, r1	; 0x04
    134a:	08 95       	ret
    134c:	86 ff       	sbrs	r24, 6
    134e:	03 c0       	rjmp	.+6      	; 0x1356 <_ZN15LineDetectorLib6DetectEh+0xca>
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	84 83       	std	Z+4, r24	; 0x04
    1354:	08 95       	ret
    1356:	9c 01       	movw	r18, r24
    1358:	20 76       	andi	r18, 0x60	; 96
    135a:	33 27       	eor	r19, r19
    135c:	20 36       	cpi	r18, 0x60	; 96
    135e:	31 05       	cpc	r19, r1
    1360:	19 f4       	brne	.+6      	; 0x1368 <_ZN15LineDetectorLib6DetectEh+0xdc>
    1362:	82 e0       	ldi	r24, 0x02	; 2
    1364:	84 83       	std	Z+4, r24	; 0x04
    1366:	08 95       	ret
    1368:	85 ff       	sbrs	r24, 5
    136a:	03 c0       	rjmp	.+6      	; 0x1372 <_ZN15LineDetectorLib6DetectEh+0xe6>
    136c:	83 e0       	ldi	r24, 0x03	; 3
    136e:	84 83       	std	Z+4, r24	; 0x04
    1370:	08 95       	ret
    1372:	9c 01       	movw	r18, r24
    1374:	20 73       	andi	r18, 0x30	; 48
    1376:	33 27       	eor	r19, r19
    1378:	20 33       	cpi	r18, 0x30	; 48
    137a:	31 05       	cpc	r19, r1
    137c:	19 f4       	brne	.+6      	; 0x1384 <_ZN15LineDetectorLib6DetectEh+0xf8>
    137e:	84 e0       	ldi	r24, 0x04	; 4
    1380:	84 83       	std	Z+4, r24	; 0x04
    1382:	08 95       	ret
    1384:	84 ff       	sbrs	r24, 4
    1386:	03 c0       	rjmp	.+6      	; 0x138e <_ZN15LineDetectorLib6DetectEh+0x102>
    1388:	85 e0       	ldi	r24, 0x05	; 5
    138a:	84 83       	std	Z+4, r24	; 0x04
    138c:	08 95       	ret
    138e:	9c 01       	movw	r18, r24
    1390:	28 71       	andi	r18, 0x18	; 24
    1392:	33 27       	eor	r19, r19
    1394:	28 31       	cpi	r18, 0x18	; 24
    1396:	31 05       	cpc	r19, r1
    1398:	19 f4       	brne	.+6      	; 0x13a0 <_ZN15LineDetectorLib6DetectEh+0x114>
    139a:	86 e0       	ldi	r24, 0x06	; 6
    139c:	84 83       	std	Z+4, r24	; 0x04
    139e:	08 95       	ret
    13a0:	83 ff       	sbrs	r24, 3
    13a2:	03 c0       	rjmp	.+6      	; 0x13aa <_ZN15LineDetectorLib6DetectEh+0x11e>
    13a4:	87 e0       	ldi	r24, 0x07	; 7
    13a6:	84 83       	std	Z+4, r24	; 0x04
    13a8:	08 95       	ret
    13aa:	9c 01       	movw	r18, r24
    13ac:	2c 70       	andi	r18, 0x0C	; 12
    13ae:	33 27       	eor	r19, r19
    13b0:	2c 30       	cpi	r18, 0x0C	; 12
    13b2:	31 05       	cpc	r19, r1
    13b4:	19 f4       	brne	.+6      	; 0x13bc <_ZN15LineDetectorLib6DetectEh+0x130>
    13b6:	8a e0       	ldi	r24, 0x0A	; 10
    13b8:	84 83       	std	Z+4, r24	; 0x04
    13ba:	08 95       	ret
    13bc:	82 ff       	sbrs	r24, 2
    13be:	03 c0       	rjmp	.+6      	; 0x13c6 <_ZN15LineDetectorLib6DetectEh+0x13a>
    13c0:	8e e0       	ldi	r24, 0x0E	; 14
    13c2:	84 83       	std	Z+4, r24	; 0x04
    13c4:	08 95       	ret
    13c6:	9c 01       	movw	r18, r24
    13c8:	26 70       	andi	r18, 0x06	; 6
    13ca:	33 27       	eor	r19, r19
    13cc:	26 30       	cpi	r18, 0x06	; 6
    13ce:	31 05       	cpc	r19, r1
    13d0:	19 f4       	brne	.+6      	; 0x13d8 <_ZN15LineDetectorLib6DetectEh+0x14c>
    13d2:	82 e1       	ldi	r24, 0x12	; 18
    13d4:	84 83       	std	Z+4, r24	; 0x04
    13d6:	08 95       	ret
    13d8:	81 ff       	sbrs	r24, 1
    13da:	03 c0       	rjmp	.+6      	; 0x13e2 <_ZN15LineDetectorLib6DetectEh+0x156>
    13dc:	86 e1       	ldi	r24, 0x16	; 22
    13de:	84 83       	std	Z+4, r24	; 0x04
    13e0:	08 95       	ret
    13e2:	9c 01       	movw	r18, r24
    13e4:	23 70       	andi	r18, 0x03	; 3
    13e6:	33 27       	eor	r19, r19
    13e8:	23 30       	cpi	r18, 0x03	; 3
    13ea:	31 05       	cpc	r19, r1
    13ec:	19 f4       	brne	.+6      	; 0x13f4 <_ZN15LineDetectorLib6DetectEh+0x168>
    13ee:	8a e1       	ldi	r24, 0x1A	; 26
    13f0:	84 83       	std	Z+4, r24	; 0x04
    13f2:	08 95       	ret
    13f4:	80 ff       	sbrs	r24, 0
    13f6:	03 c0       	rjmp	.+6      	; 0x13fe <_ZN15LineDetectorLib6DetectEh+0x172>
    13f8:	8e e1       	ldi	r24, 0x1E	; 30
    13fa:	84 83       	std	Z+4, r24	; 0x04
    13fc:	08 95       	ret
    13fe:	89 2b       	or	r24, r25
    1400:	09 f0       	breq	.+2      	; 0x1404 <_ZN15LineDetectorLib6DetectEh+0x178>
    1402:	a4 c4       	rjmp	.+2376   	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1404:	8f e1       	ldi	r24, 0x1F	; 31
    1406:	84 83       	std	Z+4, r24	; 0x04
    1408:	08 95       	ret
    140a:	66 30       	cpi	r22, 0x06	; 6
    140c:	09 f0       	breq	.+2      	; 0x1410 <_ZN15LineDetectorLib6DetectEh+0x184>
    140e:	bb c0       	rjmp	.+374    	; 0x1586 <_ZN15LineDetectorLib6DetectEh+0x2fa>
    1410:	83 89       	ldd	r24, Z+19	; 0x13
    1412:	94 89       	ldd	r25, Z+20	; 0x14
    1414:	80 ff       	sbrs	r24, 0
    1416:	03 c0       	rjmp	.+6      	; 0x141e <_ZN15LineDetectorLib6DetectEh+0x192>
    1418:	8e e1       	ldi	r24, 0x1E	; 30
    141a:	84 83       	std	Z+4, r24	; 0x04
    141c:	08 95       	ret
    141e:	9c 01       	movw	r18, r24
    1420:	23 70       	andi	r18, 0x03	; 3
    1422:	33 27       	eor	r19, r19
    1424:	23 2b       	or	r18, r19
    1426:	19 f0       	breq	.+6      	; 0x142e <_ZN15LineDetectorLib6DetectEh+0x1a2>
    1428:	8a e1       	ldi	r24, 0x1A	; 26
    142a:	84 83       	std	Z+4, r24	; 0x04
    142c:	08 95       	ret
    142e:	81 ff       	sbrs	r24, 1
    1430:	03 c0       	rjmp	.+6      	; 0x1438 <_ZN15LineDetectorLib6DetectEh+0x1ac>
    1432:	86 e1       	ldi	r24, 0x16	; 22
    1434:	84 83       	std	Z+4, r24	; 0x04
    1436:	08 95       	ret
    1438:	9c 01       	movw	r18, r24
    143a:	26 70       	andi	r18, 0x06	; 6
    143c:	33 27       	eor	r19, r19
    143e:	23 2b       	or	r18, r19
    1440:	19 f0       	breq	.+6      	; 0x1448 <_ZN15LineDetectorLib6DetectEh+0x1bc>
    1442:	82 e1       	ldi	r24, 0x12	; 18
    1444:	84 83       	std	Z+4, r24	; 0x04
    1446:	08 95       	ret
    1448:	82 ff       	sbrs	r24, 2
    144a:	03 c0       	rjmp	.+6      	; 0x1452 <_ZN15LineDetectorLib6DetectEh+0x1c6>
    144c:	8e e0       	ldi	r24, 0x0E	; 14
    144e:	84 83       	std	Z+4, r24	; 0x04
    1450:	08 95       	ret
    1452:	9c 01       	movw	r18, r24
    1454:	2c 70       	andi	r18, 0x0C	; 12
    1456:	33 27       	eor	r19, r19
    1458:	23 2b       	or	r18, r19
    145a:	19 f0       	breq	.+6      	; 0x1462 <_ZN15LineDetectorLib6DetectEh+0x1d6>
    145c:	8a e0       	ldi	r24, 0x0A	; 10
    145e:	84 83       	std	Z+4, r24	; 0x04
    1460:	08 95       	ret
    1462:	83 ff       	sbrs	r24, 3
    1464:	03 c0       	rjmp	.+6      	; 0x146c <_ZN15LineDetectorLib6DetectEh+0x1e0>
    1466:	87 e0       	ldi	r24, 0x07	; 7
    1468:	84 83       	std	Z+4, r24	; 0x04
    146a:	08 95       	ret
    146c:	9c 01       	movw	r18, r24
    146e:	28 71       	andi	r18, 0x18	; 24
    1470:	33 27       	eor	r19, r19
    1472:	23 2b       	or	r18, r19
    1474:	19 f0       	breq	.+6      	; 0x147c <_ZN15LineDetectorLib6DetectEh+0x1f0>
    1476:	86 e0       	ldi	r24, 0x06	; 6
    1478:	84 83       	std	Z+4, r24	; 0x04
    147a:	08 95       	ret
    147c:	84 ff       	sbrs	r24, 4
    147e:	03 c0       	rjmp	.+6      	; 0x1486 <_ZN15LineDetectorLib6DetectEh+0x1fa>
    1480:	85 e0       	ldi	r24, 0x05	; 5
    1482:	84 83       	std	Z+4, r24	; 0x04
    1484:	08 95       	ret
    1486:	9c 01       	movw	r18, r24
    1488:	20 73       	andi	r18, 0x30	; 48
    148a:	33 27       	eor	r19, r19
    148c:	23 2b       	or	r18, r19
    148e:	19 f0       	breq	.+6      	; 0x1496 <_ZN15LineDetectorLib6DetectEh+0x20a>
    1490:	84 e0       	ldi	r24, 0x04	; 4
    1492:	84 83       	std	Z+4, r24	; 0x04
    1494:	08 95       	ret
    1496:	85 ff       	sbrs	r24, 5
    1498:	03 c0       	rjmp	.+6      	; 0x14a0 <_ZN15LineDetectorLib6DetectEh+0x214>
    149a:	83 e0       	ldi	r24, 0x03	; 3
    149c:	84 83       	std	Z+4, r24	; 0x04
    149e:	08 95       	ret
    14a0:	9c 01       	movw	r18, r24
    14a2:	20 76       	andi	r18, 0x60	; 96
    14a4:	33 27       	eor	r19, r19
    14a6:	23 2b       	or	r18, r19
    14a8:	19 f0       	breq	.+6      	; 0x14b0 <_ZN15LineDetectorLib6DetectEh+0x224>
    14aa:	82 e0       	ldi	r24, 0x02	; 2
    14ac:	84 83       	std	Z+4, r24	; 0x04
    14ae:	08 95       	ret
    14b0:	86 ff       	sbrs	r24, 6
    14b2:	03 c0       	rjmp	.+6      	; 0x14ba <_ZN15LineDetectorLib6DetectEh+0x22e>
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	84 83       	std	Z+4, r24	; 0x04
    14b8:	08 95       	ret
    14ba:	9c 01       	movw	r18, r24
    14bc:	20 7c       	andi	r18, 0xC0	; 192
    14be:	33 27       	eor	r19, r19
    14c0:	23 2b       	or	r18, r19
    14c2:	11 f0       	breq	.+4      	; 0x14c8 <_ZN15LineDetectorLib6DetectEh+0x23c>
    14c4:	14 82       	std	Z+4, r1	; 0x04
    14c6:	08 95       	ret
    14c8:	87 ff       	sbrs	r24, 7
    14ca:	03 c0       	rjmp	.+6      	; 0x14d2 <_ZN15LineDetectorLib6DetectEh+0x246>
    14cc:	8f ef       	ldi	r24, 0xFF	; 255
    14ce:	84 83       	std	Z+4, r24	; 0x04
    14d0:	08 95       	ret
    14d2:	9c 01       	movw	r18, r24
    14d4:	20 78       	andi	r18, 0x80	; 128
    14d6:	31 70       	andi	r19, 0x01	; 1
    14d8:	20 38       	cpi	r18, 0x80	; 128
    14da:	31 40       	sbci	r19, 0x01	; 1
    14dc:	19 f4       	brne	.+6      	; 0x14e4 <_ZN15LineDetectorLib6DetectEh+0x258>
    14de:	8e ef       	ldi	r24, 0xFE	; 254
    14e0:	84 83       	std	Z+4, r24	; 0x04
    14e2:	08 95       	ret
    14e4:	90 ff       	sbrs	r25, 0
    14e6:	03 c0       	rjmp	.+6      	; 0x14ee <_ZN15LineDetectorLib6DetectEh+0x262>
    14e8:	8d ef       	ldi	r24, 0xFD	; 253
    14ea:	84 83       	std	Z+4, r24	; 0x04
    14ec:	08 95       	ret
    14ee:	9c 01       	movw	r18, r24
    14f0:	22 27       	eor	r18, r18
    14f2:	33 70       	andi	r19, 0x03	; 3
    14f4:	21 15       	cp	r18, r1
    14f6:	33 40       	sbci	r19, 0x03	; 3
    14f8:	19 f4       	brne	.+6      	; 0x1500 <_ZN15LineDetectorLib6DetectEh+0x274>
    14fa:	8c ef       	ldi	r24, 0xFC	; 252
    14fc:	84 83       	std	Z+4, r24	; 0x04
    14fe:	08 95       	ret
    1500:	91 ff       	sbrs	r25, 1
    1502:	03 c0       	rjmp	.+6      	; 0x150a <_ZN15LineDetectorLib6DetectEh+0x27e>
    1504:	8b ef       	ldi	r24, 0xFB	; 251
    1506:	84 83       	std	Z+4, r24	; 0x04
    1508:	08 95       	ret
    150a:	9c 01       	movw	r18, r24
    150c:	22 27       	eor	r18, r18
    150e:	36 70       	andi	r19, 0x06	; 6
    1510:	21 15       	cp	r18, r1
    1512:	36 40       	sbci	r19, 0x06	; 6
    1514:	19 f4       	brne	.+6      	; 0x151c <_ZN15LineDetectorLib6DetectEh+0x290>
    1516:	8a ef       	ldi	r24, 0xFA	; 250
    1518:	84 83       	std	Z+4, r24	; 0x04
    151a:	08 95       	ret
    151c:	92 ff       	sbrs	r25, 2
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <_ZN15LineDetectorLib6DetectEh+0x29a>
    1520:	89 ef       	ldi	r24, 0xF9	; 249
    1522:	84 83       	std	Z+4, r24	; 0x04
    1524:	08 95       	ret
    1526:	9c 01       	movw	r18, r24
    1528:	22 27       	eor	r18, r18
    152a:	3c 70       	andi	r19, 0x0C	; 12
    152c:	21 15       	cp	r18, r1
    152e:	3c 40       	sbci	r19, 0x0C	; 12
    1530:	19 f4       	brne	.+6      	; 0x1538 <_ZN15LineDetectorLib6DetectEh+0x2ac>
    1532:	86 ef       	ldi	r24, 0xF6	; 246
    1534:	84 83       	std	Z+4, r24	; 0x04
    1536:	08 95       	ret
    1538:	93 ff       	sbrs	r25, 3
    153a:	03 c0       	rjmp	.+6      	; 0x1542 <_ZN15LineDetectorLib6DetectEh+0x2b6>
    153c:	82 ef       	ldi	r24, 0xF2	; 242
    153e:	84 83       	std	Z+4, r24	; 0x04
    1540:	08 95       	ret
    1542:	9c 01       	movw	r18, r24
    1544:	22 27       	eor	r18, r18
    1546:	38 71       	andi	r19, 0x18	; 24
    1548:	21 15       	cp	r18, r1
    154a:	38 41       	sbci	r19, 0x18	; 24
    154c:	19 f4       	brne	.+6      	; 0x1554 <_ZN15LineDetectorLib6DetectEh+0x2c8>
    154e:	8e ee       	ldi	r24, 0xEE	; 238
    1550:	84 83       	std	Z+4, r24	; 0x04
    1552:	08 95       	ret
    1554:	94 ff       	sbrs	r25, 4
    1556:	03 c0       	rjmp	.+6      	; 0x155e <_ZN15LineDetectorLib6DetectEh+0x2d2>
    1558:	8a ee       	ldi	r24, 0xEA	; 234
    155a:	84 83       	std	Z+4, r24	; 0x04
    155c:	08 95       	ret
    155e:	9c 01       	movw	r18, r24
    1560:	22 27       	eor	r18, r18
    1562:	30 73       	andi	r19, 0x30	; 48
    1564:	21 15       	cp	r18, r1
    1566:	30 43       	sbci	r19, 0x30	; 48
    1568:	19 f4       	brne	.+6      	; 0x1570 <_ZN15LineDetectorLib6DetectEh+0x2e4>
    156a:	86 ee       	ldi	r24, 0xE6	; 230
    156c:	84 83       	std	Z+4, r24	; 0x04
    156e:	08 95       	ret
    1570:	95 ff       	sbrs	r25, 5
    1572:	03 c0       	rjmp	.+6      	; 0x157a <_ZN15LineDetectorLib6DetectEh+0x2ee>
    1574:	82 ee       	ldi	r24, 0xE2	; 226
    1576:	84 83       	std	Z+4, r24	; 0x04
    1578:	08 95       	ret
    157a:	89 2b       	or	r24, r25
    157c:	09 f0       	breq	.+2      	; 0x1580 <_ZN15LineDetectorLib6DetectEh+0x2f4>
    157e:	e6 c3       	rjmp	.+1996   	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1580:	81 ee       	ldi	r24, 0xE1	; 225
    1582:	84 83       	std	Z+4, r24	; 0x04
    1584:	08 95       	ret
    1586:	63 30       	cpi	r22, 0x03	; 3
    1588:	09 f0       	breq	.+2      	; 0x158c <_ZN15LineDetectorLib6DetectEh+0x300>
    158a:	c1 c0       	rjmp	.+386    	; 0x170e <_ZN15LineDetectorLib6DetectEh+0x482>
    158c:	83 89       	ldd	r24, Z+19	; 0x13
    158e:	94 89       	ldd	r25, Z+20	; 0x14
    1590:	95 ff       	sbrs	r25, 5
    1592:	03 c0       	rjmp	.+6      	; 0x159a <_ZN15LineDetectorLib6DetectEh+0x30e>
    1594:	82 ee       	ldi	r24, 0xE2	; 226
    1596:	84 83       	std	Z+4, r24	; 0x04
    1598:	08 95       	ret
    159a:	9c 01       	movw	r18, r24
    159c:	22 27       	eor	r18, r18
    159e:	30 73       	andi	r19, 0x30	; 48
    15a0:	23 2b       	or	r18, r19
    15a2:	19 f0       	breq	.+6      	; 0x15aa <_ZN15LineDetectorLib6DetectEh+0x31e>
    15a4:	86 ee       	ldi	r24, 0xE6	; 230
    15a6:	84 83       	std	Z+4, r24	; 0x04
    15a8:	08 95       	ret
    15aa:	94 ff       	sbrs	r25, 4
    15ac:	03 c0       	rjmp	.+6      	; 0x15b4 <_ZN15LineDetectorLib6DetectEh+0x328>
    15ae:	8a ee       	ldi	r24, 0xEA	; 234
    15b0:	84 83       	std	Z+4, r24	; 0x04
    15b2:	08 95       	ret
    15b4:	9c 01       	movw	r18, r24
    15b6:	22 27       	eor	r18, r18
    15b8:	38 71       	andi	r19, 0x18	; 24
    15ba:	23 2b       	or	r18, r19
    15bc:	19 f0       	breq	.+6      	; 0x15c4 <_ZN15LineDetectorLib6DetectEh+0x338>
    15be:	8e ee       	ldi	r24, 0xEE	; 238
    15c0:	84 83       	std	Z+4, r24	; 0x04
    15c2:	08 95       	ret
    15c4:	93 ff       	sbrs	r25, 3
    15c6:	03 c0       	rjmp	.+6      	; 0x15ce <_ZN15LineDetectorLib6DetectEh+0x342>
    15c8:	82 ef       	ldi	r24, 0xF2	; 242
    15ca:	84 83       	std	Z+4, r24	; 0x04
    15cc:	08 95       	ret
    15ce:	9c 01       	movw	r18, r24
    15d0:	22 27       	eor	r18, r18
    15d2:	3c 70       	andi	r19, 0x0C	; 12
    15d4:	23 2b       	or	r18, r19
    15d6:	19 f0       	breq	.+6      	; 0x15de <_ZN15LineDetectorLib6DetectEh+0x352>
    15d8:	86 ef       	ldi	r24, 0xF6	; 246
    15da:	84 83       	std	Z+4, r24	; 0x04
    15dc:	08 95       	ret
    15de:	92 ff       	sbrs	r25, 2
    15e0:	03 c0       	rjmp	.+6      	; 0x15e8 <_ZN15LineDetectorLib6DetectEh+0x35c>
    15e2:	89 ef       	ldi	r24, 0xF9	; 249
    15e4:	84 83       	std	Z+4, r24	; 0x04
    15e6:	08 95       	ret
    15e8:	9c 01       	movw	r18, r24
    15ea:	22 27       	eor	r18, r18
    15ec:	36 70       	andi	r19, 0x06	; 6
    15ee:	23 2b       	or	r18, r19
    15f0:	19 f0       	breq	.+6      	; 0x15f8 <_ZN15LineDetectorLib6DetectEh+0x36c>
    15f2:	8a ef       	ldi	r24, 0xFA	; 250
    15f4:	84 83       	std	Z+4, r24	; 0x04
    15f6:	08 95       	ret
    15f8:	91 ff       	sbrs	r25, 1
    15fa:	03 c0       	rjmp	.+6      	; 0x1602 <_ZN15LineDetectorLib6DetectEh+0x376>
    15fc:	8b ef       	ldi	r24, 0xFB	; 251
    15fe:	84 83       	std	Z+4, r24	; 0x04
    1600:	08 95       	ret
    1602:	9c 01       	movw	r18, r24
    1604:	22 27       	eor	r18, r18
    1606:	33 70       	andi	r19, 0x03	; 3
    1608:	23 2b       	or	r18, r19
    160a:	19 f0       	breq	.+6      	; 0x1612 <_ZN15LineDetectorLib6DetectEh+0x386>
    160c:	8c ef       	ldi	r24, 0xFC	; 252
    160e:	84 83       	std	Z+4, r24	; 0x04
    1610:	08 95       	ret
    1612:	90 ff       	sbrs	r25, 0
    1614:	03 c0       	rjmp	.+6      	; 0x161c <_ZN15LineDetectorLib6DetectEh+0x390>
    1616:	8d ef       	ldi	r24, 0xFD	; 253
    1618:	84 83       	std	Z+4, r24	; 0x04
    161a:	08 95       	ret
    161c:	9c 01       	movw	r18, r24
    161e:	20 78       	andi	r18, 0x80	; 128
    1620:	31 70       	andi	r19, 0x01	; 1
    1622:	23 2b       	or	r18, r19
    1624:	19 f0       	breq	.+6      	; 0x162c <_ZN15LineDetectorLib6DetectEh+0x3a0>
    1626:	8e ef       	ldi	r24, 0xFE	; 254
    1628:	84 83       	std	Z+4, r24	; 0x04
    162a:	08 95       	ret
    162c:	87 ff       	sbrs	r24, 7
    162e:	03 c0       	rjmp	.+6      	; 0x1636 <_ZN15LineDetectorLib6DetectEh+0x3aa>
    1630:	8f ef       	ldi	r24, 0xFF	; 255
    1632:	84 83       	std	Z+4, r24	; 0x04
    1634:	08 95       	ret
    1636:	9c 01       	movw	r18, r24
    1638:	20 7c       	andi	r18, 0xC0	; 192
    163a:	33 27       	eor	r19, r19
    163c:	23 2b       	or	r18, r19
    163e:	11 f0       	breq	.+4      	; 0x1644 <_ZN15LineDetectorLib6DetectEh+0x3b8>
    1640:	14 82       	std	Z+4, r1	; 0x04
    1642:	08 95       	ret
    1644:	86 ff       	sbrs	r24, 6
    1646:	03 c0       	rjmp	.+6      	; 0x164e <_ZN15LineDetectorLib6DetectEh+0x3c2>
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	84 83       	std	Z+4, r24	; 0x04
    164c:	08 95       	ret
    164e:	9c 01       	movw	r18, r24
    1650:	20 76       	andi	r18, 0x60	; 96
    1652:	33 27       	eor	r19, r19
    1654:	20 36       	cpi	r18, 0x60	; 96
    1656:	31 05       	cpc	r19, r1
    1658:	19 f4       	brne	.+6      	; 0x1660 <_ZN15LineDetectorLib6DetectEh+0x3d4>
    165a:	82 e0       	ldi	r24, 0x02	; 2
    165c:	84 83       	std	Z+4, r24	; 0x04
    165e:	08 95       	ret
    1660:	85 ff       	sbrs	r24, 5
    1662:	03 c0       	rjmp	.+6      	; 0x166a <_ZN15LineDetectorLib6DetectEh+0x3de>
    1664:	83 e0       	ldi	r24, 0x03	; 3
    1666:	84 83       	std	Z+4, r24	; 0x04
    1668:	08 95       	ret
    166a:	9c 01       	movw	r18, r24
    166c:	20 73       	andi	r18, 0x30	; 48
    166e:	33 27       	eor	r19, r19
    1670:	20 33       	cpi	r18, 0x30	; 48
    1672:	31 05       	cpc	r19, r1
    1674:	19 f4       	brne	.+6      	; 0x167c <_ZN15LineDetectorLib6DetectEh+0x3f0>
    1676:	84 e0       	ldi	r24, 0x04	; 4
    1678:	84 83       	std	Z+4, r24	; 0x04
    167a:	08 95       	ret
    167c:	84 ff       	sbrs	r24, 4
    167e:	03 c0       	rjmp	.+6      	; 0x1686 <_ZN15LineDetectorLib6DetectEh+0x3fa>
    1680:	85 e0       	ldi	r24, 0x05	; 5
    1682:	84 83       	std	Z+4, r24	; 0x04
    1684:	08 95       	ret
    1686:	9c 01       	movw	r18, r24
    1688:	28 71       	andi	r18, 0x18	; 24
    168a:	33 27       	eor	r19, r19
    168c:	28 31       	cpi	r18, 0x18	; 24
    168e:	31 05       	cpc	r19, r1
    1690:	19 f4       	brne	.+6      	; 0x1698 <_ZN15LineDetectorLib6DetectEh+0x40c>
    1692:	86 e0       	ldi	r24, 0x06	; 6
    1694:	84 83       	std	Z+4, r24	; 0x04
    1696:	08 95       	ret
    1698:	83 ff       	sbrs	r24, 3
    169a:	03 c0       	rjmp	.+6      	; 0x16a2 <_ZN15LineDetectorLib6DetectEh+0x416>
    169c:	87 e0       	ldi	r24, 0x07	; 7
    169e:	84 83       	std	Z+4, r24	; 0x04
    16a0:	08 95       	ret
    16a2:	9c 01       	movw	r18, r24
    16a4:	2c 70       	andi	r18, 0x0C	; 12
    16a6:	33 27       	eor	r19, r19
    16a8:	2c 30       	cpi	r18, 0x0C	; 12
    16aa:	31 05       	cpc	r19, r1
    16ac:	19 f4       	brne	.+6      	; 0x16b4 <_ZN15LineDetectorLib6DetectEh+0x428>
    16ae:	8a e0       	ldi	r24, 0x0A	; 10
    16b0:	84 83       	std	Z+4, r24	; 0x04
    16b2:	08 95       	ret
    16b4:	82 ff       	sbrs	r24, 2
    16b6:	03 c0       	rjmp	.+6      	; 0x16be <_ZN15LineDetectorLib6DetectEh+0x432>
    16b8:	8e e0       	ldi	r24, 0x0E	; 14
    16ba:	84 83       	std	Z+4, r24	; 0x04
    16bc:	08 95       	ret
    16be:	9c 01       	movw	r18, r24
    16c0:	26 70       	andi	r18, 0x06	; 6
    16c2:	33 27       	eor	r19, r19
    16c4:	26 30       	cpi	r18, 0x06	; 6
    16c6:	31 05       	cpc	r19, r1
    16c8:	19 f4       	brne	.+6      	; 0x16d0 <_ZN15LineDetectorLib6DetectEh+0x444>
    16ca:	82 e1       	ldi	r24, 0x12	; 18
    16cc:	84 83       	std	Z+4, r24	; 0x04
    16ce:	08 95       	ret
    16d0:	81 ff       	sbrs	r24, 1
    16d2:	03 c0       	rjmp	.+6      	; 0x16da <_ZN15LineDetectorLib6DetectEh+0x44e>
    16d4:	86 e1       	ldi	r24, 0x16	; 22
    16d6:	84 83       	std	Z+4, r24	; 0x04
    16d8:	08 95       	ret
    16da:	9c 01       	movw	r18, r24
    16dc:	23 70       	andi	r18, 0x03	; 3
    16de:	33 27       	eor	r19, r19
    16e0:	23 30       	cpi	r18, 0x03	; 3
    16e2:	31 05       	cpc	r19, r1
    16e4:	19 f4       	brne	.+6      	; 0x16ec <_ZN15LineDetectorLib6DetectEh+0x460>
    16e6:	8a e1       	ldi	r24, 0x1A	; 26
    16e8:	84 83       	std	Z+4, r24	; 0x04
    16ea:	08 95       	ret
    16ec:	80 ff       	sbrs	r24, 0
    16ee:	03 c0       	rjmp	.+6      	; 0x16f6 <_ZN15LineDetectorLib6DetectEh+0x46a>
    16f0:	8e e1       	ldi	r24, 0x1E	; 30
    16f2:	84 83       	std	Z+4, r24	; 0x04
    16f4:	08 95       	ret
    16f6:	89 2b       	or	r24, r25
    16f8:	09 f0       	breq	.+2      	; 0x16fc <_ZN15LineDetectorLib6DetectEh+0x470>
    16fa:	28 c3       	rjmp	.+1616   	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    16fc:	84 81       	ldd	r24, Z+4	; 0x04
    16fe:	82 3e       	cpi	r24, 0xE2	; 226
    1700:	19 f4       	brne	.+6      	; 0x1708 <_ZN15LineDetectorLib6DetectEh+0x47c>
    1702:	81 ee       	ldi	r24, 0xE1	; 225
    1704:	84 83       	std	Z+4, r24	; 0x04
    1706:	08 95       	ret
    1708:	8f e1       	ldi	r24, 0x1F	; 31
    170a:	84 83       	std	Z+4, r24	; 0x04
    170c:	08 95       	ret
    170e:	64 30       	cpi	r22, 0x04	; 4
    1710:	09 f0       	breq	.+2      	; 0x1714 <_ZN15LineDetectorLib6DetectEh+0x488>
    1712:	c1 c0       	rjmp	.+386    	; 0x1896 <_ZN15LineDetectorLib6DetectEh+0x60a>
    1714:	83 89       	ldd	r24, Z+19	; 0x13
    1716:	94 89       	ldd	r25, Z+20	; 0x14
    1718:	80 ff       	sbrs	r24, 0
    171a:	03 c0       	rjmp	.+6      	; 0x1722 <_ZN15LineDetectorLib6DetectEh+0x496>
    171c:	8e e1       	ldi	r24, 0x1E	; 30
    171e:	84 83       	std	Z+4, r24	; 0x04
    1720:	08 95       	ret
    1722:	9c 01       	movw	r18, r24
    1724:	23 70       	andi	r18, 0x03	; 3
    1726:	33 27       	eor	r19, r19
    1728:	23 2b       	or	r18, r19
    172a:	19 f0       	breq	.+6      	; 0x1732 <_ZN15LineDetectorLib6DetectEh+0x4a6>
    172c:	8a e1       	ldi	r24, 0x1A	; 26
    172e:	84 83       	std	Z+4, r24	; 0x04
    1730:	08 95       	ret
    1732:	81 ff       	sbrs	r24, 1
    1734:	03 c0       	rjmp	.+6      	; 0x173c <_ZN15LineDetectorLib6DetectEh+0x4b0>
    1736:	86 e1       	ldi	r24, 0x16	; 22
    1738:	84 83       	std	Z+4, r24	; 0x04
    173a:	08 95       	ret
    173c:	9c 01       	movw	r18, r24
    173e:	26 70       	andi	r18, 0x06	; 6
    1740:	33 27       	eor	r19, r19
    1742:	23 2b       	or	r18, r19
    1744:	19 f0       	breq	.+6      	; 0x174c <_ZN15LineDetectorLib6DetectEh+0x4c0>
    1746:	82 e1       	ldi	r24, 0x12	; 18
    1748:	84 83       	std	Z+4, r24	; 0x04
    174a:	08 95       	ret
    174c:	82 ff       	sbrs	r24, 2
    174e:	03 c0       	rjmp	.+6      	; 0x1756 <_ZN15LineDetectorLib6DetectEh+0x4ca>
    1750:	8e e0       	ldi	r24, 0x0E	; 14
    1752:	84 83       	std	Z+4, r24	; 0x04
    1754:	08 95       	ret
    1756:	9c 01       	movw	r18, r24
    1758:	2c 70       	andi	r18, 0x0C	; 12
    175a:	33 27       	eor	r19, r19
    175c:	23 2b       	or	r18, r19
    175e:	19 f0       	breq	.+6      	; 0x1766 <_ZN15LineDetectorLib6DetectEh+0x4da>
    1760:	8a e0       	ldi	r24, 0x0A	; 10
    1762:	84 83       	std	Z+4, r24	; 0x04
    1764:	08 95       	ret
    1766:	83 ff       	sbrs	r24, 3
    1768:	03 c0       	rjmp	.+6      	; 0x1770 <_ZN15LineDetectorLib6DetectEh+0x4e4>
    176a:	87 e0       	ldi	r24, 0x07	; 7
    176c:	84 83       	std	Z+4, r24	; 0x04
    176e:	08 95       	ret
    1770:	9c 01       	movw	r18, r24
    1772:	28 71       	andi	r18, 0x18	; 24
    1774:	33 27       	eor	r19, r19
    1776:	23 2b       	or	r18, r19
    1778:	19 f0       	breq	.+6      	; 0x1780 <_ZN15LineDetectorLib6DetectEh+0x4f4>
    177a:	86 e0       	ldi	r24, 0x06	; 6
    177c:	84 83       	std	Z+4, r24	; 0x04
    177e:	08 95       	ret
    1780:	84 ff       	sbrs	r24, 4
    1782:	03 c0       	rjmp	.+6      	; 0x178a <_ZN15LineDetectorLib6DetectEh+0x4fe>
    1784:	85 e0       	ldi	r24, 0x05	; 5
    1786:	84 83       	std	Z+4, r24	; 0x04
    1788:	08 95       	ret
    178a:	9c 01       	movw	r18, r24
    178c:	20 73       	andi	r18, 0x30	; 48
    178e:	33 27       	eor	r19, r19
    1790:	23 2b       	or	r18, r19
    1792:	19 f0       	breq	.+6      	; 0x179a <_ZN15LineDetectorLib6DetectEh+0x50e>
    1794:	84 e0       	ldi	r24, 0x04	; 4
    1796:	84 83       	std	Z+4, r24	; 0x04
    1798:	08 95       	ret
    179a:	85 ff       	sbrs	r24, 5
    179c:	03 c0       	rjmp	.+6      	; 0x17a4 <_ZN15LineDetectorLib6DetectEh+0x518>
    179e:	83 e0       	ldi	r24, 0x03	; 3
    17a0:	84 83       	std	Z+4, r24	; 0x04
    17a2:	08 95       	ret
    17a4:	9c 01       	movw	r18, r24
    17a6:	20 76       	andi	r18, 0x60	; 96
    17a8:	33 27       	eor	r19, r19
    17aa:	23 2b       	or	r18, r19
    17ac:	19 f0       	breq	.+6      	; 0x17b4 <_ZN15LineDetectorLib6DetectEh+0x528>
    17ae:	82 e0       	ldi	r24, 0x02	; 2
    17b0:	84 83       	std	Z+4, r24	; 0x04
    17b2:	08 95       	ret
    17b4:	86 ff       	sbrs	r24, 6
    17b6:	03 c0       	rjmp	.+6      	; 0x17be <_ZN15LineDetectorLib6DetectEh+0x532>
    17b8:	81 e0       	ldi	r24, 0x01	; 1
    17ba:	84 83       	std	Z+4, r24	; 0x04
    17bc:	08 95       	ret
    17be:	9c 01       	movw	r18, r24
    17c0:	20 7c       	andi	r18, 0xC0	; 192
    17c2:	33 27       	eor	r19, r19
    17c4:	23 2b       	or	r18, r19
    17c6:	11 f0       	breq	.+4      	; 0x17cc <_ZN15LineDetectorLib6DetectEh+0x540>
    17c8:	14 82       	std	Z+4, r1	; 0x04
    17ca:	08 95       	ret
    17cc:	87 ff       	sbrs	r24, 7
    17ce:	03 c0       	rjmp	.+6      	; 0x17d6 <_ZN15LineDetectorLib6DetectEh+0x54a>
    17d0:	8f ef       	ldi	r24, 0xFF	; 255
    17d2:	84 83       	std	Z+4, r24	; 0x04
    17d4:	08 95       	ret
    17d6:	9c 01       	movw	r18, r24
    17d8:	20 78       	andi	r18, 0x80	; 128
    17da:	31 70       	andi	r19, 0x01	; 1
    17dc:	20 38       	cpi	r18, 0x80	; 128
    17de:	31 40       	sbci	r19, 0x01	; 1
    17e0:	19 f4       	brne	.+6      	; 0x17e8 <_ZN15LineDetectorLib6DetectEh+0x55c>
    17e2:	8e ef       	ldi	r24, 0xFE	; 254
    17e4:	84 83       	std	Z+4, r24	; 0x04
    17e6:	08 95       	ret
    17e8:	90 ff       	sbrs	r25, 0
    17ea:	03 c0       	rjmp	.+6      	; 0x17f2 <_ZN15LineDetectorLib6DetectEh+0x566>
    17ec:	8d ef       	ldi	r24, 0xFD	; 253
    17ee:	84 83       	std	Z+4, r24	; 0x04
    17f0:	08 95       	ret
    17f2:	9c 01       	movw	r18, r24
    17f4:	22 27       	eor	r18, r18
    17f6:	33 70       	andi	r19, 0x03	; 3
    17f8:	21 15       	cp	r18, r1
    17fa:	33 40       	sbci	r19, 0x03	; 3
    17fc:	19 f4       	brne	.+6      	; 0x1804 <_ZN15LineDetectorLib6DetectEh+0x578>
    17fe:	8c ef       	ldi	r24, 0xFC	; 252
    1800:	84 83       	std	Z+4, r24	; 0x04
    1802:	08 95       	ret
    1804:	91 ff       	sbrs	r25, 1
    1806:	03 c0       	rjmp	.+6      	; 0x180e <_ZN15LineDetectorLib6DetectEh+0x582>
    1808:	8b ef       	ldi	r24, 0xFB	; 251
    180a:	84 83       	std	Z+4, r24	; 0x04
    180c:	08 95       	ret
    180e:	9c 01       	movw	r18, r24
    1810:	22 27       	eor	r18, r18
    1812:	36 70       	andi	r19, 0x06	; 6
    1814:	21 15       	cp	r18, r1
    1816:	36 40       	sbci	r19, 0x06	; 6
    1818:	19 f4       	brne	.+6      	; 0x1820 <_ZN15LineDetectorLib6DetectEh+0x594>
    181a:	8a ef       	ldi	r24, 0xFA	; 250
    181c:	84 83       	std	Z+4, r24	; 0x04
    181e:	08 95       	ret
    1820:	92 ff       	sbrs	r25, 2
    1822:	03 c0       	rjmp	.+6      	; 0x182a <_ZN15LineDetectorLib6DetectEh+0x59e>
    1824:	89 ef       	ldi	r24, 0xF9	; 249
    1826:	84 83       	std	Z+4, r24	; 0x04
    1828:	08 95       	ret
    182a:	9c 01       	movw	r18, r24
    182c:	22 27       	eor	r18, r18
    182e:	3c 70       	andi	r19, 0x0C	; 12
    1830:	21 15       	cp	r18, r1
    1832:	3c 40       	sbci	r19, 0x0C	; 12
    1834:	19 f4       	brne	.+6      	; 0x183c <_ZN15LineDetectorLib6DetectEh+0x5b0>
    1836:	86 ef       	ldi	r24, 0xF6	; 246
    1838:	84 83       	std	Z+4, r24	; 0x04
    183a:	08 95       	ret
    183c:	93 ff       	sbrs	r25, 3
    183e:	03 c0       	rjmp	.+6      	; 0x1846 <_ZN15LineDetectorLib6DetectEh+0x5ba>
    1840:	82 ef       	ldi	r24, 0xF2	; 242
    1842:	84 83       	std	Z+4, r24	; 0x04
    1844:	08 95       	ret
    1846:	9c 01       	movw	r18, r24
    1848:	22 27       	eor	r18, r18
    184a:	38 71       	andi	r19, 0x18	; 24
    184c:	21 15       	cp	r18, r1
    184e:	38 41       	sbci	r19, 0x18	; 24
    1850:	19 f4       	brne	.+6      	; 0x1858 <_ZN15LineDetectorLib6DetectEh+0x5cc>
    1852:	8e ee       	ldi	r24, 0xEE	; 238
    1854:	84 83       	std	Z+4, r24	; 0x04
    1856:	08 95       	ret
    1858:	94 ff       	sbrs	r25, 4
    185a:	03 c0       	rjmp	.+6      	; 0x1862 <_ZN15LineDetectorLib6DetectEh+0x5d6>
    185c:	8a ee       	ldi	r24, 0xEA	; 234
    185e:	84 83       	std	Z+4, r24	; 0x04
    1860:	08 95       	ret
    1862:	9c 01       	movw	r18, r24
    1864:	22 27       	eor	r18, r18
    1866:	30 73       	andi	r19, 0x30	; 48
    1868:	21 15       	cp	r18, r1
    186a:	30 43       	sbci	r19, 0x30	; 48
    186c:	19 f4       	brne	.+6      	; 0x1874 <_ZN15LineDetectorLib6DetectEh+0x5e8>
    186e:	86 ee       	ldi	r24, 0xE6	; 230
    1870:	84 83       	std	Z+4, r24	; 0x04
    1872:	08 95       	ret
    1874:	95 ff       	sbrs	r25, 5
    1876:	03 c0       	rjmp	.+6      	; 0x187e <_ZN15LineDetectorLib6DetectEh+0x5f2>
    1878:	82 ee       	ldi	r24, 0xE2	; 226
    187a:	84 83       	std	Z+4, r24	; 0x04
    187c:	08 95       	ret
    187e:	89 2b       	or	r24, r25
    1880:	09 f0       	breq	.+2      	; 0x1884 <_ZN15LineDetectorLib6DetectEh+0x5f8>
    1882:	64 c2       	rjmp	.+1224   	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1884:	84 81       	ldd	r24, Z+4	; 0x04
    1886:	8e 31       	cpi	r24, 0x1E	; 30
    1888:	19 f4       	brne	.+6      	; 0x1890 <_ZN15LineDetectorLib6DetectEh+0x604>
    188a:	8f e1       	ldi	r24, 0x1F	; 31
    188c:	84 83       	std	Z+4, r24	; 0x04
    188e:	08 95       	ret
    1890:	81 ee       	ldi	r24, 0xE1	; 225
    1892:	84 83       	std	Z+4, r24	; 0x04
    1894:	08 95       	ret
    1896:	62 30       	cpi	r22, 0x02	; 2
    1898:	09 f0       	breq	.+2      	; 0x189c <_ZN15LineDetectorLib6DetectEh+0x610>
    189a:	cb c0       	rjmp	.+406    	; 0x1a32 <_ZN15LineDetectorLib6DetectEh+0x7a6>
    189c:	83 89       	ldd	r24, Z+19	; 0x13
    189e:	94 89       	ldd	r25, Z+20	; 0x14
    18a0:	95 ff       	sbrs	r25, 5
    18a2:	03 c0       	rjmp	.+6      	; 0x18aa <_ZN15LineDetectorLib6DetectEh+0x61e>
    18a4:	82 ee       	ldi	r24, 0xE2	; 226
    18a6:	84 83       	std	Z+4, r24	; 0x04
    18a8:	08 95       	ret
    18aa:	80 ff       	sbrs	r24, 0
    18ac:	03 c0       	rjmp	.+6      	; 0x18b4 <_ZN15LineDetectorLib6DetectEh+0x628>
    18ae:	8e e1       	ldi	r24, 0x1E	; 30
    18b0:	84 83       	std	Z+4, r24	; 0x04
    18b2:	08 95       	ret
    18b4:	9c 01       	movw	r18, r24
    18b6:	22 27       	eor	r18, r18
    18b8:	30 73       	andi	r19, 0x30	; 48
    18ba:	21 15       	cp	r18, r1
    18bc:	30 43       	sbci	r19, 0x30	; 48
    18be:	19 f4       	brne	.+6      	; 0x18c6 <_ZN15LineDetectorLib6DetectEh+0x63a>
    18c0:	86 ee       	ldi	r24, 0xE6	; 230
    18c2:	84 83       	std	Z+4, r24	; 0x04
    18c4:	08 95       	ret
    18c6:	9c 01       	movw	r18, r24
    18c8:	23 70       	andi	r18, 0x03	; 3
    18ca:	33 27       	eor	r19, r19
    18cc:	23 30       	cpi	r18, 0x03	; 3
    18ce:	31 05       	cpc	r19, r1
    18d0:	19 f4       	brne	.+6      	; 0x18d8 <_ZN15LineDetectorLib6DetectEh+0x64c>
    18d2:	8a e1       	ldi	r24, 0x1A	; 26
    18d4:	84 83       	std	Z+4, r24	; 0x04
    18d6:	08 95       	ret
    18d8:	94 ff       	sbrs	r25, 4
    18da:	03 c0       	rjmp	.+6      	; 0x18e2 <_ZN15LineDetectorLib6DetectEh+0x656>
    18dc:	8a ee       	ldi	r24, 0xEA	; 234
    18de:	84 83       	std	Z+4, r24	; 0x04
    18e0:	08 95       	ret
    18e2:	81 ff       	sbrs	r24, 1
    18e4:	03 c0       	rjmp	.+6      	; 0x18ec <_ZN15LineDetectorLib6DetectEh+0x660>
    18e6:	86 e1       	ldi	r24, 0x16	; 22
    18e8:	84 83       	std	Z+4, r24	; 0x04
    18ea:	08 95       	ret
    18ec:	9c 01       	movw	r18, r24
    18ee:	22 27       	eor	r18, r18
    18f0:	38 71       	andi	r19, 0x18	; 24
    18f2:	21 15       	cp	r18, r1
    18f4:	38 41       	sbci	r19, 0x18	; 24
    18f6:	19 f4       	brne	.+6      	; 0x18fe <_ZN15LineDetectorLib6DetectEh+0x672>
    18f8:	8e ee       	ldi	r24, 0xEE	; 238
    18fa:	84 83       	std	Z+4, r24	; 0x04
    18fc:	08 95       	ret
    18fe:	9c 01       	movw	r18, r24
    1900:	26 70       	andi	r18, 0x06	; 6
    1902:	33 27       	eor	r19, r19
    1904:	26 30       	cpi	r18, 0x06	; 6
    1906:	31 05       	cpc	r19, r1
    1908:	19 f4       	brne	.+6      	; 0x1910 <_ZN15LineDetectorLib6DetectEh+0x684>
    190a:	82 e1       	ldi	r24, 0x12	; 18
    190c:	84 83       	std	Z+4, r24	; 0x04
    190e:	08 95       	ret
    1910:	93 ff       	sbrs	r25, 3
    1912:	03 c0       	rjmp	.+6      	; 0x191a <_ZN15LineDetectorLib6DetectEh+0x68e>
    1914:	82 ef       	ldi	r24, 0xF2	; 242
    1916:	84 83       	std	Z+4, r24	; 0x04
    1918:	08 95       	ret
    191a:	82 ff       	sbrs	r24, 2
    191c:	03 c0       	rjmp	.+6      	; 0x1924 <_ZN15LineDetectorLib6DetectEh+0x698>
    191e:	8e e0       	ldi	r24, 0x0E	; 14
    1920:	84 83       	std	Z+4, r24	; 0x04
    1922:	08 95       	ret
    1924:	9c 01       	movw	r18, r24
    1926:	22 27       	eor	r18, r18
    1928:	3c 70       	andi	r19, 0x0C	; 12
    192a:	21 15       	cp	r18, r1
    192c:	3c 40       	sbci	r19, 0x0C	; 12
    192e:	19 f4       	brne	.+6      	; 0x1936 <_ZN15LineDetectorLib6DetectEh+0x6aa>
    1930:	86 ef       	ldi	r24, 0xF6	; 246
    1932:	84 83       	std	Z+4, r24	; 0x04
    1934:	08 95       	ret
    1936:	9c 01       	movw	r18, r24
    1938:	2c 70       	andi	r18, 0x0C	; 12
    193a:	33 27       	eor	r19, r19
    193c:	2c 30       	cpi	r18, 0x0C	; 12
    193e:	31 05       	cpc	r19, r1
    1940:	19 f4       	brne	.+6      	; 0x1948 <_ZN15LineDetectorLib6DetectEh+0x6bc>
    1942:	8a e0       	ldi	r24, 0x0A	; 10
    1944:	84 83       	std	Z+4, r24	; 0x04
    1946:	08 95       	ret
    1948:	92 ff       	sbrs	r25, 2
    194a:	03 c0       	rjmp	.+6      	; 0x1952 <_ZN15LineDetectorLib6DetectEh+0x6c6>
    194c:	89 ef       	ldi	r24, 0xF9	; 249
    194e:	84 83       	std	Z+4, r24	; 0x04
    1950:	08 95       	ret
    1952:	83 ff       	sbrs	r24, 3
    1954:	03 c0       	rjmp	.+6      	; 0x195c <_ZN15LineDetectorLib6DetectEh+0x6d0>
    1956:	87 e0       	ldi	r24, 0x07	; 7
    1958:	84 83       	std	Z+4, r24	; 0x04
    195a:	08 95       	ret
    195c:	9c 01       	movw	r18, r24
    195e:	22 27       	eor	r18, r18
    1960:	36 70       	andi	r19, 0x06	; 6
    1962:	21 15       	cp	r18, r1
    1964:	36 40       	sbci	r19, 0x06	; 6
    1966:	19 f4       	brne	.+6      	; 0x196e <_ZN15LineDetectorLib6DetectEh+0x6e2>
    1968:	8a ef       	ldi	r24, 0xFA	; 250
    196a:	84 83       	std	Z+4, r24	; 0x04
    196c:	08 95       	ret
    196e:	9c 01       	movw	r18, r24
    1970:	28 71       	andi	r18, 0x18	; 24
    1972:	33 27       	eor	r19, r19
    1974:	28 31       	cpi	r18, 0x18	; 24
    1976:	31 05       	cpc	r19, r1
    1978:	19 f4       	brne	.+6      	; 0x1980 <_ZN15LineDetectorLib6DetectEh+0x6f4>
    197a:	86 e0       	ldi	r24, 0x06	; 6
    197c:	84 83       	std	Z+4, r24	; 0x04
    197e:	08 95       	ret
    1980:	91 ff       	sbrs	r25, 1
    1982:	03 c0       	rjmp	.+6      	; 0x198a <_ZN15LineDetectorLib6DetectEh+0x6fe>
    1984:	8b ef       	ldi	r24, 0xFB	; 251
    1986:	84 83       	std	Z+4, r24	; 0x04
    1988:	08 95       	ret
    198a:	84 ff       	sbrs	r24, 4
    198c:	03 c0       	rjmp	.+6      	; 0x1994 <_ZN15LineDetectorLib6DetectEh+0x708>
    198e:	85 e0       	ldi	r24, 0x05	; 5
    1990:	84 83       	std	Z+4, r24	; 0x04
    1992:	08 95       	ret
    1994:	9c 01       	movw	r18, r24
    1996:	22 27       	eor	r18, r18
    1998:	33 70       	andi	r19, 0x03	; 3
    199a:	21 15       	cp	r18, r1
    199c:	33 40       	sbci	r19, 0x03	; 3
    199e:	19 f4       	brne	.+6      	; 0x19a6 <_ZN15LineDetectorLib6DetectEh+0x71a>
    19a0:	8c ef       	ldi	r24, 0xFC	; 252
    19a2:	84 83       	std	Z+4, r24	; 0x04
    19a4:	08 95       	ret
    19a6:	9c 01       	movw	r18, r24
    19a8:	20 73       	andi	r18, 0x30	; 48
    19aa:	33 27       	eor	r19, r19
    19ac:	20 33       	cpi	r18, 0x30	; 48
    19ae:	31 05       	cpc	r19, r1
    19b0:	19 f4       	brne	.+6      	; 0x19b8 <_ZN15LineDetectorLib6DetectEh+0x72c>
    19b2:	84 e0       	ldi	r24, 0x04	; 4
    19b4:	84 83       	std	Z+4, r24	; 0x04
    19b6:	08 95       	ret
    19b8:	90 ff       	sbrs	r25, 0
    19ba:	03 c0       	rjmp	.+6      	; 0x19c2 <_ZN15LineDetectorLib6DetectEh+0x736>
    19bc:	8d ef       	ldi	r24, 0xFD	; 253
    19be:	84 83       	std	Z+4, r24	; 0x04
    19c0:	08 95       	ret
    19c2:	85 ff       	sbrs	r24, 5
    19c4:	03 c0       	rjmp	.+6      	; 0x19cc <_ZN15LineDetectorLib6DetectEh+0x740>
    19c6:	83 e0       	ldi	r24, 0x03	; 3
    19c8:	84 83       	std	Z+4, r24	; 0x04
    19ca:	08 95       	ret
    19cc:	9c 01       	movw	r18, r24
    19ce:	20 78       	andi	r18, 0x80	; 128
    19d0:	31 70       	andi	r19, 0x01	; 1
    19d2:	20 38       	cpi	r18, 0x80	; 128
    19d4:	31 40       	sbci	r19, 0x01	; 1
    19d6:	19 f4       	brne	.+6      	; 0x19de <_ZN15LineDetectorLib6DetectEh+0x752>
    19d8:	8e ef       	ldi	r24, 0xFE	; 254
    19da:	84 83       	std	Z+4, r24	; 0x04
    19dc:	08 95       	ret
    19de:	9c 01       	movw	r18, r24
    19e0:	20 76       	andi	r18, 0x60	; 96
    19e2:	33 27       	eor	r19, r19
    19e4:	20 36       	cpi	r18, 0x60	; 96
    19e6:	31 05       	cpc	r19, r1
    19e8:	19 f4       	brne	.+6      	; 0x19f0 <_ZN15LineDetectorLib6DetectEh+0x764>
    19ea:	82 e0       	ldi	r24, 0x02	; 2
    19ec:	84 83       	std	Z+4, r24	; 0x04
    19ee:	08 95       	ret
    19f0:	87 ff       	sbrs	r24, 7
    19f2:	03 c0       	rjmp	.+6      	; 0x19fa <_ZN15LineDetectorLib6DetectEh+0x76e>
    19f4:	8f ef       	ldi	r24, 0xFF	; 255
    19f6:	84 83       	std	Z+4, r24	; 0x04
    19f8:	08 95       	ret
    19fa:	86 ff       	sbrs	r24, 6
    19fc:	03 c0       	rjmp	.+6      	; 0x1a04 <_ZN15LineDetectorLib6DetectEh+0x778>
    19fe:	81 e0       	ldi	r24, 0x01	; 1
    1a00:	84 83       	std	Z+4, r24	; 0x04
    1a02:	08 95       	ret
    1a04:	9c 01       	movw	r18, r24
    1a06:	20 7c       	andi	r18, 0xC0	; 192
    1a08:	33 27       	eor	r19, r19
    1a0a:	20 3c       	cpi	r18, 0xC0	; 192
    1a0c:	31 05       	cpc	r19, r1
    1a0e:	11 f4       	brne	.+4      	; 0x1a14 <_ZN15LineDetectorLib6DetectEh+0x788>
    1a10:	14 82       	std	Z+4, r1	; 0x04
    1a12:	08 95       	ret
    1a14:	89 2b       	or	r24, r25
    1a16:	09 f0       	breq	.+2      	; 0x1a1a <_ZN15LineDetectorLib6DetectEh+0x78e>
    1a18:	99 c1       	rjmp	.+818    	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1a1a:	84 81       	ldd	r24, Z+4	; 0x04
    1a1c:	8e 31       	cpi	r24, 0x1E	; 30
    1a1e:	19 f4       	brne	.+6      	; 0x1a26 <_ZN15LineDetectorLib6DetectEh+0x79a>
    1a20:	8f e1       	ldi	r24, 0x1F	; 31
    1a22:	84 83       	std	Z+4, r24	; 0x04
    1a24:	08 95       	ret
    1a26:	82 3e       	cpi	r24, 0xE2	; 226
    1a28:	09 f0       	breq	.+2      	; 0x1a2c <_ZN15LineDetectorLib6DetectEh+0x7a0>
    1a2a:	90 c1       	rjmp	.+800    	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1a2c:	81 ee       	ldi	r24, 0xE1	; 225
    1a2e:	84 83       	std	Z+4, r24	; 0x04
    1a30:	08 95       	ret
    1a32:	61 30       	cpi	r22, 0x01	; 1
    1a34:	09 f0       	breq	.+2      	; 0x1a38 <_ZN15LineDetectorLib6DetectEh+0x7ac>
    1a36:	c2 c0       	rjmp	.+388    	; 0x1bbc <_ZN15LineDetectorLib6DetectEh+0x930>
    1a38:	83 89       	ldd	r24, Z+19	; 0x13
    1a3a:	94 89       	ldd	r25, Z+20	; 0x14
    1a3c:	9c 01       	movw	r18, r24
    1a3e:	20 7c       	andi	r18, 0xC0	; 192
    1a40:	33 27       	eor	r19, r19
    1a42:	20 3c       	cpi	r18, 0xC0	; 192
    1a44:	31 05       	cpc	r19, r1
    1a46:	11 f4       	brne	.+4      	; 0x1a4c <_ZN15LineDetectorLib6DetectEh+0x7c0>
    1a48:	14 82       	std	Z+4, r1	; 0x04
    1a4a:	08 95       	ret
    1a4c:	87 ff       	sbrs	r24, 7
    1a4e:	03 c0       	rjmp	.+6      	; 0x1a56 <_ZN15LineDetectorLib6DetectEh+0x7ca>
    1a50:	8f ef       	ldi	r24, 0xFF	; 255
    1a52:	84 83       	std	Z+4, r24	; 0x04
    1a54:	08 95       	ret
    1a56:	86 ff       	sbrs	r24, 6
    1a58:	03 c0       	rjmp	.+6      	; 0x1a60 <_ZN15LineDetectorLib6DetectEh+0x7d4>
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	84 83       	std	Z+4, r24	; 0x04
    1a5e:	08 95       	ret
    1a60:	9c 01       	movw	r18, r24
    1a62:	20 78       	andi	r18, 0x80	; 128
    1a64:	31 70       	andi	r19, 0x01	; 1
    1a66:	20 38       	cpi	r18, 0x80	; 128
    1a68:	31 40       	sbci	r19, 0x01	; 1
    1a6a:	19 f4       	brne	.+6      	; 0x1a72 <_ZN15LineDetectorLib6DetectEh+0x7e6>
    1a6c:	8e ef       	ldi	r24, 0xFE	; 254
    1a6e:	84 83       	std	Z+4, r24	; 0x04
    1a70:	08 95       	ret
    1a72:	9c 01       	movw	r18, r24
    1a74:	20 76       	andi	r18, 0x60	; 96
    1a76:	33 27       	eor	r19, r19
    1a78:	20 36       	cpi	r18, 0x60	; 96
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	19 f4       	brne	.+6      	; 0x1a84 <_ZN15LineDetectorLib6DetectEh+0x7f8>
    1a7e:	82 e0       	ldi	r24, 0x02	; 2
    1a80:	84 83       	std	Z+4, r24	; 0x04
    1a82:	08 95       	ret
    1a84:	90 ff       	sbrs	r25, 0
    1a86:	03 c0       	rjmp	.+6      	; 0x1a8e <_ZN15LineDetectorLib6DetectEh+0x802>
    1a88:	8d ef       	ldi	r24, 0xFD	; 253
    1a8a:	84 83       	std	Z+4, r24	; 0x04
    1a8c:	08 95       	ret
    1a8e:	85 ff       	sbrs	r24, 5
    1a90:	03 c0       	rjmp	.+6      	; 0x1a98 <_ZN15LineDetectorLib6DetectEh+0x80c>
    1a92:	83 e0       	ldi	r24, 0x03	; 3
    1a94:	84 83       	std	Z+4, r24	; 0x04
    1a96:	08 95       	ret
    1a98:	9c 01       	movw	r18, r24
    1a9a:	22 27       	eor	r18, r18
    1a9c:	33 70       	andi	r19, 0x03	; 3
    1a9e:	21 15       	cp	r18, r1
    1aa0:	33 40       	sbci	r19, 0x03	; 3
    1aa2:	19 f4       	brne	.+6      	; 0x1aaa <_ZN15LineDetectorLib6DetectEh+0x81e>
    1aa4:	8c ef       	ldi	r24, 0xFC	; 252
    1aa6:	84 83       	std	Z+4, r24	; 0x04
    1aa8:	08 95       	ret
    1aaa:	9c 01       	movw	r18, r24
    1aac:	20 73       	andi	r18, 0x30	; 48
    1aae:	33 27       	eor	r19, r19
    1ab0:	20 33       	cpi	r18, 0x30	; 48
    1ab2:	31 05       	cpc	r19, r1
    1ab4:	19 f4       	brne	.+6      	; 0x1abc <_ZN15LineDetectorLib6DetectEh+0x830>
    1ab6:	84 e0       	ldi	r24, 0x04	; 4
    1ab8:	84 83       	std	Z+4, r24	; 0x04
    1aba:	08 95       	ret
    1abc:	91 ff       	sbrs	r25, 1
    1abe:	03 c0       	rjmp	.+6      	; 0x1ac6 <_ZN15LineDetectorLib6DetectEh+0x83a>
    1ac0:	8b ef       	ldi	r24, 0xFB	; 251
    1ac2:	84 83       	std	Z+4, r24	; 0x04
    1ac4:	08 95       	ret
    1ac6:	84 ff       	sbrs	r24, 4
    1ac8:	03 c0       	rjmp	.+6      	; 0x1ad0 <_ZN15LineDetectorLib6DetectEh+0x844>
    1aca:	85 e0       	ldi	r24, 0x05	; 5
    1acc:	84 83       	std	Z+4, r24	; 0x04
    1ace:	08 95       	ret
    1ad0:	9c 01       	movw	r18, r24
    1ad2:	22 27       	eor	r18, r18
    1ad4:	36 70       	andi	r19, 0x06	; 6
    1ad6:	21 15       	cp	r18, r1
    1ad8:	36 40       	sbci	r19, 0x06	; 6
    1ada:	19 f4       	brne	.+6      	; 0x1ae2 <_ZN15LineDetectorLib6DetectEh+0x856>
    1adc:	8a ef       	ldi	r24, 0xFA	; 250
    1ade:	84 83       	std	Z+4, r24	; 0x04
    1ae0:	08 95       	ret
    1ae2:	9c 01       	movw	r18, r24
    1ae4:	28 71       	andi	r18, 0x18	; 24
    1ae6:	33 27       	eor	r19, r19
    1ae8:	28 31       	cpi	r18, 0x18	; 24
    1aea:	31 05       	cpc	r19, r1
    1aec:	19 f4       	brne	.+6      	; 0x1af4 <_ZN15LineDetectorLib6DetectEh+0x868>
    1aee:	86 e0       	ldi	r24, 0x06	; 6
    1af0:	84 83       	std	Z+4, r24	; 0x04
    1af2:	08 95       	ret
    1af4:	92 ff       	sbrs	r25, 2
    1af6:	03 c0       	rjmp	.+6      	; 0x1afe <_ZN15LineDetectorLib6DetectEh+0x872>
    1af8:	89 ef       	ldi	r24, 0xF9	; 249
    1afa:	84 83       	std	Z+4, r24	; 0x04
    1afc:	08 95       	ret
    1afe:	83 ff       	sbrs	r24, 3
    1b00:	03 c0       	rjmp	.+6      	; 0x1b08 <_ZN15LineDetectorLib6DetectEh+0x87c>
    1b02:	87 e0       	ldi	r24, 0x07	; 7
    1b04:	84 83       	std	Z+4, r24	; 0x04
    1b06:	08 95       	ret
    1b08:	9c 01       	movw	r18, r24
    1b0a:	22 27       	eor	r18, r18
    1b0c:	3c 70       	andi	r19, 0x0C	; 12
    1b0e:	21 15       	cp	r18, r1
    1b10:	3c 40       	sbci	r19, 0x0C	; 12
    1b12:	19 f4       	brne	.+6      	; 0x1b1a <_ZN15LineDetectorLib6DetectEh+0x88e>
    1b14:	86 ef       	ldi	r24, 0xF6	; 246
    1b16:	84 83       	std	Z+4, r24	; 0x04
    1b18:	08 95       	ret
    1b1a:	9c 01       	movw	r18, r24
    1b1c:	2c 70       	andi	r18, 0x0C	; 12
    1b1e:	33 27       	eor	r19, r19
    1b20:	2c 30       	cpi	r18, 0x0C	; 12
    1b22:	31 05       	cpc	r19, r1
    1b24:	19 f4       	brne	.+6      	; 0x1b2c <_ZN15LineDetectorLib6DetectEh+0x8a0>
    1b26:	8a e0       	ldi	r24, 0x0A	; 10
    1b28:	84 83       	std	Z+4, r24	; 0x04
    1b2a:	08 95       	ret
    1b2c:	93 ff       	sbrs	r25, 3
    1b2e:	03 c0       	rjmp	.+6      	; 0x1b36 <_ZN15LineDetectorLib6DetectEh+0x8aa>
    1b30:	82 ef       	ldi	r24, 0xF2	; 242
    1b32:	84 83       	std	Z+4, r24	; 0x04
    1b34:	08 95       	ret
    1b36:	82 ff       	sbrs	r24, 2
    1b38:	03 c0       	rjmp	.+6      	; 0x1b40 <_ZN15LineDetectorLib6DetectEh+0x8b4>
    1b3a:	8e e0       	ldi	r24, 0x0E	; 14
    1b3c:	84 83       	std	Z+4, r24	; 0x04
    1b3e:	08 95       	ret
    1b40:	9c 01       	movw	r18, r24
    1b42:	22 27       	eor	r18, r18
    1b44:	38 71       	andi	r19, 0x18	; 24
    1b46:	21 15       	cp	r18, r1
    1b48:	38 41       	sbci	r19, 0x18	; 24
    1b4a:	19 f4       	brne	.+6      	; 0x1b52 <_ZN15LineDetectorLib6DetectEh+0x8c6>
    1b4c:	8e ee       	ldi	r24, 0xEE	; 238
    1b4e:	84 83       	std	Z+4, r24	; 0x04
    1b50:	08 95       	ret
    1b52:	9c 01       	movw	r18, r24
    1b54:	26 70       	andi	r18, 0x06	; 6
    1b56:	33 27       	eor	r19, r19
    1b58:	26 30       	cpi	r18, 0x06	; 6
    1b5a:	31 05       	cpc	r19, r1
    1b5c:	19 f4       	brne	.+6      	; 0x1b64 <_ZN15LineDetectorLib6DetectEh+0x8d8>
    1b5e:	82 e1       	ldi	r24, 0x12	; 18
    1b60:	84 83       	std	Z+4, r24	; 0x04
    1b62:	08 95       	ret
    1b64:	94 ff       	sbrs	r25, 4
    1b66:	03 c0       	rjmp	.+6      	; 0x1b6e <_ZN15LineDetectorLib6DetectEh+0x8e2>
    1b68:	8a ee       	ldi	r24, 0xEA	; 234
    1b6a:	84 83       	std	Z+4, r24	; 0x04
    1b6c:	08 95       	ret
    1b6e:	81 ff       	sbrs	r24, 1
    1b70:	03 c0       	rjmp	.+6      	; 0x1b78 <_ZN15LineDetectorLib6DetectEh+0x8ec>
    1b72:	86 e1       	ldi	r24, 0x16	; 22
    1b74:	84 83       	std	Z+4, r24	; 0x04
    1b76:	08 95       	ret
    1b78:	9c 01       	movw	r18, r24
    1b7a:	22 27       	eor	r18, r18
    1b7c:	30 73       	andi	r19, 0x30	; 48
    1b7e:	21 15       	cp	r18, r1
    1b80:	30 43       	sbci	r19, 0x30	; 48
    1b82:	19 f4       	brne	.+6      	; 0x1b8a <_ZN15LineDetectorLib6DetectEh+0x8fe>
    1b84:	86 ee       	ldi	r24, 0xE6	; 230
    1b86:	84 83       	std	Z+4, r24	; 0x04
    1b88:	08 95       	ret
    1b8a:	9c 01       	movw	r18, r24
    1b8c:	23 70       	andi	r18, 0x03	; 3
    1b8e:	33 27       	eor	r19, r19
    1b90:	23 30       	cpi	r18, 0x03	; 3
    1b92:	31 05       	cpc	r19, r1
    1b94:	19 f4       	brne	.+6      	; 0x1b9c <_ZN15LineDetectorLib6DetectEh+0x910>
    1b96:	8a e1       	ldi	r24, 0x1A	; 26
    1b98:	84 83       	std	Z+4, r24	; 0x04
    1b9a:	08 95       	ret
    1b9c:	95 ff       	sbrs	r25, 5
    1b9e:	03 c0       	rjmp	.+6      	; 0x1ba6 <_ZN15LineDetectorLib6DetectEh+0x91a>
    1ba0:	82 ee       	ldi	r24, 0xE2	; 226
    1ba2:	84 83       	std	Z+4, r24	; 0x04
    1ba4:	08 95       	ret
    1ba6:	80 ff       	sbrs	r24, 0
    1ba8:	03 c0       	rjmp	.+6      	; 0x1bb0 <_ZN15LineDetectorLib6DetectEh+0x924>
    1baa:	8e e1       	ldi	r24, 0x1E	; 30
    1bac:	84 83       	std	Z+4, r24	; 0x04
    1bae:	08 95       	ret
    1bb0:	89 2b       	or	r24, r25
    1bb2:	09 f0       	breq	.+2      	; 0x1bb6 <_ZN15LineDetectorLib6DetectEh+0x92a>
    1bb4:	cb c0       	rjmp	.+406    	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1bb6:	87 e0       	ldi	r24, 0x07	; 7
    1bb8:	84 83       	std	Z+4, r24	; 0x04
    1bba:	08 95       	ret
    1bbc:	83 89       	ldd	r24, Z+19	; 0x13
    1bbe:	94 89       	ldd	r25, Z+20	; 0x14
    1bc0:	9c 01       	movw	r18, r24
    1bc2:	20 7c       	andi	r18, 0xC0	; 192
    1bc4:	33 27       	eor	r19, r19
    1bc6:	20 3c       	cpi	r18, 0xC0	; 192
    1bc8:	31 05       	cpc	r19, r1
    1bca:	11 f4       	brne	.+4      	; 0x1bd0 <_ZN15LineDetectorLib6DetectEh+0x944>
    1bcc:	14 82       	std	Z+4, r1	; 0x04
    1bce:	08 95       	ret
    1bd0:	87 ff       	sbrs	r24, 7
    1bd2:	03 c0       	rjmp	.+6      	; 0x1bda <_ZN15LineDetectorLib6DetectEh+0x94e>
    1bd4:	8f ef       	ldi	r24, 0xFF	; 255
    1bd6:	84 83       	std	Z+4, r24	; 0x04
    1bd8:	08 95       	ret
    1bda:	86 ff       	sbrs	r24, 6
    1bdc:	03 c0       	rjmp	.+6      	; 0x1be4 <_ZN15LineDetectorLib6DetectEh+0x958>
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	84 83       	std	Z+4, r24	; 0x04
    1be2:	08 95       	ret
    1be4:	9c 01       	movw	r18, r24
    1be6:	20 78       	andi	r18, 0x80	; 128
    1be8:	31 70       	andi	r19, 0x01	; 1
    1bea:	20 38       	cpi	r18, 0x80	; 128
    1bec:	31 40       	sbci	r19, 0x01	; 1
    1bee:	19 f4       	brne	.+6      	; 0x1bf6 <_ZN15LineDetectorLib6DetectEh+0x96a>
    1bf0:	8e ef       	ldi	r24, 0xFE	; 254
    1bf2:	84 83       	std	Z+4, r24	; 0x04
    1bf4:	08 95       	ret
    1bf6:	9c 01       	movw	r18, r24
    1bf8:	20 76       	andi	r18, 0x60	; 96
    1bfa:	33 27       	eor	r19, r19
    1bfc:	20 36       	cpi	r18, 0x60	; 96
    1bfe:	31 05       	cpc	r19, r1
    1c00:	19 f4       	brne	.+6      	; 0x1c08 <_ZN15LineDetectorLib6DetectEh+0x97c>
    1c02:	82 e0       	ldi	r24, 0x02	; 2
    1c04:	84 83       	std	Z+4, r24	; 0x04
    1c06:	08 95       	ret
    1c08:	90 ff       	sbrs	r25, 0
    1c0a:	03 c0       	rjmp	.+6      	; 0x1c12 <_ZN15LineDetectorLib6DetectEh+0x986>
    1c0c:	8d ef       	ldi	r24, 0xFD	; 253
    1c0e:	84 83       	std	Z+4, r24	; 0x04
    1c10:	08 95       	ret
    1c12:	85 ff       	sbrs	r24, 5
    1c14:	03 c0       	rjmp	.+6      	; 0x1c1c <_ZN15LineDetectorLib6DetectEh+0x990>
    1c16:	83 e0       	ldi	r24, 0x03	; 3
    1c18:	84 83       	std	Z+4, r24	; 0x04
    1c1a:	08 95       	ret
    1c1c:	9c 01       	movw	r18, r24
    1c1e:	22 27       	eor	r18, r18
    1c20:	33 70       	andi	r19, 0x03	; 3
    1c22:	21 15       	cp	r18, r1
    1c24:	33 40       	sbci	r19, 0x03	; 3
    1c26:	19 f4       	brne	.+6      	; 0x1c2e <_ZN15LineDetectorLib6DetectEh+0x9a2>
    1c28:	8c ef       	ldi	r24, 0xFC	; 252
    1c2a:	84 83       	std	Z+4, r24	; 0x04
    1c2c:	08 95       	ret
    1c2e:	9c 01       	movw	r18, r24
    1c30:	20 73       	andi	r18, 0x30	; 48
    1c32:	33 27       	eor	r19, r19
    1c34:	20 33       	cpi	r18, 0x30	; 48
    1c36:	31 05       	cpc	r19, r1
    1c38:	19 f4       	brne	.+6      	; 0x1c40 <_ZN15LineDetectorLib6DetectEh+0x9b4>
    1c3a:	84 e0       	ldi	r24, 0x04	; 4
    1c3c:	84 83       	std	Z+4, r24	; 0x04
    1c3e:	08 95       	ret
    1c40:	91 ff       	sbrs	r25, 1
    1c42:	03 c0       	rjmp	.+6      	; 0x1c4a <_ZN15LineDetectorLib6DetectEh+0x9be>
    1c44:	8b ef       	ldi	r24, 0xFB	; 251
    1c46:	84 83       	std	Z+4, r24	; 0x04
    1c48:	08 95       	ret
    1c4a:	84 ff       	sbrs	r24, 4
    1c4c:	03 c0       	rjmp	.+6      	; 0x1c54 <_ZN15LineDetectorLib6DetectEh+0x9c8>
    1c4e:	85 e0       	ldi	r24, 0x05	; 5
    1c50:	84 83       	std	Z+4, r24	; 0x04
    1c52:	08 95       	ret
    1c54:	9c 01       	movw	r18, r24
    1c56:	22 27       	eor	r18, r18
    1c58:	36 70       	andi	r19, 0x06	; 6
    1c5a:	21 15       	cp	r18, r1
    1c5c:	36 40       	sbci	r19, 0x06	; 6
    1c5e:	19 f4       	brne	.+6      	; 0x1c66 <_ZN15LineDetectorLib6DetectEh+0x9da>
    1c60:	8a ef       	ldi	r24, 0xFA	; 250
    1c62:	84 83       	std	Z+4, r24	; 0x04
    1c64:	08 95       	ret
    1c66:	9c 01       	movw	r18, r24
    1c68:	28 71       	andi	r18, 0x18	; 24
    1c6a:	33 27       	eor	r19, r19
    1c6c:	28 31       	cpi	r18, 0x18	; 24
    1c6e:	31 05       	cpc	r19, r1
    1c70:	19 f4       	brne	.+6      	; 0x1c78 <_ZN15LineDetectorLib6DetectEh+0x9ec>
    1c72:	86 e0       	ldi	r24, 0x06	; 6
    1c74:	84 83       	std	Z+4, r24	; 0x04
    1c76:	08 95       	ret
    1c78:	92 ff       	sbrs	r25, 2
    1c7a:	03 c0       	rjmp	.+6      	; 0x1c82 <_ZN15LineDetectorLib6DetectEh+0x9f6>
    1c7c:	89 ef       	ldi	r24, 0xF9	; 249
    1c7e:	84 83       	std	Z+4, r24	; 0x04
    1c80:	08 95       	ret
    1c82:	83 ff       	sbrs	r24, 3
    1c84:	03 c0       	rjmp	.+6      	; 0x1c8c <_ZN15LineDetectorLib6DetectEh+0xa00>
    1c86:	87 e0       	ldi	r24, 0x07	; 7
    1c88:	84 83       	std	Z+4, r24	; 0x04
    1c8a:	08 95       	ret
    1c8c:	9c 01       	movw	r18, r24
    1c8e:	22 27       	eor	r18, r18
    1c90:	3c 70       	andi	r19, 0x0C	; 12
    1c92:	21 15       	cp	r18, r1
    1c94:	3c 40       	sbci	r19, 0x0C	; 12
    1c96:	19 f4       	brne	.+6      	; 0x1c9e <_ZN15LineDetectorLib6DetectEh+0xa12>
    1c98:	86 ef       	ldi	r24, 0xF6	; 246
    1c9a:	84 83       	std	Z+4, r24	; 0x04
    1c9c:	08 95       	ret
    1c9e:	9c 01       	movw	r18, r24
    1ca0:	2c 70       	andi	r18, 0x0C	; 12
    1ca2:	33 27       	eor	r19, r19
    1ca4:	2c 30       	cpi	r18, 0x0C	; 12
    1ca6:	31 05       	cpc	r19, r1
    1ca8:	19 f4       	brne	.+6      	; 0x1cb0 <_ZN15LineDetectorLib6DetectEh+0xa24>
    1caa:	8a e0       	ldi	r24, 0x0A	; 10
    1cac:	84 83       	std	Z+4, r24	; 0x04
    1cae:	08 95       	ret
    1cb0:	93 ff       	sbrs	r25, 3
    1cb2:	03 c0       	rjmp	.+6      	; 0x1cba <_ZN15LineDetectorLib6DetectEh+0xa2e>
    1cb4:	82 ef       	ldi	r24, 0xF2	; 242
    1cb6:	84 83       	std	Z+4, r24	; 0x04
    1cb8:	08 95       	ret
    1cba:	82 ff       	sbrs	r24, 2
    1cbc:	03 c0       	rjmp	.+6      	; 0x1cc4 <_ZN15LineDetectorLib6DetectEh+0xa38>
    1cbe:	8e e0       	ldi	r24, 0x0E	; 14
    1cc0:	84 83       	std	Z+4, r24	; 0x04
    1cc2:	08 95       	ret
    1cc4:	9c 01       	movw	r18, r24
    1cc6:	22 27       	eor	r18, r18
    1cc8:	38 71       	andi	r19, 0x18	; 24
    1cca:	21 15       	cp	r18, r1
    1ccc:	38 41       	sbci	r19, 0x18	; 24
    1cce:	19 f4       	brne	.+6      	; 0x1cd6 <_ZN15LineDetectorLib6DetectEh+0xa4a>
    1cd0:	8e ee       	ldi	r24, 0xEE	; 238
    1cd2:	84 83       	std	Z+4, r24	; 0x04
    1cd4:	08 95       	ret
    1cd6:	9c 01       	movw	r18, r24
    1cd8:	26 70       	andi	r18, 0x06	; 6
    1cda:	33 27       	eor	r19, r19
    1cdc:	26 30       	cpi	r18, 0x06	; 6
    1cde:	31 05       	cpc	r19, r1
    1ce0:	19 f4       	brne	.+6      	; 0x1ce8 <_ZN15LineDetectorLib6DetectEh+0xa5c>
    1ce2:	82 e1       	ldi	r24, 0x12	; 18
    1ce4:	84 83       	std	Z+4, r24	; 0x04
    1ce6:	08 95       	ret
    1ce8:	94 ff       	sbrs	r25, 4
    1cea:	03 c0       	rjmp	.+6      	; 0x1cf2 <_ZN15LineDetectorLib6DetectEh+0xa66>
    1cec:	8a ee       	ldi	r24, 0xEA	; 234
    1cee:	84 83       	std	Z+4, r24	; 0x04
    1cf0:	08 95       	ret
    1cf2:	81 ff       	sbrs	r24, 1
    1cf4:	03 c0       	rjmp	.+6      	; 0x1cfc <_ZN15LineDetectorLib6DetectEh+0xa70>
    1cf6:	86 e1       	ldi	r24, 0x16	; 22
    1cf8:	84 83       	std	Z+4, r24	; 0x04
    1cfa:	08 95       	ret
    1cfc:	9c 01       	movw	r18, r24
    1cfe:	22 27       	eor	r18, r18
    1d00:	30 73       	andi	r19, 0x30	; 48
    1d02:	21 15       	cp	r18, r1
    1d04:	30 43       	sbci	r19, 0x30	; 48
    1d06:	19 f4       	brne	.+6      	; 0x1d0e <_ZN15LineDetectorLib6DetectEh+0xa82>
    1d08:	86 ee       	ldi	r24, 0xE6	; 230
    1d0a:	84 83       	std	Z+4, r24	; 0x04
    1d0c:	08 95       	ret
    1d0e:	9c 01       	movw	r18, r24
    1d10:	23 70       	andi	r18, 0x03	; 3
    1d12:	33 27       	eor	r19, r19
    1d14:	23 30       	cpi	r18, 0x03	; 3
    1d16:	31 05       	cpc	r19, r1
    1d18:	19 f4       	brne	.+6      	; 0x1d20 <_ZN15LineDetectorLib6DetectEh+0xa94>
    1d1a:	8a e1       	ldi	r24, 0x1A	; 26
    1d1c:	84 83       	std	Z+4, r24	; 0x04
    1d1e:	08 95       	ret
    1d20:	95 ff       	sbrs	r25, 5
    1d22:	03 c0       	rjmp	.+6      	; 0x1d2a <_ZN15LineDetectorLib6DetectEh+0xa9e>
    1d24:	82 ee       	ldi	r24, 0xE2	; 226
    1d26:	84 83       	std	Z+4, r24	; 0x04
    1d28:	08 95       	ret
    1d2a:	80 ff       	sbrs	r24, 0
    1d2c:	03 c0       	rjmp	.+6      	; 0x1d34 <_ZN15LineDetectorLib6DetectEh+0xaa8>
    1d2e:	8e e1       	ldi	r24, 0x1E	; 30
    1d30:	84 83       	std	Z+4, r24	; 0x04
    1d32:	08 95       	ret
    1d34:	89 2b       	or	r24, r25
    1d36:	51 f4       	brne	.+20     	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1d38:	84 81       	ldd	r24, Z+4	; 0x04
    1d3a:	8e 31       	cpi	r24, 0x1E	; 30
    1d3c:	19 f4       	brne	.+6      	; 0x1d44 <_ZN15LineDetectorLib6DetectEh+0xab8>
    1d3e:	8f e1       	ldi	r24, 0x1F	; 31
    1d40:	84 83       	std	Z+4, r24	; 0x04
    1d42:	08 95       	ret
    1d44:	82 3e       	cpi	r24, 0xE2	; 226
    1d46:	11 f4       	brne	.+4      	; 0x1d4c <_ZN15LineDetectorLib6DetectEh+0xac0>
    1d48:	81 ee       	ldi	r24, 0xE1	; 225
    1d4a:	84 83       	std	Z+4, r24	; 0x04
    1d4c:	08 95       	ret

00001d4e <_ZL7RunTimev>:
    1d4e:	cf 92       	push	r12
    1d50:	df 92       	push	r13
    1d52:	ef 92       	push	r14
    1d54:	ff 92       	push	r15
    1d56:	cf 93       	push	r28
    1d58:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <_ZL6sysRun>
    1d5c:	88 23       	and	r24, r24
    1d5e:	09 f4       	brne	.+2      	; 0x1d62 <_ZL7RunTimev+0x14>
    1d60:	a5 c4       	rjmp	.+2378   	; 0x26ac <_ZL7RunTimev+0x95e>
    1d62:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_ZL6testPD>
    1d66:	88 23       	and	r24, r24
    1d68:	19 f0       	breq	.+6      	; 0x1d70 <_ZL7RunTimev+0x22>
    1d6a:	81 e0       	ldi	r24, 0x01	; 1
    1d6c:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1d70:	92 9a       	sbi	0x12, 2	; 18
    1d72:	81 e0       	ldi	r24, 0x01	; 1
    1d74:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <_ZL6sample>
    1d78:	80 91 4c 04 	lds	r24, 0x044C	; 0x80044c <_ZL6runDly>
    1d7c:	90 91 42 04 	lds	r25, 0x0442	; 0x800442 <_ZL7runDtmr>
    1d80:	98 17       	cp	r25, r24
    1d82:	08 f4       	brcc	.+2      	; 0x1d86 <_ZL7RunTimev+0x38>
    1d84:	dc c3       	rjmp	.+1976   	; 0x253e <_ZL7RunTimev+0x7f0>
    1d86:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <_ZL7runDtmr>
    1d8a:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1d8e:	81 11       	cpse	r24, r1
    1d90:	3b c0       	rjmp	.+118    	; 0x1e08 <_ZL7RunTimev+0xba>
    1d92:	97 98       	cbi	0x12, 7	; 18
    1d94:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <_ZL8startIdx>
    1d98:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <_ZL4Ttmr>
    1d9c:	89 17       	cp	r24, r25
    1d9e:	d8 f0       	brcs	.+54     	; 0x1dd6 <_ZL7RunTimev+0x88>
    1da0:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_ZL7idxStop>
    1da4:	81 11       	cpse	r24, r1
    1da6:	07 c0       	rjmp	.+14     	; 0x1db6 <_ZL7RunTimev+0x68>
    1da8:	85 e0       	ldi	r24, 0x05	; 5
    1daa:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1dae:	81 e0       	ldi	r24, 0x01	; 1
    1db0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    1db4:	1d c0       	rjmp	.+58     	; 0x1df0 <_ZL7RunTimev+0xa2>
    1db6:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZL6idxPtr>
    1dba:	8f 5f       	subi	r24, 0xFF	; 255
    1dbc:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZL6idxPtr>
    1dc0:	91 e0       	ldi	r25, 0x01	; 1
    1dc2:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <_ZL10readRunMem>
    1dc6:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1dca:	8f 5f       	subi	r24, 0xFF	; 255
    1dcc:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1dd0:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_ZL6dspRfs>
    1dd4:	0d c0       	rjmp	.+26     	; 0x1df0 <_ZL7RunTimev+0xa2>
    1dd6:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_ZL8startIdx+0x1>
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	88 0f       	add	r24, r24
    1dde:	99 1f       	adc	r25, r25
    1de0:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    1de4:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    1de8:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    1dec:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    1df0:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <_ZL4Dtmr>
    1df4:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
    1df8:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    1dfc:	81 e0       	ldi	r24, 0x01	; 1
    1dfe:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <_ZL5brake>
    1e02:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    1e06:	42 c1       	rjmp	.+644    	; 0x208c <_ZL7RunTimev+0x33e>
    1e08:	81 30       	cpi	r24, 0x01	; 1
    1e0a:	09 f0       	breq	.+2      	; 0x1e0e <_ZL7RunTimev+0xc0>
    1e0c:	3f c1       	rjmp	.+638    	; 0x208c <_ZL7RunTimev+0x33e>
    1e0e:	97 9a       	sbi	0x12, 7	; 18
    1e10:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <_ZL11sensNewData>
    1e14:	88 23       	and	r24, r24
    1e16:	09 f4       	brne	.+2      	; 0x1e1a <_ZL7RunTimev+0xcc>
    1e18:	92 c0       	rjmp	.+292    	; 0x1f3e <_ZL7RunTimev+0x1f0>
    1e1a:	60 e0       	ldi	r22, 0x00	; 0
    1e1c:	8d e8       	ldi	r24, 0x8D	; 141
    1e1e:	94 e0       	ldi	r25, 0x04	; 4
    1e20:	0e 94 46 09 	call	0x128c	; 0x128c <_ZN15LineDetectorLib6DetectEh>
    1e24:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <_ZL11sensNewData>
    1e28:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_ZL6testPD>
    1e2c:	81 11       	cpse	r24, r1
    1e2e:	54 c0       	rjmp	.+168    	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1e30:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <_ZL8sensMask>
    1e34:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    1e38:	9c 01       	movw	r18, r24
    1e3a:	24 e0       	ldi	r18, 0x04	; 4
    1e3c:	32 9f       	mul	r19, r18
    1e3e:	21 2d       	mov	r18, r1
    1e40:	33 27       	eor	r19, r19
    1e42:	11 24       	eor	r1, r1
    1e44:	21 30       	cpi	r18, 0x01	; 1
    1e46:	31 05       	cpc	r19, r1
    1e48:	c9 f0       	breq	.+50     	; 0x1e7c <_ZL7RunTimev+0x12e>
    1e4a:	38 f0       	brcs	.+14     	; 0x1e5a <_ZL7RunTimev+0x10c>
    1e4c:	22 30       	cpi	r18, 0x02	; 2
    1e4e:	31 05       	cpc	r19, r1
    1e50:	21 f1       	breq	.+72     	; 0x1e9a <_ZL7RunTimev+0x14c>
    1e52:	23 30       	cpi	r18, 0x03	; 3
    1e54:	31 05       	cpc	r19, r1
    1e56:	81 f1       	breq	.+96     	; 0x1eb8 <_ZL7RunTimev+0x16a>
    1e58:	3f c0       	rjmp	.+126    	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1e5a:	20 91 a0 04 	lds	r18, 0x04A0	; 0x8004a0 <Line+0x13>
    1e5e:	30 91 a1 04 	lds	r19, 0x04A1	; 0x8004a1 <Line+0x14>
    1e62:	20 95       	com	r18
    1e64:	30 95       	com	r19
    1e66:	9f 73       	andi	r25, 0x3F	; 63
    1e68:	82 23       	and	r24, r18
    1e6a:	93 23       	and	r25, r19
    1e6c:	89 2b       	or	r24, r25
    1e6e:	a1 f5       	brne	.+104    	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1e70:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1e74:	8f 5f       	subi	r24, 0xFF	; 255
    1e76:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1e7a:	2e c0       	rjmp	.+92     	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1e7c:	20 91 a0 04 	lds	r18, 0x04A0	; 0x8004a0 <Line+0x13>
    1e80:	30 91 a1 04 	lds	r19, 0x04A1	; 0x8004a1 <Line+0x14>
    1e84:	82 23       	and	r24, r18
    1e86:	93 23       	and	r25, r19
    1e88:	9f 73       	andi	r25, 0x3F	; 63
    1e8a:	89 2b       	or	r24, r25
    1e8c:	29 f1       	breq	.+74     	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1e8e:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1e92:	8f 5f       	subi	r24, 0xFF	; 255
    1e94:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1e98:	1f c0       	rjmp	.+62     	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1e9a:	20 91 a0 04 	lds	r18, 0x04A0	; 0x8004a0 <Line+0x13>
    1e9e:	30 91 a1 04 	lds	r19, 0x04A1	; 0x8004a1 <Line+0x14>
    1ea2:	82 23       	and	r24, r18
    1ea4:	93 23       	and	r25, r19
    1ea6:	9f 73       	andi	r25, 0x3F	; 63
    1ea8:	89 2b       	or	r24, r25
    1eaa:	b1 f4       	brne	.+44     	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1eac:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1eb0:	8f 5f       	subi	r24, 0xFF	; 255
    1eb2:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1eb6:	10 c0       	rjmp	.+32     	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1eb8:	20 91 a0 04 	lds	r18, 0x04A0	; 0x8004a0 <Line+0x13>
    1ebc:	30 91 a1 04 	lds	r19, 0x04A1	; 0x8004a1 <Line+0x14>
    1ec0:	20 95       	com	r18
    1ec2:	30 95       	com	r19
    1ec4:	9f 73       	andi	r25, 0x3F	; 63
    1ec6:	82 23       	and	r24, r18
    1ec8:	93 23       	and	r25, r19
    1eca:	89 2b       	or	r24, r25
    1ecc:	29 f0       	breq	.+10     	; 0x1ed8 <_ZL7RunTimev+0x18a>
    1ece:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1ed2:	8f 5f       	subi	r24, 0xFF	; 255
    1ed4:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    1ed8:	40 91 91 04 	lds	r20, 0x0491	; 0x800491 <Line+0x4>
    1edc:	24 2f       	mov	r18, r20
    1ede:	04 2e       	mov	r0, r20
    1ee0:	00 0c       	add	r0, r0
    1ee2:	33 0b       	sbc	r19, r19
    1ee4:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <_ZL9lastError>
    1ee8:	b9 01       	movw	r22, r18
    1eea:	68 1b       	sub	r22, r24
    1eec:	71 09       	sbc	r23, r1
    1eee:	87 fd       	sbrc	r24, 7
    1ef0:	73 95       	inc	r23
    1ef2:	cb 01       	movw	r24, r22
    1ef4:	ee e4       	ldi	r30, 0x4E	; 78
    1ef6:	f4 e0       	ldi	r31, 0x04	; 4
    1ef8:	51 81       	ldd	r21, Z+1	; 0x01
    1efa:	58 9f       	mul	r21, r24
    1efc:	b0 01       	movw	r22, r0
    1efe:	59 9f       	mul	r21, r25
    1f00:	70 0d       	add	r23, r0
    1f02:	11 24       	eor	r1, r1
    1f04:	50 81       	ld	r21, Z
    1f06:	52 9f       	mul	r21, r18
    1f08:	c0 01       	movw	r24, r0
    1f0a:	53 9f       	mul	r21, r19
    1f0c:	90 0d       	add	r25, r0
    1f0e:	11 24       	eor	r1, r1
    1f10:	86 0f       	add	r24, r22
    1f12:	97 1f       	adc	r25, r23
    1f14:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <_ZL8PDresult+0x1>
    1f18:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <_ZL8PDresult>
    1f1c:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <_ZL6errTmr>
    1f20:	85 30       	cpi	r24, 0x05	; 5
    1f22:	20 f0       	brcs	.+8      	; 0x1f2c <_ZL7RunTimev+0x1de>
    1f24:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <_ZL6errTmr>
    1f28:	40 93 33 04 	sts	0x0433, r20	; 0x800433 <_ZL9lastError>
    1f2c:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    1f30:	82 30       	cpi	r24, 0x02	; 2
    1f32:	28 f0       	brcs	.+10     	; 0x1f3e <_ZL7RunTimev+0x1f0>
    1f34:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    1f38:	81 e0       	ldi	r24, 0x01	; 1
    1f3a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    1f3e:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <_ZL7scanPDM+0x2>
    1f42:	88 23       	and	r24, r24
    1f44:	21 f0       	breq	.+8      	; 0x1f4e <_ZL7RunTimev+0x200>
    1f46:	81 30       	cpi	r24, 0x01	; 1
    1f48:	09 f4       	brne	.+2      	; 0x1f4c <_ZL7RunTimev+0x1fe>
    1f4a:	4d c0       	rjmp	.+154    	; 0x1fe6 <_ZL7RunTimev+0x298>
    1f4c:	81 c0       	rjmp	.+258    	; 0x2050 <_ZL7RunTimev+0x302>
    1f4e:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <_ZL8PDresult>
    1f52:	30 91 2e 04 	lds	r19, 0x042E	; 0x80042e <_ZL8PDresult+0x1>
    1f56:	33 23       	and	r19, r19
    1f58:	84 f4       	brge	.+32     	; 0x1f7a <_ZL7RunTimev+0x22c>
    1f5a:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <_ZL7scanVel>
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	88 0f       	add	r24, r24
    1f62:	99 1f       	adc	r25, r25
    1f64:	28 0f       	add	r18, r24
    1f66:	39 1f       	adc	r19, r25
    1f68:	30 93 32 04 	sts	0x0432, r19	; 0x800432 <_ZL10mtrVelLeft+0x1>
    1f6c:	20 93 31 04 	sts	0x0431, r18	; 0x800431 <_ZL10mtrVelLeft>
    1f70:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    1f74:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    1f78:	0f c0       	rjmp	.+30     	; 0x1f98 <_ZL7RunTimev+0x24a>
    1f7a:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <_ZL7scanVel>
    1f7e:	90 e0       	ldi	r25, 0x00	; 0
    1f80:	88 0f       	add	r24, r24
    1f82:	99 1f       	adc	r25, r25
    1f84:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    1f88:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    1f8c:	82 1b       	sub	r24, r18
    1f8e:	93 0b       	sbc	r25, r19
    1f90:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    1f94:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    1f98:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <Line+0x4>
    1f9c:	81 3e       	cpi	r24, 0xE1	; 225
    1f9e:	81 f4       	brne	.+32     	; 0x1fc0 <_ZL7RunTimev+0x272>
    1fa0:	88 e3       	ldi	r24, 0x38	; 56
    1fa2:	9f ef       	ldi	r25, 0xFF	; 255
    1fa4:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    1fa8:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    1fac:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <_ZL7scanVel>
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	88 0f       	add	r24, r24
    1fb4:	99 1f       	adc	r25, r25
    1fb6:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    1fba:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    1fbe:	48 c0       	rjmp	.+144    	; 0x2050 <_ZL7RunTimev+0x302>
    1fc0:	8f 31       	cpi	r24, 0x1F	; 31
    1fc2:	09 f0       	breq	.+2      	; 0x1fc6 <_ZL7RunTimev+0x278>
    1fc4:	45 c0       	rjmp	.+138    	; 0x2050 <_ZL7RunTimev+0x302>
    1fc6:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <_ZL7scanVel>
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	88 0f       	add	r24, r24
    1fce:	99 1f       	adc	r25, r25
    1fd0:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    1fd4:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    1fd8:	88 e3       	ldi	r24, 0x38	; 56
    1fda:	9f ef       	ldi	r25, 0xFF	; 255
    1fdc:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    1fe0:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    1fe4:	35 c0       	rjmp	.+106    	; 0x2050 <_ZL7RunTimev+0x302>
    1fe6:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <_ZL7scanVel>
    1fea:	90 e0       	ldi	r25, 0x00	; 0
    1fec:	88 0f       	add	r24, r24
    1fee:	99 1f       	adc	r25, r25
    1ff0:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <_ZL8PDresult>
    1ff4:	30 91 2e 04 	lds	r19, 0x042E	; 0x80042e <_ZL8PDresult+0x1>
    1ff8:	ac 01       	movw	r20, r24
    1ffa:	42 0f       	add	r20, r18
    1ffc:	53 1f       	adc	r21, r19
    1ffe:	50 93 32 04 	sts	0x0432, r21	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2002:	40 93 31 04 	sts	0x0431, r20	; 0x800431 <_ZL10mtrVelLeft>
    2006:	82 1b       	sub	r24, r18
    2008:	93 0b       	sbc	r25, r19
    200a:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    200e:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2012:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <Line+0x4>
    2016:	81 3e       	cpi	r24, 0xE1	; 225
    2018:	69 f4       	brne	.+26     	; 0x2034 <_ZL7RunTimev+0x2e6>
    201a:	88 e3       	ldi	r24, 0x38	; 56
    201c:	9f ef       	ldi	r25, 0xFF	; 255
    201e:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2022:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    2026:	88 ec       	ldi	r24, 0xC8	; 200
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    202e:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2032:	0e c0       	rjmp	.+28     	; 0x2050 <_ZL7RunTimev+0x302>
    2034:	8f 31       	cpi	r24, 0x1F	; 31
    2036:	61 f4       	brne	.+24     	; 0x2050 <_ZL7RunTimev+0x302>
    2038:	88 ec       	ldi	r24, 0xC8	; 200
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2040:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    2044:	88 e3       	ldi	r24, 0x38	; 56
    2046:	9f ef       	ldi	r25, 0xFF	; 255
    2048:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    204c:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2050:	80 91 4b 04 	lds	r24, 0x044B	; 0x80044b <_ZL8toutTime>
    2054:	90 91 43 04 	lds	r25, 0x0443	; 0x800443 <_ZL7toutTmr>
    2058:	98 17       	cp	r25, r24
    205a:	80 f0       	brcs	.+32     	; 0x207c <_ZL7RunTimev+0x32e>
    205c:	88 23       	and	r24, r24
    205e:	71 f0       	breq	.+28     	; 0x207c <_ZL7RunTimev+0x32e>
    2060:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_ZL6testPD>
    2064:	81 11       	cpse	r24, r1
    2066:	0a c0       	rjmp	.+20     	; 0x207c <_ZL7RunTimev+0x32e>
    2068:	85 e0       	ldi	r24, 0x05	; 5
    206a:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    206e:	81 e0       	ldi	r24, 0x01	; 1
    2070:	80 93 cc 03 	sts	0x03CC, r24	; 0x8003cc <_ZL4tout>
    2074:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    2078:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <__data_end>
    207c:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
    2080:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <_ZL4Dtmr>
    2084:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
    2088:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    208c:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    2090:	82 30       	cpi	r24, 0x02	; 2
    2092:	09 f0       	breq	.+2      	; 0x2096 <_ZL7RunTimev+0x348>
    2094:	cc c0       	rjmp	.+408    	; 0x222e <_ZL7RunTimev+0x4e0>
    2096:	97 98       	cbi	0x12, 7	; 18
    2098:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <_ZL9indexBuff>
    209c:	8f 70       	andi	r24, 0x0F	; 15
    209e:	87 30       	cpi	r24, 0x07	; 7
    20a0:	51 f1       	breq	.+84     	; 0x20f6 <_ZL7RunTimev+0x3a8>
    20a2:	88 30       	cpi	r24, 0x08	; 8
    20a4:	09 f4       	brne	.+2      	; 0x20a8 <_ZL7RunTimev+0x35a>
    20a6:	44 c0       	rjmp	.+136    	; 0x2130 <_ZL7RunTimev+0x3e2>
    20a8:	86 30       	cpi	r24, 0x06	; 6
    20aa:	09 f0       	breq	.+2      	; 0x20ae <_ZL7RunTimev+0x360>
    20ac:	48 c0       	rjmp	.+144    	; 0x213e <_ZL7RunTimev+0x3f0>
    20ae:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <_ZL4Dtmr>
    20b2:	80 35       	cpi	r24, 0x50	; 80
    20b4:	40 f0       	brcs	.+16     	; 0x20c6 <_ZL7RunTimev+0x378>
    20b6:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    20ba:	8f 5f       	subi	r24, 0xFF	; 255
    20bc:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    20c0:	81 e0       	ldi	r24, 0x01	; 1
    20c2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    20c6:	e4 e3       	ldi	r30, 0x34	; 52
    20c8:	f4 e0       	ldi	r31, 0x04	; 4
    20ca:	ab e6       	ldi	r26, 0x6B	; 107
    20cc:	b4 e0       	ldi	r27, 0x04	; 4
    20ce:	12 96       	adiw	r26, 0x02	; 2
    20d0:	8c 91       	ld	r24, X
    20d2:	12 97       	sbiw	r26, 0x02	; 2
    20d4:	80 83       	st	Z, r24
    20d6:	13 96       	adiw	r26, 0x03	; 3
    20d8:	8c 91       	ld	r24, X
    20da:	13 97       	sbiw	r26, 0x03	; 3
    20dc:	81 83       	std	Z+1, r24	; 0x01
    20de:	14 96       	adiw	r26, 0x04	; 4
    20e0:	8c 91       	ld	r24, X
    20e2:	82 83       	std	Z+2, r24	; 0x02
    20e4:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <_ZL10mtrVelLeft+0x1>
    20e8:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <_ZL10mtrVelLeft>
    20ec:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZL11mtrVelRight+0x1>
    20f0:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZL11mtrVelRight>
    20f4:	90 c0       	rjmp	.+288    	; 0x2216 <_ZL7RunTimev+0x4c8>
    20f6:	81 e0       	ldi	r24, 0x01	; 1
    20f8:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <_ZL10readRunMem>
    20fc:	eb e6       	ldi	r30, 0x6B	; 107
    20fe:	f4 e0       	ldi	r31, 0x04	; 4
    2100:	83 81       	ldd	r24, Z+3	; 0x03
    2102:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZL6idxPtr>
    2106:	92 81       	ldd	r25, Z+2	; 0x02
    2108:	90 93 44 04 	sts	0x0444, r25	; 0x800444 <_ZL7progPtr>
    210c:	81 11       	cpse	r24, r1
    210e:	08 c0       	rjmp	.+16     	; 0x2120 <_ZL7RunTimev+0x3d2>
    2110:	10 92 41 04 	sts	0x0441, r1	; 0x800441 <_ZL3seq>
    2114:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    2118:	81 e0       	ldi	r24, 0x01	; 1
    211a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    211e:	7b c0       	rjmp	.+246    	; 0x2216 <_ZL7RunTimev+0x4c8>
    2120:	81 e0       	ldi	r24, 0x01	; 1
    2122:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    2126:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    212a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    212e:	73 c0       	rjmp	.+230    	; 0x2216 <_ZL7RunTimev+0x4c8>
    2130:	85 e0       	ldi	r24, 0x05	; 5
    2132:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    213c:	6c c0       	rjmp	.+216    	; 0x2216 <_ZL7RunTimev+0x4c8>
    213e:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <_ZL11sensNewData>
    2142:	88 23       	and	r24, r24
    2144:	79 f0       	breq	.+30     	; 0x2164 <_ZL7RunTimev+0x416>
    2146:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <_ZL9indexBuff+0x7>
    214a:	70 e0       	ldi	r23, 0x00	; 0
    214c:	75 95       	asr	r23
    214e:	67 95       	ror	r22
    2150:	75 95       	asr	r23
    2152:	67 95       	ror	r22
    2154:	75 95       	asr	r23
    2156:	67 95       	ror	r22
    2158:	75 95       	asr	r23
    215a:	67 95       	ror	r22
    215c:	8d e8       	ldi	r24, 0x8D	; 141
    215e:	94 e0       	ldi	r25, 0x04	; 4
    2160:	0e 94 46 09 	call	0x128c	; 0x128c <_ZN15LineDetectorLib6DetectEh>
    2164:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <_ZL9indexBuff+0x2>
    2168:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <_ZL4Dtmr>
    216c:	89 17       	cp	r24, r25
    216e:	08 f4       	brcc	.+2      	; 0x2172 <_ZL7RunTimev+0x424>
    2170:	3f c0       	rjmp	.+126    	; 0x21f0 <_ZL7RunTimev+0x4a2>
    2172:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <_ZL9indexBuff>
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	95 95       	asr	r25
    217a:	87 95       	ror	r24
    217c:	95 95       	asr	r25
    217e:	87 95       	ror	r24
    2180:	95 95       	asr	r25
    2182:	87 95       	ror	r24
    2184:	95 95       	asr	r25
    2186:	87 95       	ror	r24
    2188:	18 16       	cp	r1, r24
    218a:	19 06       	cpc	r1, r25
    218c:	4c f5       	brge	.+82     	; 0x21e0 <_ZL7RunTimev+0x492>
    218e:	fc 01       	movw	r30, r24
    2190:	e3 57       	subi	r30, 0x73	; 115
    2192:	fb 4f       	sbci	r31, 0xFB	; 251
    2194:	84 81       	ldd	r24, Z+4	; 0x04
    2196:	81 11       	cpse	r24, r1
    2198:	04 c0       	rjmp	.+8      	; 0x21a2 <_ZL7RunTimev+0x454>
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    21a0:	0c c0       	rjmp	.+24     	; 0x21ba <_ZL7RunTimev+0x46c>
    21a2:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    21a6:	81 30       	cpi	r24, 0x01	; 1
    21a8:	41 f4       	brne	.+16     	; 0x21ba <_ZL7RunTimev+0x46c>
    21aa:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    21ae:	8f 5f       	subi	r24, 0xFF	; 255
    21b0:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    21b4:	81 e0       	ldi	r24, 0x01	; 1
    21b6:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    21ba:	80 91 4b 04 	lds	r24, 0x044B	; 0x80044b <_ZL8toutTime>
    21be:	90 91 43 04 	lds	r25, 0x0443	; 0x800443 <_ZL7toutTmr>
    21c2:	98 17       	cp	r25, r24
    21c4:	a8 f0       	brcs	.+42     	; 0x21f0 <_ZL7RunTimev+0x4a2>
    21c6:	88 23       	and	r24, r24
    21c8:	99 f0       	breq	.+38     	; 0x21f0 <_ZL7RunTimev+0x4a2>
    21ca:	85 e0       	ldi	r24, 0x05	; 5
    21cc:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    21d0:	81 e0       	ldi	r24, 0x01	; 1
    21d2:	80 93 cc 03 	sts	0x03CC, r24	; 0x8003cc <_ZL4tout>
    21d6:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    21da:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <__data_end>
    21de:	08 c0       	rjmp	.+16     	; 0x21f0 <_ZL7RunTimev+0x4a2>
    21e0:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    21e4:	8f 5f       	subi	r24, 0xFF	; 255
    21e6:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    21ea:	81 e0       	ldi	r24, 0x01	; 1
    21ec:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    21f0:	eb e6       	ldi	r30, 0x6B	; 107
    21f2:	f4 e0       	ldi	r31, 0x04	; 4
    21f4:	84 81       	ldd	r24, Z+4	; 0x04
    21f6:	88 0f       	add	r24, r24
    21f8:	99 0b       	sbc	r25, r25
    21fa:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    21fe:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    2202:	83 81       	ldd	r24, Z+3	; 0x03
    2204:	88 0f       	add	r24, r24
    2206:	99 0b       	sbc	r25, r25
    2208:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    220c:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2210:	82 e0       	ldi	r24, 0x02	; 2
    2212:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <_ZL5brake>
    2216:	10 92 47 04 	sts	0x0447, r1	; 0x800447 <_ZL4Ttmr>
    221a:	10 92 48 04 	sts	0x0448, r1	; 0x800448 <_ZL9presc_Tms>
    221e:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <_ZL9lastError>
    2222:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <_ZL8PDresult+0x1>
    2226:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <_ZL8PDresult>
    222a:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    222e:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    2232:	83 30       	cpi	r24, 0x03	; 3
    2234:	09 f0       	breq	.+2      	; 0x2238 <_ZL7RunTimev+0x4ea>
    2236:	07 c1       	rjmp	.+526    	; 0x2446 <_ZL7RunTimev+0x6f8>
    2238:	97 98       	cbi	0x12, 7	; 18
    223a:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <_ZL9indexBuff>
    223e:	8f 70       	andi	r24, 0x0F	; 15
    2240:	86 30       	cpi	r24, 0x06	; 6
    2242:	21 f5       	brne	.+72     	; 0x228c <_ZL7RunTimev+0x53e>
    2244:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <_ZL4Ttmr>
    2248:	88 32       	cpi	r24, 0x28	; 40
    224a:	40 f0       	brcs	.+16     	; 0x225c <_ZL7RunTimev+0x50e>
    224c:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    2250:	8f 5f       	subi	r24, 0xFF	; 255
    2252:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    2256:	81 e0       	ldi	r24, 0x01	; 1
    2258:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    225c:	e4 e3       	ldi	r30, 0x34	; 52
    225e:	f4 e0       	ldi	r31, 0x04	; 4
    2260:	ab e6       	ldi	r26, 0x6B	; 107
    2262:	b4 e0       	ldi	r27, 0x04	; 4
    2264:	15 96       	adiw	r26, 0x05	; 5
    2266:	8c 91       	ld	r24, X
    2268:	15 97       	sbiw	r26, 0x05	; 5
    226a:	80 83       	st	Z, r24
    226c:	16 96       	adiw	r26, 0x06	; 6
    226e:	8c 91       	ld	r24, X
    2270:	16 97       	sbiw	r26, 0x06	; 6
    2272:	81 83       	std	Z+1, r24	; 0x01
    2274:	17 96       	adiw	r26, 0x07	; 7
    2276:	8c 91       	ld	r24, X
    2278:	82 83       	std	Z+2, r24	; 0x02
    227a:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <_ZL10mtrVelLeft+0x1>
    227e:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <_ZL10mtrVelLeft>
    2282:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZL11mtrVelRight+0x1>
    2286:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZL11mtrVelRight>
    228a:	d5 c0       	rjmp	.+426    	; 0x2436 <_ZL7RunTimev+0x6e8>
    228c:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <_ZL11sensNewData>
    2290:	88 23       	and	r24, r24
    2292:	d9 f1       	breq	.+118    	; 0x230a <_ZL7RunTimev+0x5bc>
    2294:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <_ZL9indexBuff+0x7>
    2298:	70 e0       	ldi	r23, 0x00	; 0
    229a:	75 95       	asr	r23
    229c:	67 95       	ror	r22
    229e:	75 95       	asr	r23
    22a0:	67 95       	ror	r22
    22a2:	75 95       	asr	r23
    22a4:	67 95       	ror	r22
    22a6:	75 95       	asr	r23
    22a8:	67 95       	ror	r22
    22aa:	8d e8       	ldi	r24, 0x8D	; 141
    22ac:	94 e0       	ldi	r25, 0x04	; 4
    22ae:	0e 94 46 09 	call	0x128c	; 0x128c <_ZN15LineDetectorLib6DetectEh>
    22b2:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <_ZL11sensNewData>
    22b6:	40 91 91 04 	lds	r20, 0x0491	; 0x800491 <Line+0x4>
    22ba:	24 2f       	mov	r18, r20
    22bc:	04 2e       	mov	r0, r20
    22be:	00 0c       	add	r0, r0
    22c0:	33 0b       	sbc	r19, r19
    22c2:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <_ZL9lastError>
    22c6:	b9 01       	movw	r22, r18
    22c8:	68 1b       	sub	r22, r24
    22ca:	71 09       	sbc	r23, r1
    22cc:	87 fd       	sbrc	r24, 7
    22ce:	73 95       	inc	r23
    22d0:	cb 01       	movw	r24, r22
    22d2:	e1 e5       	ldi	r30, 0x51	; 81
    22d4:	f4 e0       	ldi	r31, 0x04	; 4
    22d6:	51 81       	ldd	r21, Z+1	; 0x01
    22d8:	58 9f       	mul	r21, r24
    22da:	b0 01       	movw	r22, r0
    22dc:	59 9f       	mul	r21, r25
    22de:	70 0d       	add	r23, r0
    22e0:	11 24       	eor	r1, r1
    22e2:	50 81       	ld	r21, Z
    22e4:	52 9f       	mul	r21, r18
    22e6:	c0 01       	movw	r24, r0
    22e8:	53 9f       	mul	r21, r19
    22ea:	90 0d       	add	r25, r0
    22ec:	11 24       	eor	r1, r1
    22ee:	86 0f       	add	r24, r22
    22f0:	97 1f       	adc	r25, r23
    22f2:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <_ZL8PDresult+0x1>
    22f6:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <_ZL8PDresult>
    22fa:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <_ZL6errTmr>
    22fe:	8b 34       	cpi	r24, 0x4B	; 75
    2300:	20 f0       	brcs	.+8      	; 0x230a <_ZL7RunTimev+0x5bc>
    2302:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <_ZL6errTmr>
    2306:	40 93 33 04 	sts	0x0433, r20	; 0x800433 <_ZL9lastError>
    230a:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <_ZL9indexBuff+0x5>
    230e:	90 91 47 04 	lds	r25, 0x0447	; 0x800447 <_ZL4Ttmr>
    2312:	98 17       	cp	r25, r24
    2314:	78 f0       	brcs	.+30     	; 0x2334 <_ZL7RunTimev+0x5e6>
    2316:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <_ZL3seq>
    231a:	9f 5f       	subi	r25, 0xFF	; 255
    231c:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <_ZL3seq>
    2320:	91 e0       	ldi	r25, 0x01	; 1
    2322:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_ZL6dspRfs>
    2326:	88 23       	and	r24, r24
    2328:	09 f4       	brne	.+2      	; 0x232c <_ZL7RunTimev+0x5de>
    232a:	85 c0       	rjmp	.+266    	; 0x2436 <_ZL7RunTimev+0x6e8>
    232c:	81 e0       	ldi	r24, 0x01	; 1
    232e:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <_ZL5brake>
    2332:	81 c0       	rjmp	.+258    	; 0x2436 <_ZL7RunTimev+0x6e8>
    2334:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <_ZL9indexBuff+0x6>
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	88 0f       	add	r24, r24
    233c:	99 1f       	adc	r25, r25
    233e:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <_ZL6runVel+0x1>
    2342:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <_ZL6runVel>
    2346:	20 91 53 04 	lds	r18, 0x0453	; 0x800453 <_ZL6PDMnow+0x2>
    234a:	22 23       	and	r18, r18
    234c:	21 f0       	breq	.+8      	; 0x2356 <_ZL7RunTimev+0x608>
    234e:	21 30       	cpi	r18, 0x01	; 1
    2350:	09 f4       	brne	.+2      	; 0x2354 <_ZL7RunTimev+0x606>
    2352:	41 c0       	rjmp	.+130    	; 0x23d6 <_ZL7RunTimev+0x688>
    2354:	70 c0       	rjmp	.+224    	; 0x2436 <_ZL7RunTimev+0x6e8>
    2356:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <_ZL8PDresult>
    235a:	30 91 2e 04 	lds	r19, 0x042E	; 0x80042e <_ZL8PDresult+0x1>
    235e:	33 23       	and	r19, r19
    2360:	5c f4       	brge	.+22     	; 0x2378 <_ZL7RunTimev+0x62a>
    2362:	28 0f       	add	r18, r24
    2364:	39 1f       	adc	r19, r25
    2366:	30 93 32 04 	sts	0x0432, r19	; 0x800432 <_ZL10mtrVelLeft+0x1>
    236a:	20 93 31 04 	sts	0x0431, r18	; 0x800431 <_ZL10mtrVelLeft>
    236e:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    2372:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2376:	0a c0       	rjmp	.+20     	; 0x238c <_ZL7RunTimev+0x63e>
    2378:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    237c:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    2380:	82 1b       	sub	r24, r18
    2382:	93 0b       	sbc	r25, r19
    2384:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    2388:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    238c:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <Line+0x4>
    2390:	81 3e       	cpi	r24, 0xE1	; 225
    2392:	79 f4       	brne	.+30     	; 0x23b2 <_ZL7RunTimev+0x664>
    2394:	88 e3       	ldi	r24, 0x38	; 56
    2396:	9f ef       	ldi	r25, 0xFF	; 255
    2398:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    239c:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    23a0:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <_ZL6runVel>
    23a4:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <_ZL6runVel+0x1>
    23a8:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    23ac:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    23b0:	42 c0       	rjmp	.+132    	; 0x2436 <_ZL7RunTimev+0x6e8>
    23b2:	8f 31       	cpi	r24, 0x1F	; 31
    23b4:	09 f0       	breq	.+2      	; 0x23b8 <_ZL7RunTimev+0x66a>
    23b6:	3f c0       	rjmp	.+126    	; 0x2436 <_ZL7RunTimev+0x6e8>
    23b8:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <_ZL6runVel>
    23bc:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <_ZL6runVel+0x1>
    23c0:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    23c4:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    23c8:	88 e3       	ldi	r24, 0x38	; 56
    23ca:	9f ef       	ldi	r25, 0xFF	; 255
    23cc:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    23d0:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    23d4:	30 c0       	rjmp	.+96     	; 0x2436 <_ZL7RunTimev+0x6e8>
    23d6:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <_ZL8PDresult>
    23da:	30 91 2e 04 	lds	r19, 0x042E	; 0x80042e <_ZL8PDresult+0x1>
    23de:	ac 01       	movw	r20, r24
    23e0:	42 0f       	add	r20, r18
    23e2:	53 1f       	adc	r21, r19
    23e4:	50 93 32 04 	sts	0x0432, r21	; 0x800432 <_ZL10mtrVelLeft+0x1>
    23e8:	40 93 31 04 	sts	0x0431, r20	; 0x800431 <_ZL10mtrVelLeft>
    23ec:	82 1b       	sub	r24, r18
    23ee:	93 0b       	sbc	r25, r19
    23f0:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    23f4:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    23f8:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <Line+0x4>
    23fc:	81 3e       	cpi	r24, 0xE1	; 225
    23fe:	69 f4       	brne	.+26     	; 0x241a <_ZL7RunTimev+0x6cc>
    2400:	88 e3       	ldi	r24, 0x38	; 56
    2402:	9f ef       	ldi	r25, 0xFF	; 255
    2404:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2408:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    240c:	88 ec       	ldi	r24, 0xC8	; 200
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    2414:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2418:	0e c0       	rjmp	.+28     	; 0x2436 <_ZL7RunTimev+0x6e8>
    241a:	8f 31       	cpi	r24, 0x1F	; 31
    241c:	61 f4       	brne	.+24     	; 0x2436 <_ZL7RunTimev+0x6e8>
    241e:	88 ec       	ldi	r24, 0xC8	; 200
    2420:	90 e0       	ldi	r25, 0x00	; 0
    2422:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2426:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    242a:	88 e3       	ldi	r24, 0x38	; 56
    242c:	9f ef       	ldi	r25, 0xFF	; 255
    242e:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    2432:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2436:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <_ZL4Dtmr>
    243a:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
    243e:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    2442:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    2446:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    244a:	84 30       	cpi	r24, 0x04	; 4
    244c:	29 f5       	brne	.+74     	; 0x2498 <_ZL7RunTimev+0x74a>
    244e:	97 98       	cbi	0x12, 7	; 18
    2450:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZL6idxPtr>
    2454:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <_ZL7idxStop>
    2458:	89 17       	cp	r24, r25
    245a:	38 f0       	brcs	.+14     	; 0x246a <_ZL7RunTimev+0x71c>
    245c:	85 e0       	ldi	r24, 0x05	; 5
    245e:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    2468:	08 c0       	rjmp	.+16     	; 0x247a <_ZL7RunTimev+0x72c>
    246a:	8f 5f       	subi	r24, 0xFF	; 255
    246c:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZL6idxPtr>
    2470:	81 e0       	ldi	r24, 0x01	; 1
    2472:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    2476:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    247a:	81 e0       	ldi	r24, 0x01	; 1
    247c:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <_ZL10readRunMem>
    2480:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <_ZL4Dtmr>
    2484:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
    2488:	10 92 47 04 	sts	0x0447, r1	; 0x800447 <_ZL4Ttmr>
    248c:	10 92 48 04 	sts	0x0448, r1	; 0x800448 <_ZL9presc_Tms>
    2490:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    2494:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    2498:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    249c:	85 30       	cpi	r24, 0x05	; 5
    249e:	08 f4       	brcc	.+2      	; 0x24a2 <_ZL7RunTimev+0x754>
    24a0:	67 c0       	rjmp	.+206    	; 0x2570 <_ZL7RunTimev+0x822>
    24a2:	97 98       	cbi	0x12, 7	; 18
    24a4:	81 e0       	ldi	r24, 0x01	; 1
    24a6:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <__data_end>
    24aa:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <_ZL6runTmr>
    24ae:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <_ZL6runTmr+0x1>
    24b2:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <_ZL12runTotalTime+0x1>
    24b6:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <_ZL12runTotalTime>
    24ba:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <_ZL5brake>
    24be:	88 23       	and	r24, r24
    24c0:	d9 f1       	breq	.+118    	; 0x2538 <_ZL7RunTimev+0x7ea>
    24c2:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <_ZL8brakeTmr>
    24c6:	90 91 3b 04 	lds	r25, 0x043B	; 0x80043b <_ZL9brakeTime>
    24ca:	29 17       	cp	r18, r25
    24cc:	40 f5       	brcc	.+80     	; 0x251e <_ZL7RunTimev+0x7d0>
    24ce:	82 30       	cpi	r24, 0x02	; 2
    24d0:	d9 f4       	brne	.+54     	; 0x2508 <_ZL7RunTimev+0x7ba>
    24d2:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZL9indexBuff+0x4>
    24d6:	88 23       	and	r24, r24
    24d8:	1c f0       	brlt	.+6      	; 0x24e0 <_ZL7RunTimev+0x792>
    24da:	88 e3       	ldi	r24, 0x38	; 56
    24dc:	9f ef       	ldi	r25, 0xFF	; 255
    24de:	02 c0       	rjmp	.+4      	; 0x24e4 <_ZL7RunTimev+0x796>
    24e0:	88 ec       	ldi	r24, 0xC8	; 200
    24e2:	90 e0       	ldi	r25, 0x00	; 0
    24e4:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    24e8:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    24ec:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <_ZL9indexBuff+0x3>
    24f0:	88 23       	and	r24, r24
    24f2:	1c f0       	brlt	.+6      	; 0x24fa <_ZL7RunTimev+0x7ac>
    24f4:	88 e3       	ldi	r24, 0x38	; 56
    24f6:	9f ef       	ldi	r25, 0xFF	; 255
    24f8:	02 c0       	rjmp	.+4      	; 0x24fe <_ZL7RunTimev+0x7b0>
    24fa:	88 ec       	ldi	r24, 0xC8	; 200
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    2502:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    2506:	34 c0       	rjmp	.+104    	; 0x2570 <_ZL7RunTimev+0x822>
    2508:	8c e9       	ldi	r24, 0x9C	; 156
    250a:	9f ef       	ldi	r25, 0xFF	; 255
    250c:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2510:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <_ZL10mtrVelLeft>
    2514:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_ZL11mtrVelRight+0x1>
    2518:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZL11mtrVelRight>
    251c:	29 c0       	rjmp	.+82     	; 0x2570 <_ZL7RunTimev+0x822>
    251e:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
    2522:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2526:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <_ZL10mtrVelLeft>
    252a:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZL11mtrVelRight+0x1>
    252e:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZL11mtrVelRight>
    2532:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <_ZL5brake>
    2536:	1c c0       	rjmp	.+56     	; 0x2570 <_ZL7RunTimev+0x822>
    2538:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
    253c:	19 c0       	rjmp	.+50     	; 0x2570 <_ZL7RunTimev+0x822>
    253e:	97 9a       	sbi	0x12, 7	; 18
    2540:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <_ZL4Dtmr>
    2544:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
    2548:	10 92 47 04 	sts	0x0447, r1	; 0x800447 <_ZL4Ttmr>
    254c:	10 92 48 04 	sts	0x0448, r1	; 0x800448 <_ZL9presc_Tms>
    2550:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <_ZL7toutTmr>
    2554:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <_ZL9lastError>
    2558:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <_ZL6errTmr>
    255c:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <_ZL12runTotalTime+0x1>
    2560:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <_ZL12runTotalTime>
    2564:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <_ZL4tout>
    2568:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <_ZL5brake>
    256c:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    2570:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_ZL4vbat>
    2574:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <_ZL4vbat+0x1>
    2578:	c0 91 4a 04 	lds	r28, 0x044A	; 0x80044a <_ZL9vVbatComp>
    257c:	cc 23       	and	r28, r28
    257e:	09 f4       	brne	.+2      	; 0x2582 <_ZL7RunTimev+0x834>
    2580:	51 c0       	rjmp	.+162    	; 0x2624 <_ZL7RunTimev+0x8d6>
    2582:	68 e3       	ldi	r22, 0x38	; 56
    2584:	71 e3       	ldi	r23, 0x31	; 49
    2586:	68 1b       	sub	r22, r24
    2588:	79 0b       	sbc	r23, r25
    258a:	32 f5       	brpl	.+76     	; 0x25d8 <_ZL7RunTimev+0x88a>
    258c:	71 95       	neg	r23
    258e:	61 95       	neg	r22
    2590:	71 09       	sbc	r23, r1
    2592:	07 2e       	mov	r0, r23
    2594:	00 0c       	add	r0, r0
    2596:	88 0b       	sbc	r24, r24
    2598:	99 0b       	sbc	r25, r25
    259a:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
    259e:	20 e0       	ldi	r18, 0x00	; 0
    25a0:	30 e0       	ldi	r19, 0x00	; 0
    25a2:	4a e7       	ldi	r20, 0x7A	; 122
    25a4:	54 e4       	ldi	r21, 0x44	; 68
    25a6:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    25aa:	6b 01       	movw	r12, r22
    25ac:	7c 01       	movw	r14, r24
    25ae:	6c 2f       	mov	r22, r28
    25b0:	70 e0       	ldi	r23, 0x00	; 0
    25b2:	80 e0       	ldi	r24, 0x00	; 0
    25b4:	90 e0       	ldi	r25, 0x00	; 0
    25b6:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
    25ba:	20 e0       	ldi	r18, 0x00	; 0
    25bc:	30 e0       	ldi	r19, 0x00	; 0
    25be:	40 e2       	ldi	r20, 0x20	; 32
    25c0:	51 e4       	ldi	r21, 0x41	; 65
    25c2:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    25c6:	9b 01       	movw	r18, r22
    25c8:	ac 01       	movw	r20, r24
    25ca:	c7 01       	movw	r24, r14
    25cc:	b6 01       	movw	r22, r12
    25ce:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
    25d2:	6b 01       	movw	r12, r22
    25d4:	7c 01       	movw	r14, r24
    25d6:	2d c0       	rjmp	.+90     	; 0x2632 <_ZL7RunTimev+0x8e4>
    25d8:	16 16       	cp	r1, r22
    25da:	17 06       	cpc	r1, r23
    25dc:	3c f5       	brge	.+78     	; 0x262c <_ZL7RunTimev+0x8de>
    25de:	07 2e       	mov	r0, r23
    25e0:	00 0c       	add	r0, r0
    25e2:	88 0b       	sbc	r24, r24
    25e4:	99 0b       	sbc	r25, r25
    25e6:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
    25ea:	20 e0       	ldi	r18, 0x00	; 0
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	48 ec       	ldi	r20, 0xC8	; 200
    25f0:	52 e4       	ldi	r21, 0x42	; 66
    25f2:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    25f6:	6b 01       	movw	r12, r22
    25f8:	7c 01       	movw	r14, r24
    25fa:	6c 2f       	mov	r22, r28
    25fc:	70 e0       	ldi	r23, 0x00	; 0
    25fe:	80 e0       	ldi	r24, 0x00	; 0
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
    2606:	20 e0       	ldi	r18, 0x00	; 0
    2608:	30 e0       	ldi	r19, 0x00	; 0
    260a:	40 e2       	ldi	r20, 0x20	; 32
    260c:	51 e4       	ldi	r21, 0x41	; 65
    260e:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    2612:	9b 01       	movw	r18, r22
    2614:	ac 01       	movw	r20, r24
    2616:	c7 01       	movw	r24, r14
    2618:	b6 01       	movw	r22, r12
    261a:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
    261e:	6b 01       	movw	r12, r22
    2620:	7c 01       	movw	r14, r24
    2622:	07 c0       	rjmp	.+14     	; 0x2632 <_ZL7RunTimev+0x8e4>
    2624:	c1 2c       	mov	r12, r1
    2626:	d1 2c       	mov	r13, r1
    2628:	76 01       	movw	r14, r12
    262a:	03 c0       	rjmp	.+6      	; 0x2632 <_ZL7RunTimev+0x8e4>
    262c:	c1 2c       	mov	r12, r1
    262e:	d1 2c       	mov	r13, r1
    2630:	76 01       	movw	r14, r12
    2632:	60 91 65 00 	lds	r22, 0x0065	; 0x800065 <_ZL8mtrOffsR>
    2636:	70 e0       	ldi	r23, 0x00	; 0
    2638:	80 e0       	ldi	r24, 0x00	; 0
    263a:	90 e0       	ldi	r25, 0x00	; 0
    263c:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
    2640:	a7 01       	movw	r20, r14
    2642:	96 01       	movw	r18, r12
    2644:	0e 94 ab 38 	call	0x7156	; 0x7156 <__addsf3>
    2648:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
    264c:	c6 2f       	mov	r28, r22
    264e:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <_ZL8mtrOffsL>
    2652:	70 e0       	ldi	r23, 0x00	; 0
    2654:	80 e0       	ldi	r24, 0x00	; 0
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	0e 94 c1 39 	call	0x7382	; 0x7382 <__floatsisf>
    265c:	a7 01       	movw	r20, r14
    265e:	96 01       	movw	r18, r12
    2660:	0e 94 ab 38 	call	0x7156	; 0x7156 <__addsf3>
    2664:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
    2668:	e6 ea       	ldi	r30, 0xA6	; 166
    266a:	f4 e0       	ldi	r31, 0x04	; 4
    266c:	8f ef       	ldi	r24, 0xFF	; 255
    266e:	93 e0       	ldi	r25, 0x03	; 3
    2670:	91 83       	std	Z+1, r25	; 0x01
    2672:	80 83       	st	Z, r24
    2674:	62 83       	std	Z+2, r22	; 0x02
    2676:	c3 83       	std	Z+3, r28	; 0x03
    2678:	40 91 2f 04 	lds	r20, 0x042F	; 0x80042f <_ZL11mtrVelRight>
    267c:	50 91 30 04 	lds	r21, 0x0430	; 0x800430 <_ZL11mtrVelRight+0x1>
    2680:	ca 01       	movw	r24, r20
    2682:	88 0f       	add	r24, r24
    2684:	99 1f       	adc	r25, r25
    2686:	88 0f       	add	r24, r24
    2688:	99 1f       	adc	r25, r25
    268a:	48 0f       	add	r20, r24
    268c:	59 1f       	adc	r21, r25
    268e:	60 91 31 04 	lds	r22, 0x0431	; 0x800431 <_ZL10mtrVelLeft>
    2692:	70 91 32 04 	lds	r23, 0x0432	; 0x800432 <_ZL10mtrVelLeft+0x1>
    2696:	cb 01       	movw	r24, r22
    2698:	88 0f       	add	r24, r24
    269a:	99 1f       	adc	r25, r25
    269c:	88 0f       	add	r24, r24
    269e:	99 1f       	adc	r25, r25
    26a0:	68 0f       	add	r22, r24
    26a2:	79 1f       	adc	r23, r25
    26a4:	cf 01       	movw	r24, r30
    26a6:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    26aa:	35 c0       	rjmp	.+106    	; 0x2716 <_ZL7RunTimev+0x9c8>
    26ac:	92 98       	cbi	0x12, 2	; 18
    26ae:	97 98       	cbi	0x12, 7	; 18
    26b0:	10 92 42 04 	sts	0x0442, r1	; 0x800442 <_ZL7runDtmr>
    26b4:	20 91 85 04 	lds	r18, 0x0485	; 0x800485 <_ZL4menu>
    26b8:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_ZL7pointer>
    26bc:	90 e0       	ldi	r25, 0x00	; 0
    26be:	82 0f       	add	r24, r18
    26c0:	91 1d       	adc	r25, r1
    26c2:	07 97       	sbiw	r24, 0x07	; 7
    26c4:	21 f4       	brne	.+8      	; 0x26ce <_ZL7RunTimev+0x980>
    26c6:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    26ca:	82 30       	cpi	r24, 0x02	; 2
    26cc:	41 f0       	breq	.+16     	; 0x26de <_ZL7RunTimev+0x990>
    26ce:	40 e0       	ldi	r20, 0x00	; 0
    26d0:	50 e0       	ldi	r21, 0x00	; 0
    26d2:	60 e0       	ldi	r22, 0x00	; 0
    26d4:	70 e0       	ldi	r23, 0x00	; 0
    26d6:	86 ea       	ldi	r24, 0xA6	; 166
    26d8:	94 e0       	ldi	r25, 0x04	; 4
    26da:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    26de:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <_ZL10mtrVelLeft+0x1>
    26e2:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <_ZL10mtrVelLeft>
    26e6:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZL11mtrVelRight+0x1>
    26ea:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZL11mtrVelRight>
    26ee:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <_ZL4Dtmr>
    26f2:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
    26f6:	10 92 47 04 	sts	0x0447, r1	; 0x800447 <_ZL4Ttmr>
    26fa:	10 92 48 04 	sts	0x0448, r1	; 0x800448 <_ZL9presc_Tms>
    26fe:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <_ZL9lastError>
    2702:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <_ZL6errTmr>
    2706:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <_ZL6runTmr+0x1>
    270a:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <_ZL6runTmr>
    270e:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <_ZL11presc_100ms>
    2712:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZL8brakeTmr>
    2716:	cf 91       	pop	r28
    2718:	ff 90       	pop	r15
    271a:	ef 90       	pop	r14
    271c:	df 90       	pop	r13
    271e:	cf 90       	pop	r12
    2720:	08 95       	ret

00002722 <_Z9TimerInithh>:
    2722:	98 2f       	mov	r25, r24
    2724:	96 70       	andi	r25, 0x06	; 6
    2726:	98 60       	ori	r25, 0x08	; 8
    2728:	81 70       	andi	r24, 0x01	; 1
    272a:	89 2b       	or	r24, r25
    272c:	83 bf       	out	0x33, r24	; 51
    272e:	6c bf       	out	0x3c, r22	; 60
    2730:	82 e0       	ldi	r24, 0x02	; 2
    2732:	89 bf       	out	0x39, r24	; 57
    2734:	08 95       	ret

00002736 <_ZN9I2CEEPROM9WriteByteEjh>:
    2736:	ff 92       	push	r15
    2738:	0f 93       	push	r16
    273a:	1f 93       	push	r17
    273c:	cf 93       	push	r28
    273e:	df 93       	push	r29
    2740:	ec 01       	movw	r28, r24
    2742:	f6 2e       	mov	r15, r22
    2744:	07 2f       	mov	r16, r23
    2746:	14 2f       	mov	r17, r20
    2748:	8b 81       	ldd	r24, Y+3	; 0x03
    274a:	9c 81       	ldd	r25, Y+4	; 0x04
    274c:	dc 01       	movw	r26, r24
    274e:	ed 91       	ld	r30, X+
    2750:	fc 91       	ld	r31, X
    2752:	02 80       	ldd	r0, Z+2	; 0x02
    2754:	f3 81       	ldd	r31, Z+3	; 0x03
    2756:	e0 2d       	mov	r30, r0
    2758:	6a 81       	ldd	r22, Y+2	; 0x02
    275a:	09 95       	icall
    275c:	8b 81       	ldd	r24, Y+3	; 0x03
    275e:	9c 81       	ldd	r25, Y+4	; 0x04
    2760:	dc 01       	movw	r26, r24
    2762:	ed 91       	ld	r30, X+
    2764:	fc 91       	ld	r31, X
    2766:	06 80       	ldd	r0, Z+6	; 0x06
    2768:	f7 81       	ldd	r31, Z+7	; 0x07
    276a:	e0 2d       	mov	r30, r0
    276c:	60 2f       	mov	r22, r16
    276e:	09 95       	icall
    2770:	08 2f       	mov	r16, r24
    2772:	8b 81       	ldd	r24, Y+3	; 0x03
    2774:	9c 81       	ldd	r25, Y+4	; 0x04
    2776:	dc 01       	movw	r26, r24
    2778:	ed 91       	ld	r30, X+
    277a:	fc 91       	ld	r31, X
    277c:	06 80       	ldd	r0, Z+6	; 0x06
    277e:	f7 81       	ldd	r31, Z+7	; 0x07
    2780:	e0 2d       	mov	r30, r0
    2782:	6f 2d       	mov	r22, r15
    2784:	09 95       	icall
    2786:	08 23       	and	r16, r24
    2788:	8b 81       	ldd	r24, Y+3	; 0x03
    278a:	9c 81       	ldd	r25, Y+4	; 0x04
    278c:	dc 01       	movw	r26, r24
    278e:	ed 91       	ld	r30, X+
    2790:	fc 91       	ld	r31, X
    2792:	06 80       	ldd	r0, Z+6	; 0x06
    2794:	f7 81       	ldd	r31, Z+7	; 0x07
    2796:	e0 2d       	mov	r30, r0
    2798:	61 2f       	mov	r22, r17
    279a:	09 95       	icall
    279c:	08 23       	and	r16, r24
    279e:	8b 81       	ldd	r24, Y+3	; 0x03
    27a0:	9c 81       	ldd	r25, Y+4	; 0x04
    27a2:	dc 01       	movw	r26, r24
    27a4:	ed 91       	ld	r30, X+
    27a6:	fc 91       	ld	r31, X
    27a8:	00 84       	ldd	r0, Z+8	; 0x08
    27aa:	f1 85       	ldd	r31, Z+9	; 0x09
    27ac:	e0 2d       	mov	r30, r0
    27ae:	09 95       	icall
    27b0:	00 23       	and	r16, r16
    27b2:	b1 f0       	breq	.+44     	; 0x27e0 <_ZN9I2CEEPROM9WriteByteEjh+0xaa>
    27b4:	8b 81       	ldd	r24, Y+3	; 0x03
    27b6:	9c 81       	ldd	r25, Y+4	; 0x04
    27b8:	dc 01       	movw	r26, r24
    27ba:	ed 91       	ld	r30, X+
    27bc:	fc 91       	ld	r31, X
    27be:	02 80       	ldd	r0, Z+2	; 0x02
    27c0:	f3 81       	ldd	r31, Z+3	; 0x03
    27c2:	e0 2d       	mov	r30, r0
    27c4:	6a 81       	ldd	r22, Y+2	; 0x02
    27c6:	09 95       	icall
    27c8:	18 2f       	mov	r17, r24
    27ca:	8b 81       	ldd	r24, Y+3	; 0x03
    27cc:	9c 81       	ldd	r25, Y+4	; 0x04
    27ce:	dc 01       	movw	r26, r24
    27d0:	ed 91       	ld	r30, X+
    27d2:	fc 91       	ld	r31, X
    27d4:	00 84       	ldd	r0, Z+8	; 0x08
    27d6:	f1 85       	ldd	r31, Z+9	; 0x09
    27d8:	e0 2d       	mov	r30, r0
    27da:	09 95       	icall
    27dc:	11 23       	and	r17, r17
    27de:	51 f3       	breq	.-44     	; 0x27b4 <_ZN9I2CEEPROM9WriteByteEjh+0x7e>
    27e0:	80 2f       	mov	r24, r16
    27e2:	df 91       	pop	r29
    27e4:	cf 91       	pop	r28
    27e6:	1f 91       	pop	r17
    27e8:	0f 91       	pop	r16
    27ea:	ff 90       	pop	r15
    27ec:	08 95       	ret

000027ee <_ZN9I2CEEPROM8ReadByteEj>:
    27ee:	0f 93       	push	r16
    27f0:	1f 93       	push	r17
    27f2:	cf 93       	push	r28
    27f4:	df 93       	push	r29
    27f6:	ec 01       	movw	r28, r24
    27f8:	16 2f       	mov	r17, r22
    27fa:	07 2f       	mov	r16, r23
    27fc:	8b 81       	ldd	r24, Y+3	; 0x03
    27fe:	9c 81       	ldd	r25, Y+4	; 0x04
    2800:	dc 01       	movw	r26, r24
    2802:	ed 91       	ld	r30, X+
    2804:	fc 91       	ld	r31, X
    2806:	02 80       	ldd	r0, Z+2	; 0x02
    2808:	f3 81       	ldd	r31, Z+3	; 0x03
    280a:	e0 2d       	mov	r30, r0
    280c:	6a 81       	ldd	r22, Y+2	; 0x02
    280e:	09 95       	icall
    2810:	8b 81       	ldd	r24, Y+3	; 0x03
    2812:	9c 81       	ldd	r25, Y+4	; 0x04
    2814:	dc 01       	movw	r26, r24
    2816:	ed 91       	ld	r30, X+
    2818:	fc 91       	ld	r31, X
    281a:	06 80       	ldd	r0, Z+6	; 0x06
    281c:	f7 81       	ldd	r31, Z+7	; 0x07
    281e:	e0 2d       	mov	r30, r0
    2820:	60 2f       	mov	r22, r16
    2822:	09 95       	icall
    2824:	8b 81       	ldd	r24, Y+3	; 0x03
    2826:	9c 81       	ldd	r25, Y+4	; 0x04
    2828:	dc 01       	movw	r26, r24
    282a:	ed 91       	ld	r30, X+
    282c:	fc 91       	ld	r31, X
    282e:	06 80       	ldd	r0, Z+6	; 0x06
    2830:	f7 81       	ldd	r31, Z+7	; 0x07
    2832:	e0 2d       	mov	r30, r0
    2834:	61 2f       	mov	r22, r17
    2836:	09 95       	icall
    2838:	8b 81       	ldd	r24, Y+3	; 0x03
    283a:	9c 81       	ldd	r25, Y+4	; 0x04
    283c:	6a 81       	ldd	r22, Y+2	; 0x02
    283e:	61 60       	ori	r22, 0x01	; 1
    2840:	dc 01       	movw	r26, r24
    2842:	ed 91       	ld	r30, X+
    2844:	fc 91       	ld	r31, X
    2846:	02 80       	ldd	r0, Z+2	; 0x02
    2848:	f3 81       	ldd	r31, Z+3	; 0x03
    284a:	e0 2d       	mov	r30, r0
    284c:	09 95       	icall
    284e:	88 23       	and	r24, r24
    2850:	61 f0       	breq	.+24     	; 0x286a <_ZN9I2CEEPROM8ReadByteEj+0x7c>
    2852:	8b 81       	ldd	r24, Y+3	; 0x03
    2854:	9c 81       	ldd	r25, Y+4	; 0x04
    2856:	dc 01       	movw	r26, r24
    2858:	ed 91       	ld	r30, X+
    285a:	fc 91       	ld	r31, X
    285c:	04 80       	ldd	r0, Z+4	; 0x04
    285e:	f5 81       	ldd	r31, Z+5	; 0x05
    2860:	e0 2d       	mov	r30, r0
    2862:	60 e0       	ldi	r22, 0x00	; 0
    2864:	09 95       	icall
    2866:	18 2f       	mov	r17, r24
    2868:	01 c0       	rjmp	.+2      	; 0x286c <_ZN9I2CEEPROM8ReadByteEj+0x7e>
    286a:	10 e0       	ldi	r17, 0x00	; 0
    286c:	8b 81       	ldd	r24, Y+3	; 0x03
    286e:	9c 81       	ldd	r25, Y+4	; 0x04
    2870:	dc 01       	movw	r26, r24
    2872:	ed 91       	ld	r30, X+
    2874:	fc 91       	ld	r31, X
    2876:	00 84       	ldd	r0, Z+8	; 0x08
    2878:	f1 85       	ldd	r31, Z+9	; 0x09
    287a:	e0 2d       	mov	r30, r0
    287c:	09 95       	icall
    287e:	81 2f       	mov	r24, r17
    2880:	df 91       	pop	r29
    2882:	cf 91       	pop	r28
    2884:	1f 91       	pop	r17
    2886:	0f 91       	pop	r16
    2888:	08 95       	ret

0000288a <_ZN9I2CEEPROM10UpdateByteEjh>:
    288a:	ff 92       	push	r15
    288c:	0f 93       	push	r16
    288e:	1f 93       	push	r17
    2890:	cf 93       	push	r28
    2892:	df 93       	push	r29
    2894:	ec 01       	movw	r28, r24
    2896:	8b 01       	movw	r16, r22
    2898:	f4 2e       	mov	r15, r20
    289a:	0e 94 f7 13 	call	0x27ee	; 0x27ee <_ZN9I2CEEPROM8ReadByteEj>
    289e:	8f 15       	cp	r24, r15
    28a0:	31 f0       	breq	.+12     	; 0x28ae <_ZN9I2CEEPROM10UpdateByteEjh+0x24>
    28a2:	4f 2d       	mov	r20, r15
    28a4:	b8 01       	movw	r22, r16
    28a6:	ce 01       	movw	r24, r28
    28a8:	0e 94 9b 13 	call	0x2736	; 0x2736 <_ZN9I2CEEPROM9WriteByteEjh>
    28ac:	01 c0       	rjmp	.+2      	; 0x28b0 <_ZN9I2CEEPROM10UpdateByteEjh+0x26>
    28ae:	80 e0       	ldi	r24, 0x00	; 0
    28b0:	df 91       	pop	r29
    28b2:	cf 91       	pop	r28
    28b4:	1f 91       	pop	r17
    28b6:	0f 91       	pop	r16
    28b8:	ff 90       	pop	r15
    28ba:	08 95       	ret

000028bc <_ZN9I2CEEPROM9ReadBlockEjPhj>:
    28bc:	cf 92       	push	r12
    28be:	df 92       	push	r13
    28c0:	ef 92       	push	r14
    28c2:	ff 92       	push	r15
    28c4:	0f 93       	push	r16
    28c6:	1f 93       	push	r17
    28c8:	cf 93       	push	r28
    28ca:	df 93       	push	r29
    28cc:	21 15       	cp	r18, r1
    28ce:	31 05       	cpc	r19, r1
    28d0:	91 f0       	breq	.+36     	; 0x28f6 <_ZN9I2CEEPROM9ReadBlockEjPhj+0x3a>
    28d2:	6c 01       	movw	r12, r24
    28d4:	8a 01       	movw	r16, r20
    28d6:	02 0f       	add	r16, r18
    28d8:	13 1f       	adc	r17, r19
    28da:	ea 01       	movw	r28, r20
    28dc:	7b 01       	movw	r14, r22
    28de:	e4 1a       	sub	r14, r20
    28e0:	f5 0a       	sbc	r15, r21
    28e2:	b7 01       	movw	r22, r14
    28e4:	6c 0f       	add	r22, r28
    28e6:	7d 1f       	adc	r23, r29
    28e8:	c6 01       	movw	r24, r12
    28ea:	0e 94 f7 13 	call	0x27ee	; 0x27ee <_ZN9I2CEEPROM8ReadByteEj>
    28ee:	89 93       	st	Y+, r24
    28f0:	c0 17       	cp	r28, r16
    28f2:	d1 07       	cpc	r29, r17
    28f4:	b1 f7       	brne	.-20     	; 0x28e2 <_ZN9I2CEEPROM9ReadBlockEjPhj+0x26>
    28f6:	df 91       	pop	r29
    28f8:	cf 91       	pop	r28
    28fa:	1f 91       	pop	r17
    28fc:	0f 91       	pop	r16
    28fe:	ff 90       	pop	r15
    2900:	ef 90       	pop	r14
    2902:	df 90       	pop	r13
    2904:	cf 90       	pop	r12
    2906:	08 95       	ret

00002908 <_ZL11readProgMemh>:
    2908:	60 91 76 04 	lds	r22, 0x0476	; 0x800476 <_ZL6idxSel>
    290c:	66 23       	and	r22, r22
    290e:	d9 f0       	breq	.+54     	; 0x2946 <_ZL11readProgMemh+0x3e>
    2910:	70 e0       	ldi	r23, 0x00	; 0
    2912:	61 50       	subi	r22, 0x01	; 1
    2914:	71 09       	sbc	r23, r1
    2916:	66 0f       	add	r22, r22
    2918:	77 1f       	adc	r23, r23
    291a:	66 0f       	add	r22, r22
    291c:	77 1f       	adc	r23, r23
    291e:	66 0f       	add	r22, r22
    2920:	77 1f       	adc	r23, r23
    2922:	e8 2f       	mov	r30, r24
    2924:	f0 e0       	ldi	r31, 0x00	; 0
    2926:	ee 0f       	add	r30, r30
    2928:	ff 1f       	adc	r31, r31
    292a:	e9 5e       	subi	r30, 0xE9	; 233
    292c:	fb 4f       	sbci	r31, 0xFB	; 251
    292e:	80 81       	ld	r24, Z
    2930:	91 81       	ldd	r25, Z+1	; 0x01
    2932:	68 0f       	add	r22, r24
    2934:	79 1f       	adc	r23, r25
    2936:	28 e0       	ldi	r18, 0x08	; 8
    2938:	30 e0       	ldi	r19, 0x00	; 0
    293a:	4b e6       	ldi	r20, 0x6B	; 107
    293c:	54 e0       	ldi	r21, 0x04	; 4
    293e:	86 e8       	ldi	r24, 0x86	; 134
    2940:	94 e0       	ldi	r25, 0x04	; 4
    2942:	0e 94 5e 14 	call	0x28bc	; 0x28bc <_ZN9I2CEEPROM9ReadBlockEjPhj>
    2946:	08 95       	ret

00002948 <_ZL7Storagev>:
    2948:	cf 93       	push	r28
    294a:	df 93       	push	r29
    294c:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <_ZL10readRunMem>
    2950:	88 23       	and	r24, r24
    2952:	f1 f1       	breq	.+124    	; 0x29d0 <_ZL7Storagev+0x88>
    2954:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <_ZL10readRunMem>
    2958:	d0 91 76 04 	lds	r29, 0x0476	; 0x800476 <_ZL6idxSel>
    295c:	c0 91 77 04 	lds	r28, 0x0477	; 0x800477 <_ZL7progSel>
    2960:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <_ZL7progPtr>
    2964:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <_ZL7progSel>
    2968:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <_ZL6idxPtr>
    296c:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <_ZL6idxSel>
    2970:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
    2974:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
    2978:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    297c:	90 e0       	ldi	r25, 0x00	; 0
    297e:	8f 5b       	subi	r24, 0xBF	; 191
    2980:	9e 4f       	sbci	r25, 0xFE	; 254
    2982:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    2986:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <_ZL7idxStop>
    298a:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZL9indexBuff+0x7>
    298e:	8f 70       	andi	r24, 0x0F	; 15
    2990:	90 e0       	ldi	r25, 0x00	; 0
    2992:	bc 01       	movw	r22, r24
    2994:	66 0f       	add	r22, r22
    2996:	77 1f       	adc	r23, r23
    2998:	68 0f       	add	r22, r24
    299a:	79 1f       	adc	r23, r25
    299c:	6d 5c       	subi	r22, 0xCD	; 205
    299e:	7f 4f       	sbci	r23, 0xFF	; 255
    29a0:	43 e0       	ldi	r20, 0x03	; 3
    29a2:	50 e0       	ldi	r21, 0x00	; 0
    29a4:	81 e5       	ldi	r24, 0x51	; 81
    29a6:	94 e0       	ldi	r25, 0x04	; 4
    29a8:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
    29ac:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
    29b0:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <_ZL6idxPtr>
    29b4:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_ZL7idxStop>
    29b8:	89 17       	cp	r24, r25
    29ba:	30 f4       	brcc	.+12     	; 0x29c8 <_ZL7Storagev+0x80>
    29bc:	85 e0       	ldi	r24, 0x05	; 5
    29be:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <_ZL3seq>
    29c2:	81 e0       	ldi	r24, 0x01	; 1
    29c4:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <_ZL6dspRfs>
    29c8:	d0 93 76 04 	sts	0x0476, r29	; 0x800476 <_ZL6idxSel>
    29cc:	c0 93 77 04 	sts	0x0477, r28	; 0x800477 <_ZL7progSel>
    29d0:	df 91       	pop	r29
    29d2:	cf 91       	pop	r28
    29d4:	08 95       	ret

000029d6 <_ZN9I2CEEPROM11UpdateBlockEjPhj>:
    29d6:	af 92       	push	r10
    29d8:	bf 92       	push	r11
    29da:	cf 92       	push	r12
    29dc:	df 92       	push	r13
    29de:	ff 92       	push	r15
    29e0:	0f 93       	push	r16
    29e2:	1f 93       	push	r17
    29e4:	cf 93       	push	r28
    29e6:	df 93       	push	r29
    29e8:	21 15       	cp	r18, r1
    29ea:	31 05       	cpc	r19, r1
    29ec:	b1 f0       	breq	.+44     	; 0x2a1a <_ZN9I2CEEPROM11UpdateBlockEjPhj+0x44>
    29ee:	6a 01       	movw	r12, r20
    29f0:	5c 01       	movw	r10, r24
    29f2:	8a 01       	movw	r16, r20
    29f4:	c2 0e       	add	r12, r18
    29f6:	d3 1e       	adc	r13, r19
    29f8:	c6 2f       	mov	r28, r22
    29fa:	d7 2f       	mov	r29, r23
    29fc:	ff 24       	eor	r15, r15
    29fe:	f3 94       	inc	r15
    2a00:	f8 01       	movw	r30, r16
    2a02:	41 91       	ld	r20, Z+
    2a04:	8f 01       	movw	r16, r30
    2a06:	be 01       	movw	r22, r28
    2a08:	c5 01       	movw	r24, r10
    2a0a:	0e 94 45 14 	call	0x288a	; 0x288a <_ZN9I2CEEPROM10UpdateByteEjh>
    2a0e:	f8 22       	and	r15, r24
    2a10:	21 96       	adiw	r28, 0x01	; 1
    2a12:	0c 15       	cp	r16, r12
    2a14:	1d 05       	cpc	r17, r13
    2a16:	a1 f7       	brne	.-24     	; 0x2a00 <_ZN9I2CEEPROM11UpdateBlockEjPhj+0x2a>
    2a18:	02 c0       	rjmp	.+4      	; 0x2a1e <_ZN9I2CEEPROM11UpdateBlockEjPhj+0x48>
    2a1a:	ff 24       	eor	r15, r15
    2a1c:	f3 94       	inc	r15
    2a1e:	8f 2d       	mov	r24, r15
    2a20:	df 91       	pop	r29
    2a22:	cf 91       	pop	r28
    2a24:	1f 91       	pop	r17
    2a26:	0f 91       	pop	r16
    2a28:	ff 90       	pop	r15
    2a2a:	df 90       	pop	r13
    2a2c:	cf 90       	pop	r12
    2a2e:	bf 90       	pop	r11
    2a30:	af 90       	pop	r10
    2a32:	08 95       	ret

00002a34 <_ZL13updateProgMemh>:
    2a34:	60 91 76 04 	lds	r22, 0x0476	; 0x800476 <_ZL6idxSel>
    2a38:	66 23       	and	r22, r22
    2a3a:	d9 f0       	breq	.+54     	; 0x2a72 <_ZL13updateProgMemh+0x3e>
    2a3c:	70 e0       	ldi	r23, 0x00	; 0
    2a3e:	61 50       	subi	r22, 0x01	; 1
    2a40:	71 09       	sbc	r23, r1
    2a42:	66 0f       	add	r22, r22
    2a44:	77 1f       	adc	r23, r23
    2a46:	66 0f       	add	r22, r22
    2a48:	77 1f       	adc	r23, r23
    2a4a:	66 0f       	add	r22, r22
    2a4c:	77 1f       	adc	r23, r23
    2a4e:	e8 2f       	mov	r30, r24
    2a50:	f0 e0       	ldi	r31, 0x00	; 0
    2a52:	ee 0f       	add	r30, r30
    2a54:	ff 1f       	adc	r31, r31
    2a56:	e9 5e       	subi	r30, 0xE9	; 233
    2a58:	fb 4f       	sbci	r31, 0xFB	; 251
    2a5a:	80 81       	ld	r24, Z
    2a5c:	91 81       	ldd	r25, Z+1	; 0x01
    2a5e:	68 0f       	add	r22, r24
    2a60:	79 1f       	adc	r23, r25
    2a62:	28 e0       	ldi	r18, 0x08	; 8
    2a64:	30 e0       	ldi	r19, 0x00	; 0
    2a66:	4b e6       	ldi	r20, 0x6B	; 107
    2a68:	54 e0       	ldi	r21, 0x04	; 4
    2a6a:	86 e8       	ldi	r24, 0x86	; 134
    2a6c:	94 e0       	ldi	r25, 0x04	; 4
    2a6e:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <_ZN9I2CEEPROM11UpdateBlockEjPhj>
    2a72:	08 95       	ret

00002a74 <_ZL10deleteProgv>:
    2a74:	cf 93       	push	r28
    2a76:	df 93       	push	r29
    2a78:	d0 91 76 04 	lds	r29, 0x0476	; 0x800476 <_ZL6idxSel>
    2a7c:	e6 e5       	ldi	r30, 0x56	; 86
    2a7e:	f4 e0       	ldi	r31, 0x04	; 4
    2a80:	8b e6       	ldi	r24, 0x6B	; 107
    2a82:	94 e0       	ldi	r25, 0x04	; 4
    2a84:	11 92       	st	Z+, r1
    2a86:	8e 17       	cp	r24, r30
    2a88:	9f 07       	cpc	r25, r31
    2a8a:	e1 f7       	brne	.-8      	; 0x2a84 <_ZL10deleteProgv+0x10>
    2a8c:	c5 e1       	ldi	r28, 0x15	; 21
    2a8e:	c0 93 78 04 	sts	0x0478, r28	; 0x800478 <_ZL6gpVar1>
    2a92:	10 92 55 04 	sts	0x0455, r1	; 0x800455 <_ZL13checkPointSel>
    2a96:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <_ZL6idxSel>
    2a9a:	48 e0       	ldi	r20, 0x08	; 8
    2a9c:	6a eb       	ldi	r22, 0xBA	; 186
    2a9e:	73 e0       	ldi	r23, 0x03	; 3
    2aa0:	8b e6       	ldi	r24, 0x6B	; 107
    2aa2:	94 e0       	ldi	r25, 0x04	; 4
    2aa4:	0e 94 09 02 	call	0x412	; 0x412 <_ZL6arrcpyPhPKhh>
    2aa8:	10 92 75 04 	sts	0x0475, r1	; 0x800475 <_ZL7idxStop>
    2aac:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
    2ab0:	c6 9f       	mul	r28, r22
    2ab2:	b0 01       	movw	r22, r0
    2ab4:	11 24       	eor	r1, r1
    2ab6:	6b 59       	subi	r22, 0x9B	; 155
    2ab8:	7f 4f       	sbci	r23, 0xFF	; 255
    2aba:	45 e1       	ldi	r20, 0x15	; 21
    2abc:	50 e0       	ldi	r21, 0x00	; 0
    2abe:	86 e5       	ldi	r24, 0x56	; 86
    2ac0:	94 e0       	ldi	r25, 0x04	; 4
    2ac2:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
    2ac6:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	60 91 55 04 	lds	r22, 0x0455	; 0x800455 <_ZL13checkPointSel>
    2ad0:	89 5c       	subi	r24, 0xC9	; 201
    2ad2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ad4:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
    2ad8:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <_ZL7progInv>
    2adc:	0e 94 b9 02 	call	0x572	; 0x572 <_ZL14updateStartIdxv>
    2ae0:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    2ae4:	90 e0       	ldi	r25, 0x00	; 0
    2ae6:	60 91 75 04 	lds	r22, 0x0475	; 0x800475 <_ZL7idxStop>
    2aea:	8f 5b       	subi	r24, 0xBF	; 191
    2aec:	9e 4f       	sbci	r25, 0xFE	; 254
    2aee:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
    2af2:	81 e0       	ldi	r24, 0x01	; 1
    2af4:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
    2af8:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    2afc:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
    2b00:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    2b04:	8f 5f       	subi	r24, 0xFF	; 255
    2b06:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
    2b0a:	85 36       	cpi	r24, 0x65	; 101
    2b0c:	a8 f3       	brcs	.-22     	; 0x2af8 <_ZL10deleteProgv+0x84>
    2b0e:	d0 93 76 04 	sts	0x0476, r29	; 0x800476 <_ZL6idxSel>
    2b12:	df 91       	pop	r29
    2b14:	cf 91       	pop	r28
    2b16:	08 95       	ret

00002b18 <_ZN9I2CEEPROM5CheckEv>:
bool I2CEEPROM::Check(){
    2b18:	1f 93       	push	r17
    2b1a:	cf 93       	push	r28
    2b1c:	df 93       	push	r29
    2b1e:	ec 01       	movw	r28, r24
	bool ack=0;
	ack = _i2ceeprom_iic->Start(_i2ceeprom_i2caddress|0);
    2b20:	8b 81       	ldd	r24, Y+3	; 0x03
    2b22:	9c 81       	ldd	r25, Y+4	; 0x04
    2b24:	dc 01       	movw	r26, r24
    2b26:	ed 91       	ld	r30, X+
    2b28:	fc 91       	ld	r31, X
    2b2a:	02 80       	ldd	r0, Z+2	; 0x02
    2b2c:	f3 81       	ldd	r31, Z+3	; 0x03
    2b2e:	e0 2d       	mov	r30, r0
    2b30:	6a 81       	ldd	r22, Y+2	; 0x02
    2b32:	09 95       	icall
    2b34:	18 2f       	mov	r17, r24
	_i2ceeprom_iic->Stop();
    2b36:	8b 81       	ldd	r24, Y+3	; 0x03
    2b38:	9c 81       	ldd	r25, Y+4	; 0x04
    2b3a:	dc 01       	movw	r26, r24
    2b3c:	ed 91       	ld	r30, X+
    2b3e:	fc 91       	ld	r31, X
    2b40:	00 84       	ldd	r0, Z+8	; 0x08
    2b42:	f1 85       	ldd	r31, Z+9	; 0x09
    2b44:	e0 2d       	mov	r30, r0
    2b46:	09 95       	icall
	return ack;
}
    2b48:	81 2f       	mov	r24, r17
    2b4a:	df 91       	pop	r29
    2b4c:	cf 91       	pop	r28
    2b4e:	1f 91       	pop	r17
    2b50:	08 95       	ret

00002b52 <__vector_10>:
#include "hI2C.h"
#include "I2CEEPROM.h"
#include "SysConfig.h"

volatile uint8_t tbase = 0;
ISR(TIMER0_COMP_vect){
    2b52:	1f 92       	push	r1
    2b54:	0f 92       	push	r0
    2b56:	0f b6       	in	r0, 0x3f	; 63
    2b58:	0f 92       	push	r0
    2b5a:	11 24       	eor	r1, r1
    2b5c:	8f 93       	push	r24
	tbase++;
    2b5e:	80 91 1f 05 	lds	r24, 0x051F	; 0x80051f <tbase>
    2b62:	8f 5f       	subi	r24, 0xFF	; 255
    2b64:	80 93 1f 05 	sts	0x051F, r24	; 0x80051f <tbase>
}
    2b68:	8f 91       	pop	r24
    2b6a:	0f 90       	pop	r0
    2b6c:	0f be       	out	0x3f, r0	; 63
    2b6e:	0f 90       	pop	r0
    2b70:	1f 90       	pop	r1
    2b72:	18 95       	reti

00002b74 <main>:
static void Sampling(void);
static void Buttons(void);
static void Interface(void);
static void Storage(void);

int main(void){
    2b74:	cf 93       	push	r28
    2b76:	df 93       	push	r29
    2b78:	00 d0       	rcall	.+0      	; 0x2b7a <main+0x6>
    2b7a:	00 d0       	rcall	.+0      	; 0x2b7c <main+0x8>
    2b7c:	1f 92       	push	r1
    2b7e:	cd b7       	in	r28, 0x3d	; 61
    2b80:	de b7       	in	r29, 0x3e	; 62
	//Init
	SLED(1);
    2b82:	97 9a       	sbi	0x12, 7	; 18
	SysInit();
    2b84:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <_ZL7SysInitv>

#define hI2C_SPEED_HIGH		1
#define hI2C_SPEED_NORMAL	0

void hI2C::Init(bool Speed){
	TWBR = (F_CPU / (Speed?400000UL:100000UL) - 16) / 2 ;
    2b88:	8c e0       	ldi	r24, 0x0C	; 12
    2b8a:	80 b9       	out	0x00, r24	; 0
	TWSR = 0;
    2b8c:	11 b8       	out	0x01, r1	; 1
	I2C.Init(hI2C_SPEED_HIGH);
	TimerInit(TIMERPRESC_64,25);
    2b8e:	69 e1       	ldi	r22, 0x19	; 25
    2b90:	83 e0       	ldi	r24, 0x03	; 3
    2b92:	0e 94 91 13 	call	0x2722	; 0x2722 <_Z9TimerInithh>
	Motor.Init();
    2b96:	86 ea       	ldi	r24, 0xA6	; 166
    2b98:	94 e0       	ldi	r25, 0x04	; 4
    2b9a:	0e 94 45 04 	call	0x88a	; 0x88a <_ZN8MotorLib4InitEv>
	Sens.Init(SENSPRESC_128);
    2b9e:	67 e0       	ldi	r22, 0x07	; 7
    2ba0:	8a ea       	ldi	r24, 0xAA	; 170
    2ba2:	94 e0       	ldi	r25, 0x04	; 4
    2ba4:	0e 94 60 07 	call	0xec0	; 0xec0 <_ZN13SensorLibGEAR4InitEh>
	LCD.Init();
    2ba8:	89 e0       	ldi	r24, 0x09	; 9
    2baa:	95 e0       	ldi	r25, 0x05	; 5
    2bac:	0e 94 ce 05 	call	0xb9c	; 0xb9c <_ZN4PLCD4InitEv>
	LCD.GraphInit();
    2bb0:	89 e0       	ldi	r24, 0x09	; 9
    2bb2:	95 e0       	ldi	r25, 0x05	; 5
    2bb4:	0e 94 2a 07 	call	0xe54	; 0xe54 <_ZN4PLCD9GraphInitEv>
	BCKLT(1);
    2bb8:	92 98       	cbi	0x12, 2	; 18
    2bba:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <NVM>
    2bbe:	90 91 87 04 	lds	r25, 0x0487	; 0x800487 <NVM+0x1>
    2bc2:	e7 e1       	ldi	r30, 0x17	; 23
    2bc4:	f4 e0       	ldi	r31, 0x04	; 4
    2bc6:	4b e2       	ldi	r20, 0x2B	; 43
    2bc8:	54 e0       	ldi	r21, 0x04	; 4
    2bca:	9c 01       	movw	r18, r24
	//Allocate
	for(uint8_t i = 0;i < 10;i ++){
		progMem_eep[i] = NVM.AllocBlock(8*100);
    2bcc:	21 93       	st	Z+, r18
    2bce:	31 93       	st	Z+, r19
    2bd0:	20 5e       	subi	r18, 0xE0	; 224
    2bd2:	3c 4f       	sbci	r19, 0xFC	; 252
	Sens.Init(SENSPRESC_128);
	LCD.Init();
	LCD.GraphInit();
	BCKLT(1);
	//Allocate
	for(uint8_t i = 0;i < 10;i ++){
    2bd4:	e4 17       	cp	r30, r20
    2bd6:	f5 07       	cpc	r31, r21
    2bd8:	c9 f7       	brne	.-14     	; 0x2bcc <main+0x58>
    2bda:	80 5c       	subi	r24, 0xC0	; 192
    2bdc:	90 4e       	sbci	r25, 0xE0	; 224
    2bde:	90 93 87 04 	sts	0x0487, r25	; 0x800487 <NVM+0x1>
    2be2:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <NVM>
		progMem_eep[i] = NVM.AllocBlock(8*100);
	}
	if(!NVM.Check()){
    2be6:	86 e8       	ldi	r24, 0x86	; 134
    2be8:	94 e0       	ldi	r25, 0x04	; 4
    2bea:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <_ZN9I2CEEPROM5CheckEv>
    2bee:	89 83       	std	Y+1, r24	; 0x01
    2bf0:	81 11       	cpse	r24, r1
    2bf2:	0d c0       	rjmp	.+26     	; 0x2c0e <main+0x9a>
		LCD.Cursor(2,0);
    2bf4:	40 e0       	ldi	r20, 0x00	; 0
    2bf6:	62 e0       	ldi	r22, 0x02	; 2
    2bf8:	89 e0       	ldi	r24, 0x09	; 9
    2bfa:	95 e0       	ldi	r25, 0x05	; 5
    2bfc:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("EEPROM error");
    2c00:	6b e6       	ldi	r22, 0x6B	; 107
    2c02:	70 e0       	ldi	r23, 0x00	; 0
    2c04:	89 e0       	ldi	r24, 0x09	; 9
    2c06:	95 e0       	ldi	r25, 0x05	; 5
    2c08:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    2c0c:	ff cf       	rjmp	.-2      	; 0x2c0c <main+0x98>
		while(1);
	}
	//Reset Menu
	BTNCOM(0);BTNCOM(0);
    2c0e:	c6 98       	cbi	0x18, 6	; 24
    2c10:	be 9a       	sbi	0x17, 6	; 23
    2c12:	ab 9a       	sbi	0x15, 3	; 21
    2c14:	a3 98       	cbi	0x14, 3	; 20
    2c16:	c6 98       	cbi	0x18, 6	; 24
    2c18:	be 9a       	sbi	0x17, 6	; 23
    2c1a:	ab 9a       	sbi	0x15, 3	; 21
    2c1c:	a3 98       	cbi	0x14, 3	; 20
	pb[0] = BTN1;
    2c1e:	93 b3       	in	r25, 0x13	; 19
    2c20:	eb e7       	ldi	r30, 0x7B	; 123
    2c22:	f4 e0       	ldi	r31, 0x04	; 4
    2c24:	81 e0       	ldi	r24, 0x01	; 1
    2c26:	95 fb       	bst	r25, 5
    2c28:	99 27       	eor	r25, r25
    2c2a:	90 f9       	bld	r25, 0
    2c2c:	98 27       	eor	r25, r24
    2c2e:	90 83       	st	Z, r25
	pb[1] = BTN2;
    2c30:	93 b3       	in	r25, 0x13	; 19
    2c32:	92 fb       	bst	r25, 2
    2c34:	99 27       	eor	r25, r25
    2c36:	90 f9       	bld	r25, 0
    2c38:	98 27       	eor	r25, r24
    2c3a:	91 83       	std	Z+1, r25	; 0x01
	pb[2] = BTN3;
    2c3c:	93 b3       	in	r25, 0x13	; 19
    2c3e:	92 95       	swap	r25
    2c40:	91 70       	andi	r25, 0x01	; 1
    2c42:	89 27       	eor	r24, r25
    2c44:	82 83       	std	Z+2, r24	; 0x02
	BTNCOM(1);BTNCOM(1);
    2c46:	c6 9a       	sbi	0x18, 6	; 24
    2c48:	be 98       	cbi	0x17, 6	; 23
    2c4a:	ab 98       	cbi	0x15, 3	; 21
    2c4c:	a3 9a       	sbi	0x14, 3	; 20
    2c4e:	c6 9a       	sbi	0x18, 6	; 24
    2c50:	be 98       	cbi	0x17, 6	; 23
    2c52:	ab 98       	cbi	0x15, 3	; 21
    2c54:	a3 9a       	sbi	0x14, 3	; 20
	pb[3] = BTN4;
    2c56:	93 b3       	in	r25, 0x13	; 19
    2c58:	81 e0       	ldi	r24, 0x01	; 1
    2c5a:	09 2f       	mov	r16, r25
    2c5c:	00 71       	andi	r16, 0x10	; 16
    2c5e:	94 fd       	sbrc	r25, 4
    2c60:	80 e0       	ldi	r24, 0x00	; 0
    2c62:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <_ZL2pb+0x3>
	pb[4] = BTN5;
    2c66:	83 b3       	in	r24, 0x13	; 19
    2c68:	91 e0       	ldi	r25, 0x01	; 1
    2c6a:	82 fb       	bst	r24, 2
    2c6c:	88 27       	eor	r24, r24
    2c6e:	80 f9       	bld	r24, 0
    2c70:	89 27       	eor	r24, r25
    2c72:	80 93 7f 04 	sts	0x047F, r24	; 0x80047f <_ZL2pb+0x4>
	pb[5] = BTN6;
    2c76:	83 b3       	in	r24, 0x13	; 19
    2c78:	85 fb       	bst	r24, 5
    2c7a:	88 27       	eor	r24, r24
    2c7c:	80 f9       	bld	r24, 0
    2c7e:	98 27       	eor	r25, r24
    2c80:	90 93 80 04 	sts	0x0480, r25	; 0x800480 <_ZL2pb+0x5>
	bool first_reset = (eeprom_read_byte(&first_reset_eep) != 1);
    2c84:	8c e1       	ldi	r24, 0x1C	; 28
    2c86:	90 e0       	ldi	r25, 0x00	; 0
    2c88:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    2c8c:	18 2f       	mov	r17, r24
	if((pb[2] && pb[3]) || first_reset){
    2c8e:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    2c92:	88 23       	and	r24, r24
    2c94:	11 f0       	breq	.+4      	; 0x2c9a <main+0x126>
    2c96:	00 23       	and	r16, r16
    2c98:	19 f0       	breq	.+6      	; 0x2ca0 <main+0x12c>
    2c9a:	11 30       	cpi	r17, 0x01	; 1
    2c9c:	09 f4       	brne	.+2      	; 0x2ca0 <main+0x12c>
    2c9e:	3b c2       	rjmp	.+1142   	; 0x3116 <main+0x5a2>
		LCD.Cursor(2,0);
    2ca0:	40 e0       	ldi	r20, 0x00	; 0
    2ca2:	62 e0       	ldi	r22, 0x02	; 2
    2ca4:	89 e0       	ldi	r24, 0x09	; 9
    2ca6:	95 e0       	ldi	r25, 0x05	; 5
    2ca8:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr(" Reset Menu ");
    2cac:	68 e7       	ldi	r22, 0x78	; 120
    2cae:	70 e0       	ldi	r23, 0x00	; 0
    2cb0:	89 e0       	ldi	r24, 0x09	; 9
    2cb2:	95 e0       	ldi	r25, 0x05	; 5
    2cb4:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2cb8:	2f ef       	ldi	r18, 0xFF	; 255
    2cba:	33 ed       	ldi	r19, 0xD3	; 211
    2cbc:	40 e3       	ldi	r20, 0x30	; 48
    2cbe:	21 50       	subi	r18, 0x01	; 1
    2cc0:	30 40       	sbci	r19, 0x00	; 0
    2cc2:	40 40       	sbci	r20, 0x00	; 0
    2cc4:	e1 f7       	brne	.-8      	; 0x2cbe <main+0x14a>
    2cc6:	00 c0       	rjmp	.+0      	; 0x2cc8 <main+0x154>
    2cc8:	00 00       	nop
		_delay_ms(1000);
		while(BTN3 | BTN4);
    2cca:	21 e0       	ldi	r18, 0x01	; 1
    2ccc:	93 b3       	in	r25, 0x13	; 19
    2cce:	83 b3       	in	r24, 0x13	; 19
    2cd0:	92 95       	swap	r25
    2cd2:	91 70       	andi	r25, 0x01	; 1
    2cd4:	92 13       	cpse	r25, r18
    2cd6:	fa cf       	rjmp	.-12     	; 0x2ccc <main+0x158>
    2cd8:	82 95       	swap	r24
    2cda:	81 70       	andi	r24, 0x01	; 1
    2cdc:	82 13       	cpse	r24, r18
    2cde:	f6 cf       	rjmp	.-20     	; 0x2ccc <main+0x158>
		LCD.Clear();
    2ce0:	89 e0       	ldi	r24, 0x09	; 9
    2ce2:	95 e0       	ldi	r25, 0x05	; 5
    2ce4:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
		uint8_t reset_mode=1;
		bool reset_enter=0;
		bool reset_abort=0;
		if(first_reset){reset_mode=4;}
    2ce8:	11 30       	cpi	r17, 0x01	; 1
    2cea:	19 f0       	breq	.+6      	; 0x2cf2 <main+0x17e>
    2cec:	54 e0       	ldi	r21, 0x04	; 4
    2cee:	5a 83       	std	Y+2, r21	; 0x02
    2cf0:	02 c0       	rjmp	.+4      	; 0x2cf6 <main+0x182>
		LCD.Cursor(2,0);
		LCD.WriteStr(" Reset Menu ");
		_delay_ms(1000);
		while(BTN3 | BTN4);
		LCD.Clear();
		uint8_t reset_mode=1;
    2cf2:	61 e0       	ldi	r22, 0x01	; 1
    2cf4:	6a 83       	std	Y+2, r22	; 0x02
    2cf6:	e1 2c       	mov	r14, r1
					reset_mode--;
				goto reset_prg;}
				BTNCOM(1);_delay_us(10);
				if(BTN4){
					if(reset_mode>0){reset_enter=1;}
					else{reset_abort=1;}
    2cf8:	ff 24       	eor	r15, r15
    2cfa:	f3 94       	inc	r15
    2cfc:	01 c0       	rjmp	.+2      	; 0x2d00 <main+0x18c>
		LCD.Cursor(2,0);
		LCD.WriteStr(" Reset Menu ");
		_delay_ms(1000);
		while(BTN3 | BTN4);
		LCD.Clear();
		uint8_t reset_mode=1;
    2cfe:	1a 83       	std	Y+2, r17	; 0x02
		bool reset_enter=0;
		bool reset_abort=0;
		if(first_reset){reset_mode=4;}
		reset_prg:
		LCD.Clear();
    2d00:	89 e0       	ldi	r24, 0x09	; 9
    2d02:	95 e0       	ldi	r25, 0x05	; 5
    2d04:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
		LCD.Cursor(3,1);
    2d08:	41 e0       	ldi	r20, 0x01	; 1
    2d0a:	63 e0       	ldi	r22, 0x03	; 3
    2d0c:	89 e0       	ldi	r24, 0x09	; 9
    2d0e:	95 e0       	ldi	r25, 0x05	; 5
    2d10:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("Reset");
    2d14:	65 e8       	ldi	r22, 0x85	; 133
    2d16:	70 e0       	ldi	r23, 0x00	; 0
    2d18:	89 e0       	ldi	r24, 0x09	; 9
    2d1a:	95 e0       	ldi	r25, 0x05	; 5
    2d1c:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
		if(reset_mode>=1&&reset_mode<=4){
    2d20:	1a 81       	ldd	r17, Y+2	; 0x02
    2d22:	11 50       	subi	r17, 0x01	; 1
    2d24:	14 30       	cpi	r17, 0x04	; 4
    2d26:	60 f4       	brcc	.+24     	; 0x2d40 <main+0x1cc>
			LCD.Cursor(4,0);
    2d28:	40 e0       	ldi	r20, 0x00	; 0
    2d2a:	64 e0       	ldi	r22, 0x04	; 4
    2d2c:	89 e0       	ldi	r24, 0x09	; 9
    2d2e:	95 e0       	ldi	r25, 0x05	; 5
    2d30:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("N      Y");}
    2d34:	6b e8       	ldi	r22, 0x8B	; 139
    2d36:	70 e0       	ldi	r23, 0x00	; 0
    2d38:	89 e0       	ldi	r24, 0x09	; 9
    2d3a:	95 e0       	ldi	r25, 0x05	; 5
    2d3c:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
		if(reset_mode==1){
    2d40:	8a 81       	ldd	r24, Y+2	; 0x02
    2d42:	81 30       	cpi	r24, 0x01	; 1
    2d44:	69 f4       	brne	.+26     	; 0x2d60 <main+0x1ec>
			LCD.Cursor(9,1);
    2d46:	41 e0       	ldi	r20, 0x01	; 1
    2d48:	69 e0       	ldi	r22, 0x09	; 9
    2d4a:	89 e0       	ldi	r24, 0x09	; 9
    2d4c:	95 e0       	ldi	r25, 0x05	; 5
    2d4e:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("Conf?");}
    2d52:	64 e9       	ldi	r22, 0x94	; 148
    2d54:	70 e0       	ldi	r23, 0x00	; 0
    2d56:	89 e0       	ldi	r24, 0x09	; 9
    2d58:	95 e0       	ldi	r25, 0x05	; 5
    2d5a:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    2d5e:	2f c0       	rjmp	.+94     	; 0x2dbe <main+0x24a>
		else if(reset_mode==2){
    2d60:	9a 81       	ldd	r25, Y+2	; 0x02
    2d62:	92 30       	cpi	r25, 0x02	; 2
    2d64:	69 f4       	brne	.+26     	; 0x2d80 <main+0x20c>
			LCD.Cursor(9,1);
    2d66:	41 e0       	ldi	r20, 0x01	; 1
    2d68:	69 e0       	ldi	r22, 0x09	; 9
    2d6a:	89 e0       	ldi	r24, 0x09	; 9
    2d6c:	95 e0       	ldi	r25, 0x05	; 5
    2d6e:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("PD?  ");}
    2d72:	6a e9       	ldi	r22, 0x9A	; 154
    2d74:	70 e0       	ldi	r23, 0x00	; 0
    2d76:	89 e0       	ldi	r24, 0x09	; 9
    2d78:	95 e0       	ldi	r25, 0x05	; 5
    2d7a:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    2d7e:	1f c0       	rjmp	.+62     	; 0x2dbe <main+0x24a>
		else if(reset_mode==3){
    2d80:	ea 81       	ldd	r30, Y+2	; 0x02
    2d82:	e3 30       	cpi	r30, 0x03	; 3
    2d84:	69 f4       	brne	.+26     	; 0x2da0 <main+0x22c>
			LCD.Cursor(9,1);
    2d86:	41 e0       	ldi	r20, 0x01	; 1
    2d88:	69 e0       	ldi	r22, 0x09	; 9
    2d8a:	89 e0       	ldi	r24, 0x09	; 9
    2d8c:	95 e0       	ldi	r25, 0x05	; 5
    2d8e:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("Prog?");}
    2d92:	60 ea       	ldi	r22, 0xA0	; 160
    2d94:	70 e0       	ldi	r23, 0x00	; 0
    2d96:	89 e0       	ldi	r24, 0x09	; 9
    2d98:	95 e0       	ldi	r25, 0x05	; 5
    2d9a:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    2d9e:	0f c0       	rjmp	.+30     	; 0x2dbe <main+0x24a>
		else if(reset_mode==4){
    2da0:	fa 81       	ldd	r31, Y+2	; 0x02
    2da2:	f4 30       	cpi	r31, 0x04	; 4
    2da4:	61 f4       	brne	.+24     	; 0x2dbe <main+0x24a>
			LCD.Cursor(9,1);
    2da6:	41 e0       	ldi	r20, 0x01	; 1
    2da8:	69 e0       	ldi	r22, 0x09	; 9
    2daa:	89 e0       	ldi	r24, 0x09	; 9
    2dac:	95 e0       	ldi	r25, 0x05	; 5
    2dae:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
		LCD.WriteStr("All? ");}
    2db2:	66 ea       	ldi	r22, 0xA6	; 166
    2db4:	70 e0       	ldi	r23, 0x00	; 0
    2db6:	89 e0       	ldi	r24, 0x09	; 9
    2db8:	95 e0       	ldi	r25, 0x05	; 5
    2dba:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    2dbe:	01 e0       	ldi	r16, 0x01	; 1
    2dc0:	2a 81       	ldd	r18, Y+2	; 0x02
    2dc2:	21 11       	cpse	r18, r1
    2dc4:	01 c0       	rjmp	.+2      	; 0x2dc8 <main+0x254>
    2dc6:	00 e0       	ldi	r16, 0x00	; 0
					reset_mode--;
				goto reset_prg;}
				BTNCOM(1);_delay_us(10);
				if(BTN4){
					if(reset_mode>0){reset_enter=1;}
					else{reset_abort=1;}
    2dc8:	80 e0       	ldi	r24, 0x00	; 0
    2dca:	d0 2e       	mov	r13, r16
    2dcc:	1f c0       	rjmp	.+62     	; 0x2e0c <main+0x298>
		LCD.WriteStr("Prog?");}
		else if(reset_mode==4){
			LCD.Cursor(9,1);
		LCD.WriteStr("All? ");}
		reset_confirm:
		if(reset_enter){
    2dce:	00 23       	and	r16, r16
    2dd0:	e1 f0       	breq	.+56     	; 0x2e0a <main+0x296>
			LCD.Clear();
    2dd2:	89 e0       	ldi	r24, 0x09	; 9
    2dd4:	95 e0       	ldi	r25, 0x05	; 5
    2dd6:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
			LCD.Cursor(4,0);
    2dda:	40 e0       	ldi	r20, 0x00	; 0
    2ddc:	64 e0       	ldi	r22, 0x04	; 4
    2dde:	89 e0       	ldi	r24, 0x09	; 9
    2de0:	95 e0       	ldi	r25, 0x05	; 5
    2de2:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
			LCD.WriteStr("N      Y");
    2de6:	6b e8       	ldi	r22, 0x8B	; 139
    2de8:	70 e0       	ldi	r23, 0x00	; 0
    2dea:	89 e0       	ldi	r24, 0x09	; 9
    2dec:	95 e0       	ldi	r25, 0x05	; 5
    2dee:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
			LCD.Cursor(4,1);
    2df2:	4f 2d       	mov	r20, r15
    2df4:	64 e0       	ldi	r22, 0x04	; 4
    2df6:	89 e0       	ldi	r24, 0x09	; 9
    2df8:	95 e0       	ldi	r25, 0x05	; 5
    2dfa:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
			LCD.WriteStr("CONFIRM");
    2dfe:	6c ea       	ldi	r22, 0xAC	; 172
    2e00:	70 e0       	ldi	r23, 0x00	; 0
    2e02:	89 e0       	ldi	r24, 0x09	; 9
    2e04:	95 e0       	ldi	r25, 0x05	; 5
    2e06:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					reset_mode--;
				goto reset_prg;}
				BTNCOM(1);_delay_us(10);
				if(BTN4){
					if(reset_mode>0){reset_enter=1;}
					else{reset_abort=1;}
    2e0a:	8d 2d       	mov	r24, r13
			LCD.Cursor(4,0);
			LCD.WriteStr("N      Y");
			LCD.Cursor(4,1);
			LCD.WriteStr("CONFIRM");
		}
		while(BTN3||BTN4||BTN5||BTN6);
    2e0c:	9c 9b       	sbis	0x13, 4	; 19
    2e0e:	fe cf       	rjmp	.-4      	; 0x2e0c <main+0x298>
    2e10:	9c 9b       	sbis	0x13, 4	; 19
    2e12:	fc cf       	rjmp	.-8      	; 0x2e0c <main+0x298>
    2e14:	9a 9b       	sbis	0x13, 2	; 19
    2e16:	fa cf       	rjmp	.-12     	; 0x2e0c <main+0x298>
    2e18:	9d 9b       	sbis	0x13, 5	; 19
    2e1a:	f8 cf       	rjmp	.-16     	; 0x2e0c <main+0x298>
    2e1c:	3f ef       	ldi	r19, 0xFF	; 255
    2e1e:	49 ef       	ldi	r20, 0xF9	; 249
    2e20:	50 e0       	ldi	r21, 0x00	; 0
    2e22:	31 50       	subi	r19, 0x01	; 1
    2e24:	40 40       	sbci	r20, 0x00	; 0
    2e26:	50 40       	sbci	r21, 0x00	; 0
    2e28:	e1 f7       	brne	.-8      	; 0x2e22 <main+0x2ae>
    2e2a:	00 c0       	rjmp	.+0      	; 0x2e2c <main+0x2b8>
    2e2c:	00 00       	nop
		_delay_ms(20);
		while(1){
			if(!reset_enter){
    2e2e:	81 11       	cpse	r24, r1
    2e30:	1e c0       	rjmp	.+60     	; 0x2e6e <main+0x2fa>
				BTNCOM(0);_delay_us(10);
    2e32:	c6 98       	cbi	0x18, 6	; 24
    2e34:	be 9a       	sbi	0x17, 6	; 23
    2e36:	ab 9a       	sbi	0x15, 3	; 21
    2e38:	a3 98       	cbi	0x14, 3	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2e3a:	65 e3       	ldi	r22, 0x35	; 53
    2e3c:	6a 95       	dec	r22
    2e3e:	f1 f7       	brne	.-4      	; 0x2e3c <main+0x2c8>
    2e40:	00 00       	nop
				if(BTN2&&reset_mode<4){
    2e42:	9a 9b       	sbis	0x13, 2	; 19
    2e44:	02 c0       	rjmp	.+4      	; 0x2e4a <main+0x2d6>
    2e46:	0c 94 fb 36 	jmp	0x6df6	; 0x6df6 <main+0x4282>
    2e4a:	7a 81       	ldd	r23, Y+2	; 0x02
    2e4c:	74 30       	cpi	r23, 0x04	; 4
    2e4e:	10 f0       	brcs	.+4      	; 0x2e54 <main+0x2e0>
    2e50:	0c 94 fb 36 	jmp	0x6df6	; 0x6df6 <main+0x4282>
    2e54:	0c 94 f7 36 	jmp	0x6dee	; 0x6dee <main+0x427a>
					reset_mode++;
				goto reset_prg;}
				if(BTN1&&reset_mode>1){
    2e58:	9a 81       	ldd	r25, Y+2	; 0x02
    2e5a:	92 30       	cpi	r25, 0x02	; 2
    2e5c:	10 f4       	brcc	.+4      	; 0x2e62 <main+0x2ee>
    2e5e:	0c 94 ff 36 	jmp	0x6dfe	; 0x6dfe <main+0x428a>
    2e62:	4d cf       	rjmp	.-358    	; 0x2cfe <main+0x18a>
					reset_mode--;
				goto reset_prg;}
				BTNCOM(1);_delay_us(10);
				if(BTN4){
					if(reset_mode>0){reset_enter=1;}
    2e64:	ea 81       	ldd	r30, Y+2	; 0x02
    2e66:	e1 11       	cpse	r30, r1
    2e68:	b2 cf       	rjmp	.-156    	; 0x2dce <main+0x25a>
					else{reset_abort=1;}
    2e6a:	ef 2c       	mov	r14, r15
    2e6c:	b0 cf       	rjmp	.-160    	; 0x2dce <main+0x25a>
				goto reset_confirm;}
			}
			BTNCOM(0);_delay_us(10);
    2e6e:	c6 98       	cbi	0x18, 6	; 24
    2e70:	be 9a       	sbi	0x17, 6	; 23
    2e72:	ab 9a       	sbi	0x15, 3	; 21
    2e74:	a3 98       	cbi	0x14, 3	; 20
    2e76:	f5 e3       	ldi	r31, 0x35	; 53
    2e78:	fa 95       	dec	r31
    2e7a:	f1 f7       	brne	.-4      	; 0x2e78 <main+0x304>
    2e7c:	00 00       	nop
			if(BTN3||reset_abort){
    2e7e:	9c 9b       	sbis	0x13, 4	; 19
    2e80:	02 c0       	rjmp	.+4      	; 0x2e86 <main+0x312>
    2e82:	ee 20       	and	r14, r14
    2e84:	f1 f0       	breq	.+60     	; 0x2ec2 <main+0x34e>
				LCD.Clear();
    2e86:	89 e0       	ldi	r24, 0x09	; 9
    2e88:	95 e0       	ldi	r25, 0x05	; 5
    2e8a:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
				LCD.Cursor(5,0);
    2e8e:	40 e0       	ldi	r20, 0x00	; 0
    2e90:	65 e0       	ldi	r22, 0x05	; 5
    2e92:	89 e0       	ldi	r24, 0x09	; 9
    2e94:	95 e0       	ldi	r25, 0x05	; 5
    2e96:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
				LCD.WriteStr("CANCEL");
    2e9a:	64 eb       	ldi	r22, 0xB4	; 180
    2e9c:	70 e0       	ldi	r23, 0x00	; 0
    2e9e:	89 e0       	ldi	r24, 0x09	; 9
    2ea0:	95 e0       	ldi	r25, 0x05	; 5
    2ea2:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2ea6:	2f ef       	ldi	r18, 0xFF	; 255
    2ea8:	35 ea       	ldi	r19, 0xA5	; 165
    2eaa:	4e e0       	ldi	r20, 0x0E	; 14
    2eac:	21 50       	subi	r18, 0x01	; 1
    2eae:	30 40       	sbci	r19, 0x00	; 0
    2eb0:	40 40       	sbci	r20, 0x00	; 0
    2eb2:	e1 f7       	brne	.-8      	; 0x2eac <main+0x338>
    2eb4:	00 c0       	rjmp	.+0      	; 0x2eb6 <main+0x342>
    2eb6:	00 00       	nop
				_delay_ms(300);
				LCD.Clear();
    2eb8:	89 e0       	ldi	r24, 0x09	; 9
    2eba:	95 e0       	ldi	r25, 0x05	; 5
    2ebc:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
			break;}
    2ec0:	2a c1       	rjmp	.+596    	; 0x3116 <main+0x5a2>
			else if(reset_enter){
    2ec2:	88 23       	and	r24, r24
    2ec4:	09 f4       	brne	.+2      	; 0x2ec8 <main+0x354>
    2ec6:	b3 cf       	rjmp	.-154    	; 0x2e2e <main+0x2ba>
				BTNCOM(1);_delay_us(10);
    2ec8:	c6 9a       	sbi	0x18, 6	; 24
    2eca:	be 98       	cbi	0x17, 6	; 23
    2ecc:	ab 98       	cbi	0x15, 3	; 21
    2ece:	a3 9a       	sbi	0x14, 3	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2ed0:	55 e3       	ldi	r21, 0x35	; 53
    2ed2:	5a 95       	dec	r21
    2ed4:	f1 f7       	brne	.-4      	; 0x2ed2 <main+0x35e>
    2ed6:	00 00       	nop
				if(BTN4){
    2ed8:	9c 99       	sbic	0x13, 4	; 19
    2eda:	a9 cf       	rjmp	.-174    	; 0x2e2e <main+0x2ba>
					LCD.Clear();
    2edc:	89 e0       	ldi	r24, 0x09	; 9
    2ede:	95 e0       	ldi	r25, 0x05	; 5
    2ee0:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					LCD.Cursor(3,0);
    2ee4:	40 e0       	ldi	r20, 0x00	; 0
    2ee6:	63 e0       	ldi	r22, 0x03	; 3
    2ee8:	89 e0       	ldi	r24, 0x09	; 9
    2eea:	95 e0       	ldi	r25, 0x05	; 5
    2eec:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					LCD.WriteStr("Erasing...");
    2ef0:	6b eb       	ldi	r22, 0xBB	; 187
    2ef2:	70 e0       	ldi	r23, 0x00	; 0
    2ef4:	89 e0       	ldi	r24, 0x09	; 9
    2ef6:	95 e0       	ldi	r25, 0x05	; 5
    2ef8:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					if(reset_mode==1||reset_mode==4){
    2efc:	7a 81       	ldd	r23, Y+2	; 0x02
    2efe:	71 30       	cpi	r23, 0x01	; 1
    2f00:	21 f0       	breq	.+8      	; 0x2f0a <main+0x396>
    2f02:	74 30       	cpi	r23, 0x04	; 4
    2f04:	11 f0       	breq	.+4      	; 0x2f0a <main+0x396>
    2f06:	0c 94 0d 37 	jmp	0x6e1a	; 0x6e1a <main+0x42a6>
						//Config.
						scanPDM[0] = 10;
    2f0a:	ee e4       	ldi	r30, 0x4E	; 78
    2f0c:	f4 e0       	ldi	r31, 0x04	; 4
    2f0e:	9a e0       	ldi	r25, 0x0A	; 10
    2f10:	90 83       	st	Z, r25
						scanPDM[1] = 20;
    2f12:	84 e1       	ldi	r24, 0x14	; 20
    2f14:	81 83       	std	Z+1, r24	; 0x01
						scanPDM[2] = 0;
    2f16:	12 82       	std	Z+2, r1	; 0x02
						progSel = 0;
    2f18:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <_ZL7progSel>
						scanVel = 40;
    2f1c:	28 e2       	ldi	r18, 0x28	; 40
    2f1e:	20 93 4d 04 	sts	0x044D, r18	; 0x80044d <_ZL7scanVel>
						prescT = 20;
    2f22:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <_ZL6prescT>
						prescD = 10;
    2f26:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <_ZL6prescD>
						mtrOffsL = 100;
    2f2a:	94 e6       	ldi	r25, 0x64	; 100
    2f2c:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <_ZL8mtrOffsL>
						mtrOffsR = 100;
    2f30:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <_ZL8mtrOffsR>
						vVbatComp = 13;
    2f34:	9d e0       	ldi	r25, 0x0D	; 13
    2f36:	90 93 4a 04 	sts	0x044A, r25	; 0x80044a <_ZL9vVbatComp>
						runDly = 20;
    2f3a:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <_ZL6runDly>
						toutTime = 5;
    2f3e:	85 e0       	ldi	r24, 0x05	; 5
    2f40:	80 93 4b 04 	sts	0x044B, r24	; 0x80044b <_ZL8toutTime>
						brakeTime = 35;
    2f44:	83 e2       	ldi	r24, 0x23	; 35
    2f46:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <_ZL9brakeTime>
						useATC = 1;
    2f4a:	81 e0       	ldi	r24, 0x01	; 1
    2f4c:	80 93 ca 03 	sts	0x03CA, r24	; 0x8003ca <_ZL6useATC>
    2f50:	ea ec       	ldi	r30, 0xCA	; 202
    2f52:	f4 e0       	ldi	r31, 0x04	; 4
    2f54:	86 ee       	ldi	r24, 0xE6	; 230
    2f56:	94 e0       	ldi	r25, 0x04	; 4
						for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){Sens.SensOffs[gpVar2] = 0;}
    2f58:	11 92       	st	Z+, r1
    2f5a:	11 92       	st	Z+, r1
    2f5c:	8e 17       	cp	r24, r30
    2f5e:	9f 07       	cpc	r25, r31
    2f60:	d9 f7       	brne	.-10     	; 0x2f58 <main+0x3e4>
    2f62:	8e e0       	ldi	r24, 0x0E	; 14
    2f64:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <_ZL6gpVar2>
						updateConfMem();
    2f68:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
						updateSensOffs();
    2f6c:	0e 94 78 02 	call	0x4f0	; 0x4f0 <_ZL14updateSensOffsv>
						eeprom_update_word(&sensLLo_eep, 400);
    2f70:	60 e9       	ldi	r22, 0x90	; 144
    2f72:	71 e0       	ldi	r23, 0x01	; 1
    2f74:	80 e2       	ldi	r24, 0x20	; 32
    2f76:	90 e0       	ldi	r25, 0x00	; 0
    2f78:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
						eeprom_update_word(&sensLHi_eep, 180);
    2f7c:	64 eb       	ldi	r22, 0xB4	; 180
    2f7e:	70 e0       	ldi	r23, 0x00	; 0
    2f80:	8e e1       	ldi	r24, 0x1E	; 30
    2f82:	90 e0       	ldi	r25, 0x00	; 0
    2f84:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
						eeprom_update_word(&sensLo_eep, 1023);
    2f88:	6f ef       	ldi	r22, 0xFF	; 255
    2f8a:	73 e0       	ldi	r23, 0x03	; 3
    2f8c:	82 e2       	ldi	r24, 0x22	; 34
    2f8e:	90 e0       	ldi	r25, 0x00	; 0
    2f90:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
						eeprom_update_word(&sensHi_eep, 0);
    2f94:	60 e0       	ldi	r22, 0x00	; 0
    2f96:	70 e0       	ldi	r23, 0x00	; 0
    2f98:	84 e2       	ldi	r24, 0x24	; 36
    2f9a:	90 e0       	ldi	r25, 0x00	; 0
    2f9c:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
					}
					if(reset_mode==2||reset_mode==4){
    2fa0:	4a 81       	ldd	r20, Y+2	; 0x02
    2fa2:	42 30       	cpi	r20, 0x02	; 2
    2fa4:	11 f4       	brne	.+4      	; 0x2faa <main+0x436>
    2fa6:	0c 94 14 37 	jmp	0x6e28	; 0x6e28 <main+0x42b4>
    2faa:	44 30       	cpi	r20, 0x04	; 4
    2fac:	09 f0       	breq	.+2      	; 0x2fb0 <main+0x43c>
    2fae:	5e c0       	rjmp	.+188    	; 0x306c <main+0x4f8>
						//PID
						PDMnow[0] = 3;
    2fb0:	01 e5       	ldi	r16, 0x51	; 81
    2fb2:	14 e0       	ldi	r17, 0x04	; 4
    2fb4:	83 e0       	ldi	r24, 0x03	; 3
    2fb6:	f8 01       	movw	r30, r16
    2fb8:	80 83       	st	Z, r24
						PDMnow[1] = 10;
    2fba:	8a e0       	ldi	r24, 0x0A	; 10
    2fbc:	81 83       	std	Z+1, r24	; 0x01
						PDMnow[2] = 0;
    2fbe:	12 82       	std	Z+2, r1	; 0x02
						updatePDMmem(0);
    2fc0:	43 e0       	ldi	r20, 0x03	; 3
    2fc2:	50 e0       	ldi	r21, 0x00	; 0
    2fc4:	63 e3       	ldi	r22, 0x33	; 51
    2fc6:	70 e0       	ldi	r23, 0x00	; 0
    2fc8:	c8 01       	movw	r24, r16
    2fca:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
						PDMnow[0] = 17;
    2fce:	81 e1       	ldi	r24, 0x11	; 17
    2fd0:	f8 01       	movw	r30, r16
    2fd2:	80 83       	st	Z, r24
						PDMnow[1] = 30;
    2fd4:	8e e1       	ldi	r24, 0x1E	; 30
    2fd6:	81 83       	std	Z+1, r24	; 0x01
						PDMnow[2] = 0;
    2fd8:	12 82       	std	Z+2, r1	; 0x02
						for(gpVar1 = 1;gpVar1 < 5;gpVar1 ++){
    2fda:	81 e0       	ldi	r24, 0x01	; 1
    2fdc:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
					reset_mode--;
				goto reset_prg;}
				BTNCOM(1);_delay_us(10);
				if(BTN4){
					if(reset_mode>0){reset_enter=1;}
					else{reset_abort=1;}
    2fe0:	81 e0       	ldi	r24, 0x01	; 1
						updatePDMmem(0);
						PDMnow[0] = 17;
						PDMnow[1] = 30;
						PDMnow[2] = 0;
						for(gpVar1 = 1;gpVar1 < 5;gpVar1 ++){
							updatePDMmem(gpVar1);
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	bc 01       	movw	r22, r24
    2fe6:	66 0f       	add	r22, r22
    2fe8:	77 1f       	adc	r23, r23
    2fea:	86 0f       	add	r24, r22
    2fec:	97 1f       	adc	r25, r23
    2fee:	bc 01       	movw	r22, r24
    2ff0:	6d 5c       	subi	r22, 0xCD	; 205
    2ff2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ff4:	43 e0       	ldi	r20, 0x03	; 3
    2ff6:	50 e0       	ldi	r21, 0x00	; 0
    2ff8:	81 e5       	ldi	r24, 0x51	; 81
    2ffa:	94 e0       	ldi	r25, 0x04	; 4
    2ffc:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
							PDMnow[0] += 3;
    3000:	e1 e5       	ldi	r30, 0x51	; 81
    3002:	f4 e0       	ldi	r31, 0x04	; 4
    3004:	80 81       	ld	r24, Z
    3006:	8d 5f       	subi	r24, 0xFD	; 253
    3008:	80 83       	st	Z, r24
							PDMnow[1] += 5;
    300a:	81 81       	ldd	r24, Z+1	; 0x01
    300c:	8b 5f       	subi	r24, 0xFB	; 251
    300e:	81 83       	std	Z+1, r24	; 0x01
						PDMnow[2] = 0;
						updatePDMmem(0);
						PDMnow[0] = 17;
						PDMnow[1] = 30;
						PDMnow[2] = 0;
						for(gpVar1 = 1;gpVar1 < 5;gpVar1 ++){
    3010:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    3014:	8f 5f       	subi	r24, 0xFF	; 255
    3016:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    301a:	85 30       	cpi	r24, 0x05	; 5
    301c:	10 f3       	brcs	.-60     	; 0x2fe2 <main+0x46e>
							updatePDMmem(gpVar1);
							PDMnow[0] += 3;
							PDMnow[1] += 5;
						}
						PDMnow[0] = 15;
    301e:	8f e0       	ldi	r24, 0x0F	; 15
    3020:	80 83       	st	Z, r24
						PDMnow[1] = 80;
    3022:	80 e5       	ldi	r24, 0x50	; 80
    3024:	81 83       	std	Z+1, r24	; 0x01
						PDMnow[2] = 1;
    3026:	81 e0       	ldi	r24, 0x01	; 1
    3028:	82 83       	std	Z+2, r24	; 0x02
						for(gpVar1 = 5;gpVar1 < 10;gpVar1 ++){
    302a:	85 e0       	ldi	r24, 0x05	; 5
    302c:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
							updatePDMmem(gpVar1);
    3030:	90 e0       	ldi	r25, 0x00	; 0
    3032:	bc 01       	movw	r22, r24
    3034:	66 0f       	add	r22, r22
    3036:	77 1f       	adc	r23, r23
    3038:	86 0f       	add	r24, r22
    303a:	97 1f       	adc	r25, r23
    303c:	bc 01       	movw	r22, r24
    303e:	6d 5c       	subi	r22, 0xCD	; 205
    3040:	7f 4f       	sbci	r23, 0xFF	; 255
    3042:	43 e0       	ldi	r20, 0x03	; 3
    3044:	50 e0       	ldi	r21, 0x00	; 0
    3046:	81 e5       	ldi	r24, 0x51	; 81
    3048:	94 e0       	ldi	r25, 0x04	; 4
    304a:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
							PDMnow[0] += 2;
    304e:	e1 e5       	ldi	r30, 0x51	; 81
    3050:	f4 e0       	ldi	r31, 0x04	; 4
    3052:	80 81       	ld	r24, Z
    3054:	8e 5f       	subi	r24, 0xFE	; 254
    3056:	80 83       	st	Z, r24
							PDMnow[1] += 20;
    3058:	81 81       	ldd	r24, Z+1	; 0x01
    305a:	8c 5e       	subi	r24, 0xEC	; 236
    305c:	81 83       	std	Z+1, r24	; 0x01
							PDMnow[1] += 5;
						}
						PDMnow[0] = 15;
						PDMnow[1] = 80;
						PDMnow[2] = 1;
						for(gpVar1 = 5;gpVar1 < 10;gpVar1 ++){
    305e:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    3062:	8f 5f       	subi	r24, 0xFF	; 255
    3064:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    3068:	8a 30       	cpi	r24, 0x0A	; 10
    306a:	10 f3       	brcs	.-60     	; 0x3030 <main+0x4bc>
							updatePDMmem(gpVar1);
							PDMnow[0] += 2;
							PDMnow[1] += 20;
						}
					}
					if(reset_mode==3||reset_mode==4){
    306c:	4a 81       	ldd	r20, Y+2	; 0x02
    306e:	43 50       	subi	r20, 0x03	; 3
    3070:	42 30       	cpi	r20, 0x02	; 2
    3072:	08 f0       	brcs	.+2      	; 0x3076 <main+0x502>
    3074:	43 c0       	rjmp	.+134    	; 0x30fc <main+0x588>
						//Plan
						eeprom_update_word(&sensMask_eep[0], 0);
    3076:	60 e0       	ldi	r22, 0x00	; 0
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	8b e4       	ldi	r24, 0x4B	; 75
    307c:	91 e0       	ldi	r25, 0x01	; 1
    307e:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
						for(gpVar1 = 1;gpVar1 < 12;gpVar1 ++){
    3082:	81 e0       	ldi	r24, 0x01	; 1
    3084:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
							uint16_t tmp = pgm_read_word(&sensPrst[gpVar1-1]);
    3088:	90 e0       	ldi	r25, 0x00	; 0
    308a:	fc 01       	movw	r30, r24
    308c:	ee 0f       	add	r30, r30
    308e:	ff 1f       	adc	r31, r31
    3090:	e8 5e       	subi	r30, 0xE8	; 232
    3092:	fe 4f       	sbci	r31, 0xFE	; 254
    3094:	65 91       	lpm	r22, Z+
    3096:	74 91       	lpm	r23, Z
							eeprom_update_word(&sensMask_eep[gpVar1], tmp);
    3098:	88 0f       	add	r24, r24
    309a:	99 1f       	adc	r25, r25
    309c:	85 5b       	subi	r24, 0xB5	; 181
    309e:	9e 4f       	sbci	r25, 0xFE	; 254
    30a0:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
						}
					}
					if(reset_mode==3||reset_mode==4){
						//Plan
						eeprom_update_word(&sensMask_eep[0], 0);
						for(gpVar1 = 1;gpVar1 < 12;gpVar1 ++){
    30a4:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    30a8:	8f 5f       	subi	r24, 0xFF	; 255
    30aa:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    30ae:	8c 30       	cpi	r24, 0x0C	; 12
    30b0:	58 f3       	brcs	.-42     	; 0x3088 <main+0x514>
							uint16_t tmp = pgm_read_word(&sensPrst[gpVar1-1]);
							eeprom_update_word(&sensMask_eep[gpVar1], tmp);
						}
						for(gpVar1 = 12;gpVar1 < 31;gpVar1 ++){
    30b2:	8c e0       	ldi	r24, 0x0C	; 12
    30b4:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
							eeprom_update_word(&sensMask_eep[gpVar1], 0);
    30b8:	90 e0       	ldi	r25, 0x00	; 0
    30ba:	88 0f       	add	r24, r24
    30bc:	99 1f       	adc	r25, r25
    30be:	60 e0       	ldi	r22, 0x00	; 0
    30c0:	70 e0       	ldi	r23, 0x00	; 0
    30c2:	85 5b       	subi	r24, 0xB5	; 181
    30c4:	9e 4f       	sbci	r25, 0xFE	; 254
    30c6:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
						eeprom_update_word(&sensMask_eep[0], 0);
						for(gpVar1 = 1;gpVar1 < 12;gpVar1 ++){
							uint16_t tmp = pgm_read_word(&sensPrst[gpVar1-1]);
							eeprom_update_word(&sensMask_eep[gpVar1], tmp);
						}
						for(gpVar1 = 12;gpVar1 < 31;gpVar1 ++){
    30ca:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    30ce:	8f 5f       	subi	r24, 0xFF	; 255
    30d0:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    30d4:	8f 31       	cpi	r24, 0x1F	; 31
    30d6:	80 f3       	brcs	.-32     	; 0x30b8 <main+0x544>
							eeprom_update_word(&sensMask_eep[gpVar1], 0);
						}
						for(progSel = 0;progSel < 10;progSel ++){
    30d8:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <_ZL7progSel>
							deleteProg();
    30dc:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <_ZL10deleteProgv>
							eeprom_update_word(&sensMask_eep[gpVar1], tmp);
						}
						for(gpVar1 = 12;gpVar1 < 31;gpVar1 ++){
							eeprom_update_word(&sensMask_eep[gpVar1], 0);
						}
						for(progSel = 0;progSel < 10;progSel ++){
    30e0:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    30e4:	8f 5f       	subi	r24, 0xFF	; 255
    30e6:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <_ZL7progSel>
    30ea:	8a 30       	cpi	r24, 0x0A	; 10
    30ec:	b8 f3       	brcs	.-18     	; 0x30dc <main+0x568>
							deleteProg();
						}
						progSel = 0;
    30ee:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <_ZL7progSel>
						eeprom_update_byte(&first_reset_eep, 1);
    30f2:	61 e0       	ldi	r22, 0x01	; 1
    30f4:	8c e1       	ldi	r24, 0x1C	; 28
    30f6:	90 e0       	ldi	r25, 0x00	; 0
    30f8:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    30fc:	5f ef       	ldi	r21, 0xFF	; 255
    30fe:	65 ea       	ldi	r22, 0xA5	; 165
    3100:	7e e0       	ldi	r23, 0x0E	; 14
    3102:	51 50       	subi	r21, 0x01	; 1
    3104:	60 40       	sbci	r22, 0x00	; 0
    3106:	70 40       	sbci	r23, 0x00	; 0
    3108:	e1 f7       	brne	.-8      	; 0x3102 <main+0x58e>
    310a:	00 c0       	rjmp	.+0      	; 0x310c <main+0x598>
    310c:	00 00       	nop
					}
					_delay_ms(300);
					LCD.Clear();
    310e:	89 e0       	ldi	r24, 0x09	; 9
    3110:	95 e0       	ldi	r25, 0x05	; 5
    3112:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
				}
			}
		}
	}
	//Read EEPROM
	readConfMem();
    3116:	0e 94 2f 03 	call	0x65e	; 0x65e <_ZL11readConfMemv>
	readCPselMem();
    311a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    311e:	e8 2f       	mov	r30, r24
    3120:	f0 e0       	ldi	r31, 0x00	; 0
    3122:	fd 83       	std	Y+5, r31	; 0x05
    3124:	ec 83       	std	Y+4, r30	; 0x04
    3126:	cf 01       	movw	r24, r30
    3128:	89 5c       	subi	r24, 0xC9	; 201
    312a:	9e 4f       	sbci	r25, 0xFE	; 254
    312c:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    3130:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <_ZL13checkPointSel>
	readCheckPoint();
    3134:	85 e1       	ldi	r24, 0x15	; 21
    3136:	2c 81       	ldd	r18, Y+4	; 0x04
    3138:	3d 81       	ldd	r19, Y+5	; 0x05
    313a:	82 9f       	mul	r24, r18
    313c:	b0 01       	movw	r22, r0
    313e:	83 9f       	mul	r24, r19
    3140:	70 0d       	add	r23, r0
    3142:	11 24       	eor	r1, r1
    3144:	6b 59       	subi	r22, 0x9B	; 155
    3146:	7f 4f       	sbci	r23, 0xFF	; 255
    3148:	45 e1       	ldi	r20, 0x15	; 21
    314a:	50 e0       	ldi	r21, 0x00	; 0
    314c:	86 e5       	ldi	r24, 0x56	; 86
    314e:	94 e0       	ldi	r25, 0x04	; 4
    3150:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
	readSensCfg();
    3154:	0e 94 a2 03 	call	0x744	; 0x744 <_ZL11readSensCfgv>
	readSensOffs();
    3158:	0e 94 c8 03 	call	0x790	; 0x790 <_ZL12readSensOffsv>
	//PU-Sequence
	Motor.Config(1023, mtrOffsL, mtrOffsR);
    315c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <_ZL8mtrOffsR>
    3160:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <_ZL8mtrOffsL>
	//TCNT1 Init (Phase Correct PWM 10-Bit, Clk/8 Prescaler)
	TCCR1A = (1<<COM1A1)|(0<<COM1A0)|(1<<COM1B1)|(0<<COM1B0)|(1<<WGM11)|(1<<WGM10);
	TCCR1B = (0<<WGM13)|(0<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
}
void MotorLib::Config(uint16_t vLimit, uint8_t ofL, uint8_t ofR){
	_motor_vLimit = vLimit;
    3164:	e6 ea       	ldi	r30, 0xA6	; 166
    3166:	f4 e0       	ldi	r31, 0x04	; 4
    3168:	2f ef       	ldi	r18, 0xFF	; 255
    316a:	33 e0       	ldi	r19, 0x03	; 3
    316c:	31 83       	std	Z+1, r19	; 0x01
    316e:	20 83       	st	Z, r18
	_motor_ofL = ofL;
    3170:	92 83       	std	Z+2, r25	; 0x02
	_motor_ofR = ofR;
    3172:	83 83       	std	Z+3, r24	; 0x03
	LCD.Cursor(6,0);
    3174:	40 e0       	ldi	r20, 0x00	; 0
    3176:	66 e0       	ldi	r22, 0x06	; 6
    3178:	89 e0       	ldi	r24, 0x09	; 9
    317a:	95 e0       	ldi	r25, 0x05	; 5
    317c:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
	LCD.WriteStr("GEAR");
    3180:	66 ec       	ldi	r22, 0xC6	; 198
    3182:	70 e0       	ldi	r23, 0x00	; 0
    3184:	89 e0       	ldi	r24, 0x09	; 9
    3186:	95 e0       	ldi	r25, 0x05	; 5
    3188:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
	LCD.Cursor(5,1);
    318c:	41 e0       	ldi	r20, 0x01	; 1
    318e:	65 e0       	ldi	r22, 0x05	; 5
    3190:	89 e0       	ldi	r24, 0x09	; 9
    3192:	95 e0       	ldi	r25, 0x05	; 5
    3194:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
	LCD.WriteStr(VERSION);
    3198:	6b ec       	ldi	r22, 0xCB	; 203
    319a:	70 e0       	ldi	r23, 0x00	; 0
    319c:	89 e0       	ldi	r24, 0x09	; 9
    319e:	95 e0       	ldi	r25, 0x05	; 5
    31a0:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    31a4:	3f ef       	ldi	r19, 0xFF	; 255
    31a6:	45 ea       	ldi	r20, 0xA5	; 165
    31a8:	5e e0       	ldi	r21, 0x0E	; 14
    31aa:	31 50       	subi	r19, 0x01	; 1
    31ac:	40 40       	sbci	r20, 0x00	; 0
    31ae:	50 40       	sbci	r21, 0x00	; 0
    31b0:	e1 f7       	brne	.-8      	; 0x31aa <main+0x636>
    31b2:	00 c0       	rjmp	.+0      	; 0x31b4 <main+0x640>
    31b4:	00 00       	nop
	#ifdef DBG
	LCD.Cursor(13,1);
	LCD.WriteStr("DBG");
	#endif
	_delay_ms(300);
	LCD.Clear();
    31b6:	89 e0       	ldi	r24, 0x09	; 9
    31b8:	95 e0       	ldi	r25, 0x05	; 5
    31ba:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
	SLED(0);
    31be:	97 98       	cbi	0x12, 7	; 18
	
	for(gpVar1 = 0;gpVar1 < 6;gpVar1 ++){pb[gpVar1] = 0;}
    31c0:	eb e7       	ldi	r30, 0x7B	; 123
    31c2:	f4 e0       	ldi	r31, 0x04	; 4
    31c4:	10 82       	st	Z, r1
    31c6:	11 82       	std	Z+1, r1	; 0x01
    31c8:	12 82       	std	Z+2, r1	; 0x02
    31ca:	13 82       	std	Z+3, r1	; 0x03
    31cc:	14 82       	std	Z+4, r1	; 0x04
    31ce:	15 82       	std	Z+5, r1	; 0x05
    31d0:	86 e0       	ldi	r24, 0x06	; 6
    31d2:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>

	sei();
    31d6:	78 94       	sei
	}
	else if(sampleTmr >= 200 && !sample){
		Sens.Ctrl(0);
		vbat += (readVbat() + readVbat()) / 2;
		vbat /= 2;
		if(menu+pointer >= 8 && submenu == 0){dspRfs = 1;}
    31d8:	dd 24       	eor	r13, r13
    31da:	d3 94       	inc	r13
			else{
				Line.Digitize(	(sensLo),
								(sensHi),
								400, 180,
								Sens.ResultRaw,
								(indexBuff[1]>>5));
    31dc:	0f 2e       	mov	r0, r31
    31de:	fb e6       	ldi	r31, 0x6B	; 107
    31e0:	6f 2e       	mov	r6, r31
    31e2:	f4 e0       	ldi	r31, 0x04	; 4
    31e4:	7f 2e       	mov	r7, r31
    31e6:	f0 2d       	mov	r31, r0
			//Servo PWM
			if(servoTmr >= 15){
				servoTmr = 0;
				IO1(1);IO2(1);IO3(1);
				for(uint8_t l=0;l<240;l++){
					if(l>=servoPos[0]+35){IO1(0);}
    31e8:	0f 2e       	mov	r0, r31
    31ea:	f4 e3       	ldi	r31, 0x34	; 52
    31ec:	af 2e       	mov	r10, r31
    31ee:	f4 e0       	ldi	r31, 0x04	; 4
    31f0:	bf 2e       	mov	r11, r31
    31f2:	f0 2d       	mov	r31, r0
    31f4:	0f 2e       	mov	r0, r31
    31f6:	f1 e8       	ldi	r31, 0x81	; 129
    31f8:	4f 2e       	mov	r4, r31
    31fa:	f4 e0       	ldi	r31, 0x04	; 4
    31fc:	5f 2e       	mov	r5, r31
    31fe:	f0 2d       	mov	r31, r0
	}
	if(!pb[2] && pbLast == 2){pb[2] = 3;pbLast = 0;}
	if(!pb[3] && pbLast == 3){pb[3] = 3;pbLast = 0;}
	pbPress = 0;
	for(uint8_t i = 0;i < 6;i ++){
		if(pb[i] > 0 && pb[i] < 4){pbPress = 1;}
    3200:	29 80       	ldd	r2, Y+1	; 0x01
						}
					}
					switch(submenu){
						case 1:PDMnow[0] = _lim(PDMnow[0]+pb[4]-pb[5], 0, 255);break;
						case 2:PDMnow[1] = _lim(PDMnow[1]+pb[4]-pb[5], 0, 255);break;
						case 3:PDMnow[2] = _lim(PDMnow[2]+pb[4]-pb[5], 0, 1);break;
    3202:	88 24       	eor	r8, r8
    3204:	83 94       	inc	r8
    3206:	91 2c       	mov	r9, r1
}
static void invProg(){
	uint8_t srcIdx = idxSel;
	for(idxSel = 1;idxSel <= 100;idxSel ++){
		readProgMem(progSel);
		if((indexBuff[0]&0b00001111) <= 4){
    3208:	6a 82       	std	Y+2, r6	; 0x02
    320a:	7b 82       	std	Y+3, r7	; 0x03
	if(pb[2] == 1 || pb[3] == 1){pbPress = 0;}
}

void Prescaler(){
	//Timing
	if(tbase >= 1){
    320c:	80 91 1f 05 	lds	r24, 0x051F	; 0x80051f <tbase>
    3210:	88 23       	and	r24, r24
    3212:	49 f1       	breq	.+82     	; 0x3266 <main+0x6f2>
		presc_1ms += tbase;
    3214:	90 91 1f 05 	lds	r25, 0x051F	; 0x80051f <tbase>
    3218:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <_ZL9presc_1ms>
    321c:	89 0f       	add	r24, r25
    321e:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <_ZL9presc_1ms>
		sampleTmr += tbase;
    3222:	90 91 1f 05 	lds	r25, 0x051F	; 0x80051f <tbase>
    3226:	20 91 3f 04 	lds	r18, 0x043F	; 0x80043f <_ZL9sampleTmr>
    322a:	92 0f       	add	r25, r18
    322c:	90 93 3f 04 	sts	0x043F, r25	; 0x80043f <_ZL9sampleTmr>
		errTmr += tbase;
    3230:	90 91 1f 05 	lds	r25, 0x051F	; 0x80051f <tbase>
    3234:	20 91 40 04 	lds	r18, 0x0440	; 0x800440 <_ZL6errTmr>
    3238:	92 0f       	add	r25, r18
    323a:	90 93 40 04 	sts	0x0440, r25	; 0x800440 <_ZL6errTmr>
		presc_Tms += presc_1ms/8;
    323e:	86 95       	lsr	r24
    3240:	86 95       	lsr	r24
    3242:	86 95       	lsr	r24
    3244:	90 91 48 04 	lds	r25, 0x0448	; 0x800448 <_ZL9presc_Tms>
    3248:	98 0f       	add	r25, r24
    324a:	90 93 48 04 	sts	0x0448, r25	; 0x800448 <_ZL9presc_Tms>
		presc_Dms += presc_1ms/8;
    324e:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <_ZL9presc_Dms>
    3252:	98 0f       	add	r25, r24
    3254:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <_ZL9presc_Dms>
		brakeTmr += presc_1ms/8;
    3258:	90 91 3a 04 	lds	r25, 0x043A	; 0x80043a <_ZL8brakeTmr>
    325c:	89 0f       	add	r24, r25
    325e:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <_ZL8brakeTmr>
		tbase = 0;
    3262:	10 92 1f 05 	sts	0x051F, r1	; 0x80051f <tbase>
	}
	if(presc_1ms >= 8){
    3266:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <_ZL9presc_1ms>
    326a:	88 30       	cpi	r24, 0x08	; 8
    326c:	a0 f0       	brcs	.+40     	; 0x3296 <main+0x722>
		presc_10ms += presc_1ms/8;
    326e:	86 95       	lsr	r24
    3270:	86 95       	lsr	r24
    3272:	86 95       	lsr	r24
    3274:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <_ZL10presc_10ms>
    3278:	98 0f       	add	r25, r24
    327a:	90 93 3d 04 	sts	0x043D, r25	; 0x80043d <_ZL10presc_10ms>
		presc_100ms += presc_1ms/8;
    327e:	90 91 3c 04 	lds	r25, 0x043C	; 0x80043c <_ZL11presc_100ms>
    3282:	98 0f       	add	r25, r24
    3284:	90 93 3c 04 	sts	0x043C, r25	; 0x80043c <_ZL11presc_100ms>
		servoTmr += presc_1ms/8;
    3288:	90 91 37 04 	lds	r25, 0x0437	; 0x800437 <_ZL8servoTmr>
    328c:	89 0f       	add	r24, r25
    328e:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <_ZL8servoTmr>
		presc_1ms = 0;
    3292:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <_ZL9presc_1ms>
	}
	if(presc_10ms >= 10){
    3296:	80 91 3d 04 	lds	r24, 0x043D	; 0x80043d <_ZL10presc_10ms>
    329a:	8a 30       	cpi	r24, 0x0A	; 10
    329c:	60 f0       	brcs	.+24     	; 0x32b6 <main+0x742>
		pbTimer ++;
    329e:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <_ZL7pbTimer>
    32a2:	8f 5f       	subi	r24, 0xFF	; 255
    32a4:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <_ZL7pbTimer>
		runDtmr ++;
    32a8:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <_ZL7runDtmr>
    32ac:	8f 5f       	subi	r24, 0xFF	; 255
    32ae:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <_ZL7runDtmr>
		presc_10ms = 0;
    32b2:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <_ZL10presc_10ms>
	}
	if(presc_100ms >= 100){
    32b6:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <_ZL11presc_100ms>
    32ba:	84 36       	cpi	r24, 0x64	; 100
    32bc:	c0 f0       	brcs	.+48     	; 0x32ee <main+0x77a>
		toutTmr ++;
    32be:	90 91 43 04 	lds	r25, 0x0443	; 0x800443 <_ZL7toutTmr>
    32c2:	9f 5f       	subi	r25, 0xFF	; 255
    32c4:	90 93 43 04 	sts	0x0443, r25	; 0x800443 <_ZL7toutTmr>
		runTmr += presc_100ms/100;
    32c8:	99 e2       	ldi	r25, 0x29	; 41
    32ca:	89 9f       	mul	r24, r25
    32cc:	81 2d       	mov	r24, r1
    32ce:	11 24       	eor	r1, r1
    32d0:	82 95       	swap	r24
    32d2:	8f 70       	andi	r24, 0x0F	; 15
    32d4:	20 91 15 04 	lds	r18, 0x0415	; 0x800415 <_ZL6runTmr>
    32d8:	30 91 16 04 	lds	r19, 0x0416	; 0x800416 <_ZL6runTmr+0x1>
    32dc:	b9 01       	movw	r22, r18
    32de:	68 0f       	add	r22, r24
    32e0:	71 1d       	adc	r23, r1
    32e2:	70 93 16 04 	sts	0x0416, r23	; 0x800416 <_ZL6runTmr+0x1>
    32e6:	60 93 15 04 	sts	0x0415, r22	; 0x800415 <_ZL6runTmr>
		presc_100ms = 0;	
    32ea:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <_ZL11presc_100ms>
	}
	if(presc_Dms >= prescD){
    32ee:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <_ZL9presc_Dms>
    32f2:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
    32f6:	86 17       	cp	r24, r22
    32f8:	48 f0       	brcs	.+18     	; 0x330c <main+0x798>
		Dtmr += presc_Dms/prescD;
    32fa:	0e 94 ba 3a 	call	0x7574	; 0x7574 <__udivmodqi4>
    32fe:	90 91 46 04 	lds	r25, 0x0446	; 0x800446 <_ZL4Dtmr>
    3302:	89 0f       	add	r24, r25
    3304:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <_ZL4Dtmr>
		presc_Dms = 0;
    3308:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <_ZL9presc_Dms>
	}
	if(presc_Tms >= prescT){
    330c:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <_ZL9presc_Tms>
    3310:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <_ZL6prescT>
    3314:	86 17       	cp	r24, r22
    3316:	48 f0       	brcs	.+18     	; 0x332a <main+0x7b6>
		Ttmr += presc_Tms/prescT;
    3318:	0e 94 ba 3a 	call	0x7574	; 0x7574 <__udivmodqi4>
    331c:	90 91 47 04 	lds	r25, 0x0447	; 0x800447 <_ZL4Ttmr>
    3320:	89 0f       	add	r24, r25
    3322:	80 93 47 04 	sts	0x0447, r24	; 0x800447 <_ZL4Ttmr>
		presc_Tms = 0;
    3326:	10 92 48 04 	sts	0x0448, r1	; 0x800448 <_ZL9presc_Tms>

	sei();
	
    while(1){
		Prescaler();
		Storage();
    332a:	0e 94 a4 14 	call	0x2948	; 0x2948 <_ZL7Storagev>
		}
	}
}

void Sampling(){
	if(sampleTmr >= 20 && sample){sampleTmr = 0;
    332e:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <_ZL9sampleTmr>
    3332:	84 31       	cpi	r24, 0x14	; 20
    3334:	08 f4       	brcc	.+2      	; 0x3338 <main+0x7c4>
    3336:	c7 c0       	rjmp	.+398    	; 0x34c6 <main+0x952>
    3338:	90 91 c7 03 	lds	r25, 0x03C7	; 0x8003c7 <_ZL6sample>
    333c:	99 23       	and	r25, r25
    333e:	11 f4       	brne	.+4      	; 0x3344 <main+0x7d0>
    3340:	0c 94 36 37 	jmp	0x6e6c	; 0x6e6c <main+0x42f8>
    3344:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <_ZL9sampleTmr>
		Sens.Read();
    3348:	8a ea       	ldi	r24, 0xAA	; 170
    334a:	94 e0       	ldi	r25, 0x04	; 4
    334c:	0e 94 86 07 	call	0xf0c	; 0xf0c <_ZN13SensorLibGEAR4ReadEv>
		Sens.Ctrl(1);
    3350:	6d 2d       	mov	r22, r13
    3352:	8a ea       	ldi	r24, 0xAA	; 170
    3354:	94 e0       	ldi	r25, 0x04	; 4
    3356:	0e 94 6d 07 	call	0xeda	; 0xeda <_ZN13SensorLibGEAR4CtrlEb>
		#ifndef DBG
		if(Sens.Ctrl(1) && !sysRun){
    335a:	6d 2d       	mov	r22, r13
    335c:	8a ea       	ldi	r24, 0xAA	; 170
    335e:	94 e0       	ldi	r25, 0x04	; 4
    3360:	0e 94 6d 07 	call	0xeda	; 0xeda <_ZN13SensorLibGEAR4CtrlEb>
    3364:	88 23       	and	r24, r24
    3366:	09 f4       	brne	.+2      	; 0x336a <main+0x7f6>
    3368:	54 c0       	rjmp	.+168    	; 0x3412 <main+0x89e>
    336a:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <_ZL6sysRun>
    336e:	81 11       	cpse	r24, r1
    3370:	50 c0       	rjmp	.+160    	; 0x3412 <main+0x89e>
    3372:	0c 94 2e 37 	jmp	0x6e5c	; 0x6e5c <main+0x42e8>
			//Servo PWM
			if(servoTmr >= 15){
				servoTmr = 0;
    3376:	10 92 37 04 	sts	0x0437, r1	; 0x800437 <_ZL8servoTmr>
				IO1(1);IO2(1);IO3(1);
    337a:	c2 9a       	sbi	0x18, 2	; 24
    337c:	90 9a       	sbi	0x12, 0	; 18
    337e:	91 9a       	sbi	0x12, 1	; 18
    3380:	20 e0       	ldi	r18, 0x00	; 0
    3382:	30 e0       	ldi	r19, 0x00	; 0
				for(uint8_t l=0;l<240;l++){
					if(l>=servoPos[0]+35){IO1(0);}
    3384:	a9 01       	movw	r20, r18
    3386:	f5 01       	movw	r30, r10
    3388:	80 81       	ld	r24, Z
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	83 96       	adiw	r24, 0x23	; 35
    338e:	28 17       	cp	r18, r24
    3390:	39 07       	cpc	r19, r25
    3392:	0c f0       	brlt	.+2      	; 0x3396 <main+0x822>
    3394:	c2 98       	cbi	0x18, 2	; 24
					if(l>=servoPos[1]+35){IO2(0);}
    3396:	f5 01       	movw	r30, r10
    3398:	81 81       	ldd	r24, Z+1	; 0x01
    339a:	90 e0       	ldi	r25, 0x00	; 0
    339c:	83 96       	adiw	r24, 0x23	; 35
    339e:	48 17       	cp	r20, r24
    33a0:	59 07       	cpc	r21, r25
    33a2:	0c f0       	brlt	.+2      	; 0x33a6 <main+0x832>
    33a4:	90 98       	cbi	0x12, 0	; 18
					if(l>=servoPos[2]+35){IO3(0);}
    33a6:	f5 01       	movw	r30, r10
    33a8:	82 81       	ldd	r24, Z+2	; 0x02
    33aa:	90 e0       	ldi	r25, 0x00	; 0
    33ac:	83 96       	adiw	r24, 0x23	; 35
    33ae:	48 17       	cp	r20, r24
    33b0:	59 07       	cpc	r21, r25
    33b2:	0c f0       	brlt	.+2      	; 0x33b6 <main+0x842>
    33b4:	91 98       	cbi	0x12, 1	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    33b6:	f5 e3       	ldi	r31, 0x35	; 53
    33b8:	fa 95       	dec	r31
    33ba:	f1 f7       	brne	.-4      	; 0x33b8 <main+0x844>
    33bc:	00 00       	nop
    33be:	2f 5f       	subi	r18, 0xFF	; 255
    33c0:	3f 4f       	sbci	r19, 0xFF	; 255
		if(Sens.Ctrl(1) && !sysRun){
			//Servo PWM
			if(servoTmr >= 15){
				servoTmr = 0;
				IO1(1);IO2(1);IO3(1);
				for(uint8_t l=0;l<240;l++){
    33c2:	20 3f       	cpi	r18, 0xF0	; 240
    33c4:	31 05       	cpc	r19, r1
    33c6:	f1 f6       	brne	.-68     	; 0x3384 <main+0x810>
					if(l>=servoPos[0]+35){IO1(0);}
					if(l>=servoPos[1]+35){IO2(0);}
					if(l>=servoPos[2]+35){IO3(0);}
				_delay_us(10);}
				IO1(0);IO2(0);IO3(0);
    33c8:	c2 98       	cbi	0x18, 2	; 24
    33ca:	90 98       	cbi	0x12, 0	; 18
    33cc:	91 98       	cbi	0x12, 1	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    33ce:	8f ef       	ldi	r24, 0xFF	; 255
    33d0:	98 e1       	ldi	r25, 0x18	; 24
    33d2:	01 97       	sbiw	r24, 0x01	; 1
    33d4:	f1 f7       	brne	.-4      	; 0x33d2 <main+0x85e>
    33d6:	00 c0       	rjmp	.+0      	; 0x33d8 <main+0x864>
    33d8:	00 00       	nop
    33da:	06 c0       	rjmp	.+12     	; 0x33e8 <main+0x874>
    33dc:	ef e7       	ldi	r30, 0x7F	; 127
    33de:	fe e3       	ldi	r31, 0x3E	; 62
    33e0:	31 97       	sbiw	r30, 0x01	; 1
    33e2:	f1 f7       	brne	.-4      	; 0x33e0 <main+0x86c>
    33e4:	00 c0       	rjmp	.+0      	; 0x33e6 <main+0x872>
    33e6:	00 00       	nop
				_delay_ms(1.6);
			}
			else{_delay_ms(4);}
			vbat += (readVbat() + readVbat()) / 2;
    33e8:	0e 94 53 02 	call	0x4a6	; 0x4a6 <_ZL8readVbatv>
    33ec:	8c 01       	movw	r16, r24
    33ee:	0e 94 53 02 	call	0x4a6	; 0x4a6 <_ZL8readVbatv>
			vbat /= 2;
    33f2:	80 0f       	add	r24, r16
    33f4:	91 1f       	adc	r25, r17
    33f6:	96 95       	lsr	r25
    33f8:	87 95       	ror	r24
    33fa:	20 91 0d 04 	lds	r18, 0x040D	; 0x80040d <_ZL4vbat>
    33fe:	30 91 0e 04 	lds	r19, 0x040E	; 0x80040e <_ZL4vbat+0x1>
    3402:	82 0f       	add	r24, r18
    3404:	93 1f       	adc	r25, r19
    3406:	96 95       	lsr	r25
    3408:	87 95       	ror	r24
    340a:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <_ZL4vbat+0x1>
    340e:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <_ZL4vbat>
		_sensctrl = !_sensctrl;
		_sensctrl_done = 0;
	}
}
bool SensorLibGEAR::NewData(){
	bool ret = _newdata;
    3412:	ea ea       	ldi	r30, 0xAA	; 170
    3414:	f4 e0       	ldi	r31, 0x04	; 4
    3416:	84 ad       	ldd	r24, Z+60	; 0x3c
	_newdata = 0;
    3418:	14 ae       	std	Z+60, r1	; 0x3c
		}
		#else
		if(Sens.Ctrl(1)){_delay_ms(4);}
		#endif
		if(Sens.NewData()){
    341a:	88 23       	and	r24, r24
    341c:	09 f4       	brne	.+2      	; 0x3420 <main+0x8ac>
    341e:	9b c0       	rjmp	.+310    	; 0x3556 <main+0x9e2>
			if(useATC){
    3420:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ZL6useATC>
    3424:	88 23       	and	r24, r24
    3426:	11 f1       	breq	.+68     	; 0x346c <main+0x8f8>
				Line.Digitize(	(Sens.ResultLow),
								(Sens.ResultHigh),
								sensLo, sensHi,
								Sens.ResultRaw,
								(indexBuff[1]>>5));
    3428:	f3 01       	movw	r30, r6
    342a:	81 81       	ldd	r24, Z+1	; 0x01
    342c:	90 e0       	ldi	r25, 0x00	; 0
    342e:	95 95       	asr	r25
    3430:	87 95       	ror	r24
    3432:	95 95       	asr	r25
    3434:	87 95       	ror	r24
    3436:	95 95       	asr	r25
    3438:	87 95       	ror	r24
    343a:	95 95       	asr	r25
    343c:	87 95       	ror	r24
    343e:	95 95       	asr	r25
    3440:	87 95       	ror	r24
    3442:	00 91 11 04 	lds	r16, 0x0411	; 0x800411 <_ZL6sensHi>
    3446:	10 91 12 04 	lds	r17, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    344a:	20 91 0f 04 	lds	r18, 0x040F	; 0x80040f <_ZL6sensLo>
    344e:	30 91 10 04 	lds	r19, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
		#else
		if(Sens.Ctrl(1)){_delay_ms(4);}
		#endif
		if(Sens.NewData()){
			if(useATC){
				Line.Digitize(	(Sens.ResultLow),
    3452:	ea ea       	ldi	r30, 0xAA	; 170
    3454:	f4 e0       	ldi	r31, 0x04	; 4
								(Sens.ResultHigh),
								sensLo, sensHi,
								Sens.ResultRaw,
								(indexBuff[1]>>5));
    3456:	46 8d       	ldd	r20, Z+30	; 0x1e
    3458:	57 8d       	ldd	r21, Z+31	; 0x1f
    345a:	64 8d       	ldd	r22, Z+28	; 0x1c
    345c:	75 8d       	ldd	r23, Z+29	; 0x1d
    345e:	c8 2e       	mov	r12, r24
    3460:	7f 01       	movw	r14, r30
    3462:	8d e8       	ldi	r24, 0x8D	; 141
    3464:	94 e0       	ldi	r25, 0x04	; 4
    3466:	0e 94 3c 08 	call	0x1078	; 0x1078 <_ZN15LineDetectorLib8DigitizeEjjjjPjh>
    346a:	24 c0       	rjmp	.+72     	; 0x34b4 <main+0x940>
			else{
				Line.Digitize(	(sensLo),
								(sensHi),
								400, 180,
								Sens.ResultRaw,
								(indexBuff[1]>>5));
    346c:	f3 01       	movw	r30, r6
    346e:	81 81       	ldd	r24, Z+1	; 0x01
    3470:	90 e0       	ldi	r25, 0x00	; 0
    3472:	95 95       	asr	r25
    3474:	87 95       	ror	r24
    3476:	95 95       	asr	r25
    3478:	87 95       	ror	r24
    347a:	95 95       	asr	r25
    347c:	87 95       	ror	r24
    347e:	95 95       	asr	r25
    3480:	87 95       	ror	r24
    3482:	95 95       	asr	r25
    3484:	87 95       	ror	r24
    3486:	40 91 11 04 	lds	r20, 0x0411	; 0x800411 <_ZL6sensHi>
    348a:	50 91 12 04 	lds	r21, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    348e:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <_ZL6sensLo>
    3492:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
    3496:	c8 2e       	mov	r12, r24
    3498:	0f 2e       	mov	r0, r31
    349a:	fa ea       	ldi	r31, 0xAA	; 170
    349c:	ef 2e       	mov	r14, r31
    349e:	f4 e0       	ldi	r31, 0x04	; 4
    34a0:	ff 2e       	mov	r15, r31
    34a2:	f0 2d       	mov	r31, r0
    34a4:	04 eb       	ldi	r16, 0xB4	; 180
    34a6:	10 e0       	ldi	r17, 0x00	; 0
    34a8:	20 e9       	ldi	r18, 0x90	; 144
    34aa:	31 e0       	ldi	r19, 0x01	; 1
    34ac:	8d e8       	ldi	r24, 0x8D	; 141
    34ae:	94 e0       	ldi	r25, 0x04	; 4
    34b0:	0e 94 3c 08 	call	0x1078	; 0x1078 <_ZN15LineDetectorLib8DigitizeEjjjjPjh>
			}
			#ifndef DBG
			if(!sysRun){dspRfs = 1;}
    34b4:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <_ZL6sysRun>
    34b8:	81 11       	cpse	r24, r1
    34ba:	02 c0       	rjmp	.+4      	; 0x34c0 <main+0x94c>
    34bc:	d0 92 61 00 	sts	0x0061, r13	; 0x800061 <_ZL6dspRfs>
			#else
			dspRfs = 1;
			#endif
			sensNewData = 1;
    34c0:	d0 92 cd 03 	sts	0x03CD, r13	; 0x8003cd <_ZL11sensNewData>
    34c4:	48 c0       	rjmp	.+144    	; 0x3556 <main+0x9e2>
		}
	}
	else if(sampleTmr >= 200 && !sample){
    34c6:	88 3c       	cpi	r24, 0xC8	; 200
    34c8:	70 f1       	brcs	.+92     	; 0x3526 <main+0x9b2>
    34ca:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <_ZL6sample>
    34ce:	81 11       	cpse	r24, r1
    34d0:	42 c0       	rjmp	.+132    	; 0x3556 <main+0x9e2>
		Sens.Ctrl(0);
    34d2:	60 e0       	ldi	r22, 0x00	; 0
    34d4:	8a ea       	ldi	r24, 0xAA	; 170
    34d6:	94 e0       	ldi	r25, 0x04	; 4
    34d8:	0e 94 6d 07 	call	0xeda	; 0xeda <_ZN13SensorLibGEAR4CtrlEb>
		vbat += (readVbat() + readVbat()) / 2;
    34dc:	0e 94 53 02 	call	0x4a6	; 0x4a6 <_ZL8readVbatv>
    34e0:	8c 01       	movw	r16, r24
    34e2:	0e 94 53 02 	call	0x4a6	; 0x4a6 <_ZL8readVbatv>
		vbat /= 2;
    34e6:	80 0f       	add	r24, r16
    34e8:	91 1f       	adc	r25, r17
    34ea:	96 95       	lsr	r25
    34ec:	87 95       	ror	r24
    34ee:	20 91 0d 04 	lds	r18, 0x040D	; 0x80040d <_ZL4vbat>
    34f2:	30 91 0e 04 	lds	r19, 0x040E	; 0x80040e <_ZL4vbat+0x1>
    34f6:	82 0f       	add	r24, r18
    34f8:	93 1f       	adc	r25, r19
    34fa:	96 95       	lsr	r25
    34fc:	87 95       	ror	r24
    34fe:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <_ZL4vbat+0x1>
    3502:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <_ZL4vbat>
		if(menu+pointer >= 8 && submenu == 0){dspRfs = 1;}
    3506:	20 91 85 04 	lds	r18, 0x0485	; 0x800485 <_ZL4menu>
    350a:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_ZL7pointer>
    350e:	90 e0       	ldi	r25, 0x00	; 0
    3510:	82 0f       	add	r24, r18
    3512:	91 1d       	adc	r25, r1
    3514:	08 97       	sbiw	r24, 0x08	; 8
    3516:	fc f0       	brlt	.+62     	; 0x3556 <main+0x9e2>
    3518:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    351c:	81 11       	cpse	r24, r1
    351e:	1b c0       	rjmp	.+54     	; 0x3556 <main+0x9e2>
    3520:	d0 92 61 00 	sts	0x0061, r13	; 0x800061 <_ZL6dspRfs>
    3524:	18 c0       	rjmp	.+48     	; 0x3556 <main+0x9e2>
	}
	else if(!sample && !(menu+pointer >= 8 && submenu == 0)){
    3526:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <_ZL6sample>
    352a:	81 11       	cpse	r24, r1
    352c:	14 c0       	rjmp	.+40     	; 0x3556 <main+0x9e2>
    352e:	20 91 85 04 	lds	r18, 0x0485	; 0x800485 <_ZL4menu>
    3532:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_ZL7pointer>
    3536:	90 e0       	ldi	r25, 0x00	; 0
    3538:	82 0f       	add	r24, r18
    353a:	91 1d       	adc	r25, r1
    353c:	08 97       	sbiw	r24, 0x08	; 8
    353e:	24 f0       	brlt	.+8      	; 0x3548 <main+0x9d4>
    3540:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    3544:	88 23       	and	r24, r24
    3546:	39 f0       	breq	.+14     	; 0x3556 <main+0x9e2>
		Sens.Ctrl(0);
    3548:	60 e0       	ldi	r22, 0x00	; 0
    354a:	8a ea       	ldi	r24, 0xAA	; 170
    354c:	94 e0       	ldi	r25, 0x04	; 4
    354e:	0e 94 6d 07 	call	0xeda	; 0xeda <_ZN13SensorLibGEAR4CtrlEb>
		sampleTmr = 0;
    3552:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <_ZL9sampleTmr>
	
    while(1){
		Prescaler();
		Storage();
		Sampling();
		RunTime();
    3556:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <_ZL7RunTimev>
	}
}
	
void Buttons(){
	//Button Handler
	BTNCOM(0);BTNCOM(0);
    355a:	c6 98       	cbi	0x18, 6	; 24
    355c:	be 9a       	sbi	0x17, 6	; 23
    355e:	ab 9a       	sbi	0x15, 3	; 21
    3560:	a3 98       	cbi	0x14, 3	; 20
    3562:	c6 98       	cbi	0x18, 6	; 24
    3564:	be 9a       	sbi	0x17, 6	; 23
    3566:	ab 9a       	sbi	0x15, 3	; 21
    3568:	a3 98       	cbi	0x14, 3	; 20
	pb[0] = BTN1;
    356a:	83 b3       	in	r24, 0x13	; 19
    356c:	85 fb       	bst	r24, 5
    356e:	88 27       	eor	r24, r24
    3570:	80 f9       	bld	r24, 0
    3572:	8d 25       	eor	r24, r13
    3574:	eb e7       	ldi	r30, 0x7B	; 123
    3576:	f4 e0       	ldi	r31, 0x04	; 4
    3578:	80 83       	st	Z, r24
	pb[1] = BTN2;
    357a:	23 b3       	in	r18, 0x13	; 19
    357c:	22 fb       	bst	r18, 2
    357e:	22 27       	eor	r18, r18
    3580:	20 f9       	bld	r18, 0
    3582:	2d 25       	eor	r18, r13
    3584:	20 93 7c 04 	sts	0x047C, r18	; 0x80047c <_ZL2pb+0x1>
	pb[2] = BTN3;
    3588:	33 b3       	in	r19, 0x13	; 19
    358a:	32 95       	swap	r19
    358c:	31 70       	andi	r19, 0x01	; 1
    358e:	3d 25       	eor	r19, r13
    3590:	30 93 7d 04 	sts	0x047D, r19	; 0x80047d <_ZL2pb+0x2>
	BTNCOM(1);BTNCOM(1);
    3594:	c6 9a       	sbi	0x18, 6	; 24
    3596:	be 98       	cbi	0x17, 6	; 23
    3598:	ab 98       	cbi	0x15, 3	; 21
    359a:	a3 9a       	sbi	0x14, 3	; 20
    359c:	c6 9a       	sbi	0x18, 6	; 24
    359e:	be 98       	cbi	0x17, 6	; 23
    35a0:	ab 98       	cbi	0x15, 3	; 21
    35a2:	a3 9a       	sbi	0x14, 3	; 20
	pb[3] = BTN4;
    35a4:	93 b3       	in	r25, 0x13	; 19
    35a6:	92 95       	swap	r25
    35a8:	91 70       	andi	r25, 0x01	; 1
    35aa:	89 2f       	mov	r24, r25
    35ac:	8d 25       	eor	r24, r13
    35ae:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <_ZL2pb+0x3>
	pb[4] = BTN5;
    35b2:	93 b3       	in	r25, 0x13	; 19
    35b4:	92 fb       	bst	r25, 2
    35b6:	99 27       	eor	r25, r25
    35b8:	90 f9       	bld	r25, 0
    35ba:	49 2f       	mov	r20, r25
    35bc:	4d 25       	eor	r20, r13
    35be:	40 93 7f 04 	sts	0x047F, r20	; 0x80047f <_ZL2pb+0x4>
	pb[5] = BTN6;
    35c2:	93 b3       	in	r25, 0x13	; 19
    35c4:	95 fb       	bst	r25, 5
    35c6:	99 27       	eor	r25, r25
    35c8:	90 f9       	bld	r25, 0
    35ca:	9d 25       	eor	r25, r13
    35cc:	90 93 80 04 	sts	0x0480, r25	; 0x800480 <_ZL2pb+0x5>
	if(!(pb[0] | pb[1] | pb[2] | pb[3] | pb[4] | pb[5])){pbTimer = 0;if(pbLast == 1 || pbLast == 4){pbLast = 0;}}
    35d0:	50 81       	ld	r21, Z
    35d2:	25 2b       	or	r18, r21
    35d4:	32 2b       	or	r19, r18
    35d6:	83 2b       	or	r24, r19
    35d8:	84 2b       	or	r24, r20
    35da:	89 2b       	or	r24, r25
    35dc:	11 f0       	breq	.+4      	; 0x35e2 <main+0xa6e>
    35de:	0c 94 3c 37 	jmp	0x6e78	; 0x6e78 <main+0x4304>
    35e2:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <_ZL7pbTimer>
    35e6:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <_ZL6pbLast>
    35ea:	81 30       	cpi	r24, 0x01	; 1
    35ec:	19 f0       	breq	.+6      	; 0x35f4 <main+0xa80>
    35ee:	84 30       	cpi	r24, 0x04	; 4
    35f0:	09 f0       	breq	.+2      	; 0x35f4 <main+0xa80>
    35f2:	50 c0       	rjmp	.+160    	; 0x3694 <main+0xb20>
    35f4:	10 92 7a 04 	sts	0x047A, r1	; 0x80047a <_ZL6pbLast>
    35f8:	4d c0       	rjmp	.+154    	; 0x3694 <main+0xb20>
	if(pbTimer >= 5){
		if(pb[0] | pb[1] | pb[4] | pb[5]){
    35fa:	94 2b       	or	r25, r20
    35fc:	29 2b       	or	r18, r25
    35fe:	c9 f0       	breq	.+50     	; 0x3632 <main+0xabe>
			if(pbTimer >= 50){
    3600:	82 33       	cpi	r24, 0x32	; 50
    3602:	20 f0       	brcs	.+8      	; 0x360c <main+0xa98>
				pbTimer = 47;
    3604:	8f e2       	ldi	r24, 0x2F	; 47
    3606:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <_ZL7pbTimer>
    360a:	11 c0       	rjmp	.+34     	; 0x362e <main+0xaba>
			}
			else if(pbLast == 1){
    360c:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <_ZL6pbLast>
    3610:	81 30       	cpi	r24, 0x01	; 1
    3612:	69 f4       	brne	.+26     	; 0x362e <main+0xaba>
				for(uint8_t i = 0;i < 6;i ++){
					pb[i] = 0;
    3614:	eb e7       	ldi	r30, 0x7B	; 123
    3616:	f4 e0       	ldi	r31, 0x04	; 4
    3618:	10 82       	st	Z, r1
    361a:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <_ZL2pb+0x1>
    361e:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <_ZL2pb+0x2>
    3622:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <_ZL2pb+0x3>
    3626:	10 92 7f 04 	sts	0x047F, r1	; 0x80047f <_ZL2pb+0x4>
    362a:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <_ZL2pb+0x5>
				}
			}
			pbLast = 1;
    362e:	d0 92 7a 04 	sts	0x047A, r13	; 0x80047a <_ZL6pbLast>
		}	
		if(pb[2] | pb[3]){
    3632:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    3636:	90 91 7e 04 	lds	r25, 0x047E	; 0x80047e <_ZL2pb+0x3>
    363a:	28 2f       	mov	r18, r24
    363c:	29 2b       	or	r18, r25
    363e:	c1 f1       	breq	.+112    	; 0x36b0 <main+0xb3c>
			if(pbTimer >= 30){
    3640:	20 91 81 04 	lds	r18, 0x0481	; 0x800481 <_ZL7pbTimer>
    3644:	2e 31       	cpi	r18, 0x1E	; 30
    3646:	90 f0       	brcs	.+36     	; 0x366c <main+0xaf8>
				if(pbLast == 2 || pbLast == 3){
    3648:	20 91 7a 04 	lds	r18, 0x047A	; 0x80047a <_ZL6pbLast>
    364c:	22 50       	subi	r18, 0x02	; 2
    364e:	22 30       	cpi	r18, 0x02	; 2
    3650:	48 f4       	brcc	.+18     	; 0x3664 <main+0xaf0>
					pb[2] *= 2;
    3652:	88 0f       	add	r24, r24
    3654:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <_ZL2pb+0x2>
					pb[3] *= 2;
    3658:	99 0f       	add	r25, r25
    365a:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <_ZL2pb+0x3>
					pbLast = 4;
    365e:	84 e0       	ldi	r24, 0x04	; 4
    3660:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <_ZL6pbLast>
				}
				pbTimer = 30;
    3664:	8e e1       	ldi	r24, 0x1E	; 30
    3666:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <_ZL7pbTimer>
    366a:	22 c0       	rjmp	.+68     	; 0x36b0 <main+0xb3c>
			}
			else if(pbLast == 0){
    366c:	20 91 7a 04 	lds	r18, 0x047A	; 0x80047a <_ZL6pbLast>
    3670:	21 11       	cpse	r18, r1
    3672:	1e c0       	rjmp	.+60     	; 0x36b0 <main+0xb3c>
				if(pb[2]){pbLast = 2;}
    3674:	88 23       	and	r24, r24
    3676:	31 f0       	breq	.+12     	; 0x3684 <main+0xb10>
    3678:	82 e0       	ldi	r24, 0x02	; 2
    367a:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <_ZL6pbLast>
				if(pb[3]){pbLast = 3;}
    367e:	91 11       	cpse	r25, r1
    3680:	05 c0       	rjmp	.+10     	; 0x368c <main+0xb18>
    3682:	28 c0       	rjmp	.+80     	; 0x36d4 <main+0xb60>
    3684:	99 23       	and	r25, r25
    3686:	11 f4       	brne	.+4      	; 0x368c <main+0xb18>
    3688:	0c 94 44 37 	jmp	0x6e88	; 0x6e88 <main+0x4314>
    368c:	83 e0       	ldi	r24, 0x03	; 3
    368e:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <_ZL6pbLast>
    3692:	28 c0       	rjmp	.+80     	; 0x36e4 <main+0xb70>
			}
		}
	}
	else{
		for(uint8_t i = 0;i < 6;i ++){
			pb[i] = 0;
    3694:	eb e7       	ldi	r30, 0x7B	; 123
    3696:	f4 e0       	ldi	r31, 0x04	; 4
    3698:	10 82       	st	Z, r1
    369a:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <_ZL2pb+0x1>
    369e:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <_ZL2pb+0x2>
    36a2:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <_ZL2pb+0x3>
    36a6:	10 92 7f 04 	sts	0x047F, r1	; 0x80047f <_ZL2pb+0x4>
    36aa:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <_ZL2pb+0x5>
    36ae:	04 c0       	rjmp	.+8      	; 0x36b8 <main+0xb44>
		}
	}
	if(!pb[2] && pbLast == 2){pb[2] = 3;pbLast = 0;}
    36b0:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    36b4:	81 11       	cpse	r24, r1
    36b6:	0a c0       	rjmp	.+20     	; 0x36cc <main+0xb58>
    36b8:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <_ZL6pbLast>
    36bc:	82 30       	cpi	r24, 0x02	; 2
    36be:	31 f4       	brne	.+12     	; 0x36cc <main+0xb58>
    36c0:	83 e0       	ldi	r24, 0x03	; 3
    36c2:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <_ZL2pb+0x2>
    36c6:	10 92 7a 04 	sts	0x047A, r1	; 0x80047a <_ZL6pbLast>
    36ca:	0c c0       	rjmp	.+24     	; 0x36e4 <main+0xb70>
	if(!pb[3] && pbLast == 3){pb[3] = 3;pbLast = 0;}
    36cc:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    36d0:	81 11       	cpse	r24, r1
    36d2:	08 c0       	rjmp	.+16     	; 0x36e4 <main+0xb70>
    36d4:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <_ZL6pbLast>
    36d8:	83 30       	cpi	r24, 0x03	; 3
    36da:	21 f4       	brne	.+8      	; 0x36e4 <main+0xb70>
    36dc:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <_ZL2pb+0x3>
    36e0:	10 92 7a 04 	sts	0x047A, r1	; 0x80047a <_ZL6pbLast>
    36e4:	eb e7       	ldi	r30, 0x7B	; 123
    36e6:	f4 e0       	ldi	r31, 0x04	; 4
		#ifndef DBG
		if(Sens.Ctrl(1) && !sysRun){
			//Servo PWM
			if(servoTmr >= 15){
				servoTmr = 0;
				IO1(1);IO2(1);IO3(1);
    36e8:	90 e0       	ldi	r25, 0x00	; 0
	}
	if(!pb[2] && pbLast == 2){pb[2] = 3;pbLast = 0;}
	if(!pb[3] && pbLast == 3){pb[3] = 3;pbLast = 0;}
	pbPress = 0;
	for(uint8_t i = 0;i < 6;i ++){
		if(pb[i] > 0 && pb[i] < 4){pbPress = 1;}
    36ea:	81 91       	ld	r24, Z+
    36ec:	81 50       	subi	r24, 0x01	; 1
    36ee:	83 30       	cpi	r24, 0x03	; 3
    36f0:	08 f4       	brcc	.+2      	; 0x36f4 <main+0xb80>
    36f2:	92 2d       	mov	r25, r2
		}
	}
	if(!pb[2] && pbLast == 2){pb[2] = 3;pbLast = 0;}
	if(!pb[3] && pbLast == 3){pb[3] = 3;pbLast = 0;}
	pbPress = 0;
	for(uint8_t i = 0;i < 6;i ++){
    36f4:	4e 16       	cp	r4, r30
    36f6:	5f 06       	cpc	r5, r31
    36f8:	c1 f7       	brne	.-16     	; 0x36ea <main+0xb76>
    36fa:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <_ZL7pbPress>
		if(pb[i] > 0 && pb[i] < 4){pbPress = 1;}
	}
	if(pb[2] == 1 || pb[3] == 1){pbPress = 0;}
    36fe:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    3702:	81 30       	cpi	r24, 0x01	; 1
    3704:	21 f0       	breq	.+8      	; 0x370e <main+0xb9a>
    3706:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    370a:	81 30       	cpi	r24, 0x01	; 1
    370c:	41 f4       	brne	.+16     	; 0x371e <main+0xbaa>
    370e:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <_ZL7pbPress>
		progSel = tmp2;
	}
}

void Interface(){
	if((menu == 0 || cal > 0 || testPD == 1) && !pbPress && !lowBatt && !sensOff){sample = 1;}
    3712:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    3716:	88 23       	and	r24, r24
    3718:	91 f0       	breq	.+36     	; 0x373e <main+0xbca>
    371a:	0c 94 54 38 	jmp	0x70a8	; 0x70a8 <main+0x4534>
    371e:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    3722:	88 23       	and	r24, r24
    3724:	41 f0       	breq	.+16     	; 0x3736 <main+0xbc2>
    3726:	90 91 38 04 	lds	r25, 0x0438	; 0x800438 <_ZL3cal>
    372a:	91 11       	cpse	r25, r1
    372c:	04 c0       	rjmp	.+8      	; 0x3736 <main+0xbc2>
    372e:	90 91 c6 03 	lds	r25, 0x03C6	; 0x8003c6 <_ZL6testPD>
    3732:	99 23       	and	r25, r25
    3734:	79 f0       	breq	.+30     	; 0x3754 <main+0xbe0>
    3736:	90 91 c8 03 	lds	r25, 0x03C8	; 0x8003c8 <_ZL7pbPress>
    373a:	91 11       	cpse	r25, r1
    373c:	0b c0       	rjmp	.+22     	; 0x3754 <main+0xbe0>
    373e:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <_ZL7lowBatt>
    3742:	91 11       	cpse	r25, r1
    3744:	07 c0       	rjmp	.+14     	; 0x3754 <main+0xbe0>
    3746:	90 91 c2 03 	lds	r25, 0x03C2	; 0x8003c2 <__data_end>
    374a:	91 11       	cpse	r25, r1
    374c:	03 c0       	rjmp	.+6      	; 0x3754 <main+0xbe0>
    374e:	d0 92 c7 03 	sts	0x03C7, r13	; 0x8003c7 <_ZL6sample>
    3752:	06 c0       	rjmp	.+12     	; 0x3760 <main+0xbec>
	else{sample = 0;}
    3754:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <_ZL6sample>
	if(pbPress || cal > 0){
    3758:	90 91 c8 03 	lds	r25, 0x03C8	; 0x8003c8 <_ZL7pbPress>
    375c:	91 11       	cpse	r25, r1
    375e:	06 c0       	rjmp	.+12     	; 0x376c <main+0xbf8>
    3760:	90 91 38 04 	lds	r25, 0x0438	; 0x800438 <_ZL3cal>
    3764:	99 23       	and	r25, r25
    3766:	11 f4       	brne	.+4      	; 0x376c <main+0xbf8>
    3768:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		pbPress = 0;
    376c:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <_ZL7pbPress>
		dspRfs = 1;
    3770:	d0 92 61 00 	sts	0x0061, r13	; 0x800061 <_ZL6dspRfs>
		if(submenu == 0 && menu > 0 && sidemenu == 0){
    3774:	90 91 84 04 	lds	r25, 0x0484	; 0x800484 <_ZL7submenu>
    3778:	91 11       	cpse	r25, r1
    377a:	0c 94 49 37 	jmp	0x6e92	; 0x6e92 <main+0x431e>
    377e:	88 23       	and	r24, r24
    3780:	11 f4       	brne	.+4      	; 0x3786 <main+0xc12>
    3782:	0c 94 49 37 	jmp	0x6e92	; 0x6e92 <main+0x431e>
    3786:	90 91 83 04 	lds	r25, 0x0483	; 0x800483 <_ZL8sidemenu>
    378a:	91 11       	cpse	r25, r1
    378c:	0c 94 7e 38 	jmp	0x70fc	; 0x70fc <main+0x4588>
			if(pb[0] == 1){
    3790:	eb e7       	ldi	r30, 0x7B	; 123
    3792:	f4 e0       	ldi	r31, 0x04	; 4
    3794:	90 81       	ld	r25, Z
    3796:	91 30       	cpi	r25, 0x01	; 1
    3798:	79 f4       	brne	.+30     	; 0x37b8 <main+0xc44>
				if(pointer == 1 && menu < 9){menu ++;}
    379a:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <_ZL7pointer>
    379e:	99 23       	and	r25, r25
    37a0:	29 f0       	breq	.+10     	; 0x37ac <main+0xc38>
    37a2:	89 30       	cpi	r24, 0x09	; 9
    37a4:	18 f4       	brcc	.+6      	; 0x37ac <main+0xc38>
    37a6:	8f 5f       	subi	r24, 0xFF	; 255
    37a8:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <_ZL4menu>
				pointer = 1;
    37ac:	d0 92 c9 03 	sts	0x03C9, r13	; 0x8003c9 <_ZL7pointer>
				LCD.Clear();
    37b0:	89 e0       	ldi	r24, 0x09	; 9
    37b2:	95 e0       	ldi	r25, 0x05	; 5
    37b4:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
			}
			if(pb[1] == 1){
    37b8:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <_ZL2pb+0x1>
    37bc:	81 30       	cpi	r24, 0x01	; 1
    37be:	89 f4       	brne	.+34     	; 0x37e2 <main+0xc6e>
				if(pointer == 0 && menu > 1){menu --;}
    37c0:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_ZL7pointer>
    37c4:	81 11       	cpse	r24, r1
    37c6:	07 c0       	rjmp	.+14     	; 0x37d6 <main+0xc62>
    37c8:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    37cc:	82 30       	cpi	r24, 0x02	; 2
    37ce:	18 f0       	brcs	.+6      	; 0x37d6 <main+0xc62>
    37d0:	81 50       	subi	r24, 0x01	; 1
    37d2:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <_ZL4menu>
				pointer = 0;
    37d6:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <_ZL7pointer>
				LCD.Clear();
    37da:	89 e0       	ldi	r24, 0x09	; 9
    37dc:	95 e0       	ldi	r25, 0x05	; 5
    37de:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
			}
			if(pb[2] == 3){
    37e2:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    37e6:	83 30       	cpi	r24, 0x03	; 3
    37e8:	51 f4       	brne	.+20     	; 0x37fe <main+0xc8a>
				menu = 0;pointer = 0;
    37ea:	10 92 85 04 	sts	0x0485, r1	; 0x800485 <_ZL4menu>
    37ee:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <_ZL7pointer>
				pb[2] = 0;
    37f2:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <_ZL2pb+0x2>
				LCD.Clear();}
    37f6:	89 e0       	ldi	r24, 0x09	; 9
    37f8:	95 e0       	ldi	r25, 0x05	; 5
    37fa:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
		}
		switch(menu+pointer){
    37fe:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    3802:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <_ZL7pointer>
    3806:	f0 e0       	ldi	r31, 0x00	; 0
    3808:	e8 0f       	add	r30, r24
    380a:	f1 1d       	adc	r31, r1
    380c:	eb 30       	cpi	r30, 0x0B	; 11
    380e:	f1 05       	cpc	r31, r1
    3810:	10 f0       	brcs	.+4      	; 0x3816 <main+0xca2>
    3812:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3816:	e6 5d       	subi	r30, 0xD6	; 214
    3818:	ff 4f       	sbci	r31, 0xFF	; 255
    381a:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
			//Idle
			case 0:
				if(!sysRun && !runDisp){
    381e:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <_ZL6sysRun>
    3822:	81 11       	cpse	r24, r1
    3824:	79 c0       	rjmp	.+242    	; 0x3918 <main+0xda4>
    3826:	80 91 cb 03 	lds	r24, 0x03CB	; 0x8003cb <_ZL7runDisp>
    382a:	81 11       	cpse	r24, r1
    382c:	75 c0       	rjmp	.+234    	; 0x3918 <main+0xda4>
					if(pb[3] == 3){
    382e:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    3832:	83 30       	cpi	r24, 0x03	; 3
    3834:	a9 f4       	brne	.+42     	; 0x3860 <main+0xcec>
						readConfMem();
    3836:	0e 94 2f 03 	call	0x65e	; 0x65e <_ZL11readConfMemv>
						readStopIdx();
    383a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    383e:	90 e0       	ldi	r25, 0x00	; 0
    3840:	8f 5b       	subi	r24, 0xBF	; 191
    3842:	9e 4f       	sbci	r25, 0xFE	; 254
    3844:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    3848:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <_ZL7idxStop>
						readStartIdx();
    384c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
						menu = 1;
    3850:	d0 92 85 04 	sts	0x0485, r13	; 0x800485 <_ZL4menu>
						pointer = 0;
    3854:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <_ZL7pointer>
						LCD.Clear();
    3858:	89 e0       	ldi	r24, 0x09	; 9
    385a:	95 e0       	ldi	r25, 0x05	; 5
    385c:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					}
					if(pb[4] && checkPointSel < 20){checkPointSel ++; updateCPselMem();}
    3860:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    3864:	88 23       	and	r24, r24
    3866:	71 f0       	breq	.+28     	; 0x3884 <main+0xd10>
    3868:	60 91 55 04 	lds	r22, 0x0455	; 0x800455 <_ZL13checkPointSel>
    386c:	64 31       	cpi	r22, 0x14	; 20
    386e:	50 f4       	brcc	.+20     	; 0x3884 <main+0xd10>
    3870:	6f 5f       	subi	r22, 0xFF	; 255
    3872:	60 93 55 04 	sts	0x0455, r22	; 0x800455 <_ZL13checkPointSel>
    3876:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    387a:	90 e0       	ldi	r25, 0x00	; 0
    387c:	89 5c       	subi	r24, 0xC9	; 201
    387e:	9e 4f       	sbci	r25, 0xFE	; 254
    3880:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
					if(pb[5] && checkPointSel > 0){checkPointSel --; updateCPselMem();}
    3884:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    3888:	88 23       	and	r24, r24
    388a:	71 f0       	breq	.+28     	; 0x38a8 <main+0xd34>
    388c:	60 91 55 04 	lds	r22, 0x0455	; 0x800455 <_ZL13checkPointSel>
    3890:	66 23       	and	r22, r22
    3892:	51 f0       	breq	.+20     	; 0x38a8 <main+0xd34>
    3894:	61 50       	subi	r22, 0x01	; 1
    3896:	60 93 55 04 	sts	0x0455, r22	; 0x800455 <_ZL13checkPointSel>
    389a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    389e:	90 e0       	ldi	r25, 0x00	; 0
    38a0:	89 5c       	subi	r24, 0xC9	; 201
    38a2:	9e 4f       	sbci	r25, 0xFE	; 254
    38a4:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
					if(pb[2] == 3){
    38a8:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    38ac:	83 30       	cpi	r24, 0x03	; 3
    38ae:	11 f0       	breq	.+4      	; 0x38b4 <main+0xd40>
    38b0:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
						LCD.Clear();
    38b4:	89 e0       	ldi	r24, 0x09	; 9
    38b6:	95 e0       	ldi	r25, 0x05	; 5
    38b8:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
						lowBatt = 0;
    38bc:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <_ZL7lowBatt>
						if(vbat <= VBAT_MIN_LIMIT){
    38c0:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_ZL4vbat>
    38c4:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <_ZL4vbat+0x1>
    38c8:	89 31       	cpi	r24, 0x19	; 25
    38ca:	9e 42       	sbci	r25, 0x2E	; 46
    38cc:	30 f4       	brcc	.+12     	; 0x38da <main+0xd66>
							runDisp = 1;
    38ce:	d0 92 cb 03 	sts	0x03CB, r13	; 0x8003cb <_ZL7runDisp>
							lowBatt = 1;
    38d2:	d0 92 c3 03 	sts	0x03C3, r13	; 0x8003c3 <_ZL7lowBatt>
    38d6:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
						}			
						else{			
							sysRun = 1;
    38da:	d0 92 c4 03 	sts	0x03C4, r13	; 0x8003c4 <_ZL6sysRun>
							idxPtr = checkPoint[checkPointSel];
    38de:	e0 91 55 04 	lds	r30, 0x0455	; 0x800455 <_ZL13checkPointSel>
    38e2:	f0 e0       	ldi	r31, 0x00	; 0
    38e4:	ea 5a       	subi	r30, 0xAA	; 170
    38e6:	fb 4f       	sbci	r31, 0xFB	; 251
    38e8:	80 81       	ld	r24, Z
    38ea:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZL6idxPtr>
							progPtr = progSel;
    38ee:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <_ZL7progSel>
    38f2:	90 93 44 04 	sts	0x0444, r25	; 0x800444 <_ZL7progPtr>
							if(idxPtr == 0){seq = 0;}
    38f6:	81 11       	cpse	r24, r1
    38f8:	03 c0       	rjmp	.+6      	; 0x3900 <main+0xd8c>
    38fa:	10 92 41 04 	sts	0x0441, r1	; 0x800441 <_ZL3seq>
    38fe:	02 c0       	rjmp	.+4      	; 0x3904 <main+0xd90>
							else{seq = 1;}
    3900:	d0 92 41 04 	sts	0x0441, r13	; 0x800441 <_ZL3seq>
							readRunMem = 1;
    3904:	d0 92 ce 03 	sts	0x03CE, r13	; 0x8003ce <_ZL10readRunMem>
							runDisp = 1;
    3908:	d0 92 cb 03 	sts	0x03CB, r13	; 0x8003cb <_ZL7runDisp>
							tout = 0;
    390c:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <_ZL4tout>
							Line.LinePos = 0;
    3910:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <Line+0x4>
    3914:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
						}
					}
				}
				else{
					if(pb[0] | pb[1] | pb[2] | (pb[3] == 3) | pb[4] | pb[5]){
    3918:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    391c:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    3920:	82 2b       	or	r24, r18
    3922:	28 2f       	mov	r18, r24
    3924:	30 e0       	ldi	r19, 0x00	; 0
    3926:	c4 01       	movw	r24, r8
    3928:	40 91 7e 04 	lds	r20, 0x047E	; 0x80047e <_ZL2pb+0x3>
    392c:	43 30       	cpi	r20, 0x03	; 3
    392e:	11 f0       	breq	.+4      	; 0x3934 <main+0xdc0>
    3930:	80 e0       	ldi	r24, 0x00	; 0
    3932:	90 e0       	ldi	r25, 0x00	; 0
    3934:	82 2b       	or	r24, r18
    3936:	93 2b       	or	r25, r19
    3938:	eb e7       	ldi	r30, 0x7B	; 123
    393a:	f4 e0       	ldi	r31, 0x04	; 4
    393c:	30 81       	ld	r19, Z
    393e:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    3942:	32 2b       	or	r19, r18
    3944:	20 91 7d 04 	lds	r18, 0x047D	; 0x80047d <_ZL2pb+0x2>
    3948:	23 2b       	or	r18, r19
    394a:	82 2b       	or	r24, r18
    394c:	89 2b       	or	r24, r25
    394e:	11 f4       	brne	.+4      	; 0x3954 <main+0xde0>
    3950:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
						pb[0] = pb[1] = pb[2] = pb[3] = pb[4] = pb[5] = 0;
    3954:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <_ZL2pb+0x5>
    3958:	10 92 7f 04 	sts	0x047F, r1	; 0x80047f <_ZL2pb+0x4>
    395c:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <_ZL2pb+0x3>
    3960:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <_ZL2pb+0x2>
    3964:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <_ZL2pb+0x1>
    3968:	10 82       	st	Z, r1
						sysRun = 0;
    396a:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
						runDisp = 0;
    396e:	10 92 cb 03 	sts	0x03CB, r1	; 0x8003cb <_ZL7runDisp>
						sample = 1;
    3972:	d0 92 c7 03 	sts	0x03C7, r13	; 0x8003c7 <_ZL6sample>
						lowBatt = 0;
    3976:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <_ZL7lowBatt>
						sensOff = 0;
    397a:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <__data_end>
						LCD.Clear();
    397e:	89 e0       	ldi	r24, 0x09	; 9
    3980:	95 e0       	ldi	r25, 0x05	; 5
    3982:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    3986:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
					}
				}
			break;
			//Program
			case 1:
				if(sidemenu > 0 && submenu == 0){
    398a:	10 91 83 04 	lds	r17, 0x0483	; 0x800483 <_ZL8sidemenu>
    398e:	11 23       	and	r17, r17
    3990:	11 f4       	brne	.+4      	; 0x3996 <main+0xe22>
    3992:	0c 94 74 37 	jmp	0x6ee8	; 0x6ee8 <main+0x4374>
    3996:	00 91 84 04 	lds	r16, 0x0484	; 0x800484 <_ZL7submenu>
    399a:	01 11       	cpse	r16, r1
    399c:	0c 94 6a 37 	jmp	0x6ed4	; 0x6ed4 <main+0x4360>
					sidemenu = _lim(sidemenu+pb[0]-pb[1], 1, 3);
    39a0:	eb e7       	ldi	r30, 0x7B	; 123
    39a2:	f4 e0       	ldi	r31, 0x04	; 4
    39a4:	20 81       	ld	r18, Z
    39a6:	81 2f       	mov	r24, r17
    39a8:	90 e0       	ldi	r25, 0x00	; 0
    39aa:	82 0f       	add	r24, r18
    39ac:	91 1d       	adc	r25, r1
    39ae:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    39b2:	82 1b       	sub	r24, r18
    39b4:	91 09       	sbc	r25, r1
    39b6:	18 16       	cp	r1, r24
    39b8:	19 06       	cpc	r1, r25
    39ba:	34 f4       	brge	.+12     	; 0x39c8 <main+0xe54>
    39bc:	84 30       	cpi	r24, 0x04	; 4
    39be:	91 05       	cpc	r25, r1
    39c0:	24 f0       	brlt	.+8      	; 0x39ca <main+0xe56>
    39c2:	83 e0       	ldi	r24, 0x03	; 3
    39c4:	90 e0       	ldi	r25, 0x00	; 0
    39c6:	01 c0       	rjmp	.+2      	; 0x39ca <main+0xe56>
    39c8:	8d 2d       	mov	r24, r13
    39ca:	80 93 83 04 	sts	0x0483, r24	; 0x800483 <_ZL8sidemenu>
					if(pb[2] == 3){sidemenu = 0;LCD.Clear();}
    39ce:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    39d2:	83 30       	cpi	r24, 0x03	; 3
    39d4:	31 f4       	brne	.+12     	; 0x39e2 <main+0xe6e>
    39d6:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    39da:	89 e0       	ldi	r24, 0x09	; 9
    39dc:	95 e0       	ldi	r25, 0x05	; 5
    39de:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					if(sidemenu == 1){
    39e2:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    39e6:	81 30       	cpi	r24, 0x01	; 1
    39e8:	09 f0       	breq	.+2      	; 0x39ec <main+0xe78>
    39ea:	7e c0       	rjmp	.+252    	; 0x3ae8 <main+0xf74>
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 9);
    39ec:	20 91 78 04 	lds	r18, 0x0478	; 0x800478 <_ZL6gpVar1>
    39f0:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    39f4:	90 e0       	ldi	r25, 0x00	; 0
    39f6:	82 0f       	add	r24, r18
    39f8:	91 1d       	adc	r25, r1
    39fa:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    39fe:	82 1b       	sub	r24, r18
    3a00:	91 09       	sbc	r25, r1
    3a02:	12 f4       	brpl	.+4      	; 0x3a08 <main+0xe94>
    3a04:	0c 94 61 37 	jmp	0x6ec2	; 0x6ec2 <main+0x434e>
    3a08:	8a 30       	cpi	r24, 0x0A	; 10
    3a0a:	91 05       	cpc	r25, r1
    3a0c:	14 f0       	brlt	.+4      	; 0x3a12 <main+0xe9e>
    3a0e:	89 e0       	ldi	r24, 0x09	; 9
    3a10:	90 e0       	ldi	r25, 0x00	; 0
    3a12:	08 2f       	mov	r16, r24
    3a14:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
						if(pb[3] == 3){copyProg(gpVar1);sidemenu = 0;LCD.Clear();}
    3a18:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    3a1c:	83 30       	cpi	r24, 0x03	; 3
    3a1e:	11 f0       	breq	.+4      	; 0x3a24 <main+0xeb0>
    3a20:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
	eeprom_update_byte(&brakeTime_eep, brakeTime);
	sysConfigs = (useATC<<1);
	eeprom_update_byte(&sysConfigs_eep, sysConfigs);
}
static void copyProg(uint8_t dst){
	uint8_t srcProg = progSel;
    3a24:	f0 90 77 04 	lds	r15, 0x0477	; 0x800477 <_ZL7progSel>
	uint8_t srcIdx = idxSel;
    3a28:	10 91 76 04 	lds	r17, 0x0476	; 0x800476 <_ZL6idxSel>
	for(idxSel = 1;idxSel <= 100;idxSel ++){
    3a2c:	d0 92 76 04 	sts	0x0476, r13	; 0x800476 <_ZL6idxSel>
		readProgMem(srcProg);
    3a30:	8f 2d       	mov	r24, r15
    3a32:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
		updateProgMem(dst);
    3a36:	80 2f       	mov	r24, r16
    3a38:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
	eeprom_update_byte(&sysConfigs_eep, sysConfigs);
}
static void copyProg(uint8_t dst){
	uint8_t srcProg = progSel;
	uint8_t srcIdx = idxSel;
	for(idxSel = 1;idxSel <= 100;idxSel ++){
    3a3c:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3a40:	8f 5f       	subi	r24, 0xFF	; 255
    3a42:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
    3a46:	85 36       	cpi	r24, 0x65	; 101
    3a48:	98 f3       	brcs	.-26     	; 0x3a30 <main+0xebc>
		readProgMem(srcProg);
		updateProgMem(dst);
	}
	idxSel = srcIdx;
    3a4a:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <_ZL6idxSel>
	readCheckPoint();
    3a4e:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
    3a52:	15 e1       	ldi	r17, 0x15	; 21
    3a54:	16 9f       	mul	r17, r22
    3a56:	b0 01       	movw	r22, r0
    3a58:	11 24       	eor	r1, r1
    3a5a:	6b 59       	subi	r22, 0x9B	; 155
    3a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    3a5e:	45 e1       	ldi	r20, 0x15	; 21
    3a60:	50 e0       	ldi	r21, 0x00	; 0
    3a62:	86 e5       	ldi	r24, 0x56	; 86
    3a64:	94 e0       	ldi	r25, 0x04	; 4
    3a66:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
	readCPselMem();
    3a6a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3a6e:	90 e0       	ldi	r25, 0x00	; 0
    3a70:	89 5c       	subi	r24, 0xC9	; 201
    3a72:	9e 4f       	sbci	r25, 0xFE	; 254
    3a74:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    3a78:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <_ZL13checkPointSel>
	readStartIdx();
    3a7c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
	readStopIdx();
    3a80:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3a84:	90 e0       	ldi	r25, 0x00	; 0
    3a86:	8f 5b       	subi	r24, 0xBF	; 191
    3a88:	9e 4f       	sbci	r25, 0xFE	; 254
    3a8a:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    3a8e:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <_ZL7idxStop>
	progSel = dst;
    3a92:	00 93 77 04 	sts	0x0477, r16	; 0x800477 <_ZL7progSel>
	updateCheckPoint();
    3a96:	10 9f       	mul	r17, r16
    3a98:	b0 01       	movw	r22, r0
    3a9a:	11 24       	eor	r1, r1
    3a9c:	6b 59       	subi	r22, 0x9B	; 155
    3a9e:	7f 4f       	sbci	r23, 0xFF	; 255
    3aa0:	45 e1       	ldi	r20, 0x15	; 21
    3aa2:	50 e0       	ldi	r21, 0x00	; 0
    3aa4:	86 e5       	ldi	r24, 0x56	; 86
    3aa6:	94 e0       	ldi	r25, 0x04	; 4
    3aa8:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
	updateCPselMem();
    3aac:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3ab0:	90 e0       	ldi	r25, 0x00	; 0
    3ab2:	60 91 55 04 	lds	r22, 0x0455	; 0x800455 <_ZL13checkPointSel>
    3ab6:	89 5c       	subi	r24, 0xC9	; 201
    3ab8:	9e 4f       	sbci	r25, 0xFE	; 254
    3aba:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
	updateStartIdx();
    3abe:	0e 94 b9 02 	call	0x572	; 0x572 <_ZL14updateStartIdxv>
	updateStopIdx();
    3ac2:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3ac6:	90 e0       	ldi	r25, 0x00	; 0
    3ac8:	60 91 75 04 	lds	r22, 0x0475	; 0x800475 <_ZL7idxStop>
    3acc:	8f 5b       	subi	r24, 0xBF	; 191
    3ace:	9e 4f       	sbci	r25, 0xFE	; 254
    3ad0:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
	progSel = srcProg;
    3ad4:	f0 92 77 04 	sts	0x0477, r15	; 0x800477 <_ZL7progSel>
				if(sidemenu > 0 && submenu == 0){
					sidemenu = _lim(sidemenu+pb[0]-pb[1], 1, 3);
					if(pb[2] == 3){sidemenu = 0;LCD.Clear();}
					if(sidemenu == 1){
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 9);
						if(pb[3] == 3){copyProg(gpVar1);sidemenu = 0;LCD.Clear();}
    3ad8:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    3adc:	89 e0       	ldi	r24, 0x09	; 9
    3ade:	95 e0       	ldi	r25, 0x05	; 5
    3ae0:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    3ae4:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
					}
					else if(sidemenu == 2){
    3ae8:	82 30       	cpi	r24, 0x02	; 2
    3aea:	09 f0       	breq	.+2      	; 0x3aee <main+0xf7a>
    3aec:	d4 c0       	rjmp	.+424    	; 0x3c96 <main+0x1122>
						if(pb[3] == 3){invProg();sidemenu = 0;LCD.Clear();}
    3aee:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    3af2:	83 30       	cpi	r24, 0x03	; 3
    3af4:	11 f0       	breq	.+4      	; 0x3afa <main+0xf86>
    3af6:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
	updateStartIdx();
	updateStopIdx();
	progSel = srcProg;
}
static void invProg(){
	uint8_t srcIdx = idxSel;
    3afa:	e0 90 76 04 	lds	r14, 0x0476	; 0x800476 <_ZL6idxSel>
	for(idxSel = 1;idxSel <= 100;idxSel ++){
    3afe:	d0 92 76 04 	sts	0x0476, r13	; 0x800476 <_ZL6idxSel>
				case 14:gpVar1 = 1;break;
				default:gpVar1 = (indexBuff[0]&0b11110000)>>4;break; 
			}
			setMaskByte(&indexBuff[0], 0b11110000, gpVar1<<4);
			switch((indexBuff[7]>>4)){
				case 3:gpVar1 = 4;break;
    3b02:	68 94       	set
    3b04:	ff 24       	eor	r15, r15
    3b06:	f2 f8       	bld	r15, 2
				case 4:gpVar1 = 3;break;
    3b08:	03 e0       	ldi	r16, 0x03	; 3
				case 8:gpVar1 = 7;break;
				case 9:gpVar1 = 6;break;
				case 10:gpVar1 = 5;break;
				case 11:gpVar1 = 4;break;
				case 12:gpVar1 = 3;break;
				case 13:gpVar1 = 2;break;
    3b0a:	12 e0       	ldi	r17, 0x02	; 2
				case 3:gpVar1 = 12;break;
				case 4:gpVar1 = 11;break;
				case 5:gpVar1 = 10;break;
				case 6:gpVar1 = 9;break;
				case 7:gpVar1 = 8;break;
				case 8:gpVar1 = 7;break;
    3b0c:	0f 2e       	mov	r0, r31
    3b0e:	f7 e0       	ldi	r31, 0x07	; 7
    3b10:	cf 2e       	mov	r12, r31
    3b12:	f0 2d       	mov	r31, r0
	progSel = srcProg;
}
static void invProg(){
	uint8_t srcIdx = idxSel;
	for(idxSel = 1;idxSel <= 100;idxSel ++){
		readProgMem(progSel);
    3b14:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3b18:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
    3b1c:	f3 01       	movw	r30, r6
    3b1e:	80 81       	ld	r24, Z
    3b20:	8f 70       	andi	r24, 0x0F	; 15
		if((indexBuff[0]&0b00001111) <= 4){
    3b22:	28 2f       	mov	r18, r24
    3b24:	30 e0       	ldi	r19, 0x00	; 0
    3b26:	25 30       	cpi	r18, 0x05	; 5
    3b28:	31 05       	cpc	r19, r1
    3b2a:	0c f0       	brlt	.+2      	; 0x3b2e <main+0xfba>
    3b2c:	95 c0       	rjmp	.+298    	; 0x3c58 <main+0x10e4>
			switch(indexBuff[0]&0b00001111){
    3b2e:	81 30       	cpi	r24, 0x01	; 1
    3b30:	19 f0       	breq	.+6      	; 0x3b38 <main+0xfc4>
    3b32:	82 30       	cpi	r24, 0x02	; 2
    3b34:	21 f0       	breq	.+8      	; 0x3b3e <main+0xfca>
    3b36:	06 c0       	rjmp	.+12     	; 0x3b44 <main+0xfd0>
				case 1:gpVar1 = 2;break;
    3b38:	10 93 78 04 	sts	0x0478, r17	; 0x800478 <_ZL6gpVar1>
    3b3c:	05 c0       	rjmp	.+10     	; 0x3b48 <main+0xfd4>
				case 2:gpVar1 = 1;break;
    3b3e:	d0 92 78 04 	sts	0x0478, r13	; 0x800478 <_ZL6gpVar1>
    3b42:	02 c0       	rjmp	.+4      	; 0x3b48 <main+0xfd4>
				default:gpVar1 = indexBuff[0]&0b00001111;break;
    3b44:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
			}
			setMaskByte(&indexBuff[0], 0b00001111, gpVar1);
    3b48:	40 91 78 04 	lds	r20, 0x0478	; 0x800478 <_ZL6gpVar1>
    3b4c:	6f e0       	ldi	r22, 0x0F	; 15
    3b4e:	8a 81       	ldd	r24, Y+2	; 0x02
    3b50:	9b 81       	ldd	r25, Y+3	; 0x03
    3b52:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			switch((indexBuff[0]>>4)){
    3b56:	f3 01       	movw	r30, r6
    3b58:	80 81       	ld	r24, Z
    3b5a:	e8 2f       	mov	r30, r24
    3b5c:	f0 e0       	ldi	r31, 0x00	; 0
    3b5e:	f5 95       	asr	r31
    3b60:	e7 95       	ror	r30
    3b62:	f5 95       	asr	r31
    3b64:	e7 95       	ror	r30
    3b66:	f5 95       	asr	r31
    3b68:	e7 95       	ror	r30
    3b6a:	f5 95       	asr	r31
    3b6c:	e7 95       	ror	r30
    3b6e:	31 97       	sbiw	r30, 0x01	; 1
    3b70:	ee 30       	cpi	r30, 0x0E	; 14
    3b72:	f1 05       	cpc	r31, r1
    3b74:	b8 f5       	brcc	.+110    	; 0x3be4 <main+0x1070>
    3b76:	eb 5c       	subi	r30, 0xCB	; 203
    3b78:	ff 4f       	sbci	r31, 0xFF	; 255
    3b7a:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
				case 1:gpVar1 = 14;break;
    3b7e:	8e e0       	ldi	r24, 0x0E	; 14
    3b80:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    3b84:	33 c0       	rjmp	.+102    	; 0x3bec <main+0x1078>
				case 2:gpVar1 = 13;break;
    3b86:	8d e0       	ldi	r24, 0x0D	; 13
    3b88:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    3b8c:	2f c0       	rjmp	.+94     	; 0x3bec <main+0x1078>
				case 3:gpVar1 = 12;break;
    3b8e:	fc e0       	ldi	r31, 0x0C	; 12
    3b90:	f0 93 78 04 	sts	0x0478, r31	; 0x800478 <_ZL6gpVar1>
    3b94:	2b c0       	rjmp	.+86     	; 0x3bec <main+0x1078>
				case 4:gpVar1 = 11;break;
    3b96:	2b e0       	ldi	r18, 0x0B	; 11
    3b98:	20 93 78 04 	sts	0x0478, r18	; 0x800478 <_ZL6gpVar1>
    3b9c:	27 c0       	rjmp	.+78     	; 0x3bec <main+0x1078>
				case 5:gpVar1 = 10;break;
    3b9e:	3a e0       	ldi	r19, 0x0A	; 10
    3ba0:	30 93 78 04 	sts	0x0478, r19	; 0x800478 <_ZL6gpVar1>
    3ba4:	23 c0       	rjmp	.+70     	; 0x3bec <main+0x1078>
				case 6:gpVar1 = 9;break;
    3ba6:	49 e0       	ldi	r20, 0x09	; 9
    3ba8:	40 93 78 04 	sts	0x0478, r20	; 0x800478 <_ZL6gpVar1>
    3bac:	1f c0       	rjmp	.+62     	; 0x3bec <main+0x1078>
				case 7:gpVar1 = 8;break;
    3bae:	58 e0       	ldi	r21, 0x08	; 8
    3bb0:	50 93 78 04 	sts	0x0478, r21	; 0x800478 <_ZL6gpVar1>
    3bb4:	1b c0       	rjmp	.+54     	; 0x3bec <main+0x1078>
				case 8:gpVar1 = 7;break;
    3bb6:	c0 92 78 04 	sts	0x0478, r12	; 0x800478 <_ZL6gpVar1>
    3bba:	18 c0       	rjmp	.+48     	; 0x3bec <main+0x1078>
				case 9:gpVar1 = 6;break;
    3bbc:	66 e0       	ldi	r22, 0x06	; 6
    3bbe:	60 93 78 04 	sts	0x0478, r22	; 0x800478 <_ZL6gpVar1>
    3bc2:	14 c0       	rjmp	.+40     	; 0x3bec <main+0x1078>
				case 10:gpVar1 = 5;break;
    3bc4:	75 e0       	ldi	r23, 0x05	; 5
    3bc6:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <_ZL6gpVar1>
    3bca:	10 c0       	rjmp	.+32     	; 0x3bec <main+0x1078>
				case 11:gpVar1 = 4;break;
    3bcc:	f0 92 78 04 	sts	0x0478, r15	; 0x800478 <_ZL6gpVar1>
    3bd0:	0d c0       	rjmp	.+26     	; 0x3bec <main+0x1078>
				case 12:gpVar1 = 3;break;
    3bd2:	00 93 78 04 	sts	0x0478, r16	; 0x800478 <_ZL6gpVar1>
    3bd6:	0a c0       	rjmp	.+20     	; 0x3bec <main+0x1078>
				case 13:gpVar1 = 2;break;
    3bd8:	10 93 78 04 	sts	0x0478, r17	; 0x800478 <_ZL6gpVar1>
    3bdc:	07 c0       	rjmp	.+14     	; 0x3bec <main+0x1078>
				case 14:gpVar1 = 1;break;
    3bde:	d0 92 78 04 	sts	0x0478, r13	; 0x800478 <_ZL6gpVar1>
    3be2:	04 c0       	rjmp	.+8      	; 0x3bec <main+0x1078>
				default:gpVar1 = (indexBuff[0]&0b11110000)>>4;break; 
    3be4:	82 95       	swap	r24
    3be6:	8f 70       	andi	r24, 0x0F	; 15
    3be8:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
			}
			setMaskByte(&indexBuff[0], 0b11110000, gpVar1<<4);
    3bec:	40 91 78 04 	lds	r20, 0x0478	; 0x800478 <_ZL6gpVar1>
    3bf0:	42 95       	swap	r20
    3bf2:	40 7f       	andi	r20, 0xF0	; 240
    3bf4:	60 ef       	ldi	r22, 0xF0	; 240
    3bf6:	8a 81       	ldd	r24, Y+2	; 0x02
    3bf8:	9b 81       	ldd	r25, Y+3	; 0x03
    3bfa:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			switch((indexBuff[7]>>4)){
    3bfe:	f3 01       	movw	r30, r6
    3c00:	87 81       	ldd	r24, Z+7	; 0x07
    3c02:	28 2f       	mov	r18, r24
    3c04:	30 e0       	ldi	r19, 0x00	; 0
    3c06:	35 95       	asr	r19
    3c08:	27 95       	ror	r18
    3c0a:	35 95       	asr	r19
    3c0c:	27 95       	ror	r18
    3c0e:	35 95       	asr	r19
    3c10:	27 95       	ror	r18
    3c12:	35 95       	asr	r19
    3c14:	27 95       	ror	r18
    3c16:	23 30       	cpi	r18, 0x03	; 3
    3c18:	31 05       	cpc	r19, r1
    3c1a:	21 f0       	breq	.+8      	; 0x3c24 <main+0x10b0>
    3c1c:	24 30       	cpi	r18, 0x04	; 4
    3c1e:	31 05       	cpc	r19, r1
    3c20:	21 f0       	breq	.+8      	; 0x3c2a <main+0x10b6>
    3c22:	06 c0       	rjmp	.+12     	; 0x3c30 <main+0x10bc>
				case 3:gpVar1 = 4;break;
    3c24:	f0 92 78 04 	sts	0x0478, r15	; 0x800478 <_ZL6gpVar1>
    3c28:	07 c0       	rjmp	.+14     	; 0x3c38 <main+0x10c4>
				case 4:gpVar1 = 3;break;
    3c2a:	00 93 78 04 	sts	0x0478, r16	; 0x800478 <_ZL6gpVar1>
    3c2e:	04 c0       	rjmp	.+8      	; 0x3c38 <main+0x10c4>
				default:gpVar1 = (indexBuff[7]&0b11110000)>>4;break;
    3c30:	82 95       	swap	r24
    3c32:	8f 70       	andi	r24, 0x0F	; 15
    3c34:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
			}
			setMaskByte(&indexBuff[7], 0b11110000, gpVar1<<4);
    3c38:	40 91 78 04 	lds	r20, 0x0478	; 0x800478 <_ZL6gpVar1>
    3c3c:	42 95       	swap	r20
    3c3e:	40 7f       	andi	r20, 0xF0	; 240
    3c40:	60 ef       	ldi	r22, 0xF0	; 240
    3c42:	82 e7       	ldi	r24, 0x72	; 114
    3c44:	94 e0       	ldi	r25, 0x04	; 4
    3c46:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			gpVar1 = indexBuff[3];
    3c4a:	f3 01       	movw	r30, r6
    3c4c:	83 81       	ldd	r24, Z+3	; 0x03
    3c4e:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
			indexBuff[3] = indexBuff[4];
    3c52:	94 81       	ldd	r25, Z+4	; 0x04
    3c54:	93 83       	std	Z+3, r25	; 0x03
			indexBuff[4] = gpVar1;
    3c56:	84 83       	std	Z+4, r24	; 0x04
		}
		updateProgMem(progSel);
    3c58:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3c5c:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
	updateStopIdx();
	progSel = srcProg;
}
static void invProg(){
	uint8_t srcIdx = idxSel;
	for(idxSel = 1;idxSel <= 100;idxSel ++){
    3c60:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3c64:	8f 5f       	subi	r24, 0xFF	; 255
    3c66:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
    3c6a:	85 36       	cpi	r24, 0x65	; 101
    3c6c:	08 f4       	brcc	.+2      	; 0x3c70 <main+0x10fc>
    3c6e:	52 cf       	rjmp	.-348    	; 0x3b14 <main+0xfa0>
			indexBuff[3] = indexBuff[4];
			indexBuff[4] = gpVar1;
		}
		updateProgMem(progSel);
	}
	readStartIdx();
    3c70:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
	progInv = !progInv;
    3c74:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <_ZL7progInv>
    3c78:	8d 25       	eor	r24, r13
    3c7a:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <_ZL7progInv>
	updateStartIdx();
    3c7e:	0e 94 b9 02 	call	0x572	; 0x572 <_ZL14updateStartIdxv>
	idxSel = srcIdx;
    3c82:	e0 92 76 04 	sts	0x0476, r14	; 0x800476 <_ZL6idxSel>
					if(sidemenu == 1){
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 9);
						if(pb[3] == 3){copyProg(gpVar1);sidemenu = 0;LCD.Clear();}
					}
					else if(sidemenu == 2){
						if(pb[3] == 3){invProg();sidemenu = 0;LCD.Clear();}
    3c86:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    3c8a:	89 e0       	ldi	r24, 0x09	; 9
    3c8c:	95 e0       	ldi	r25, 0x05	; 5
    3c8e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    3c92:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
					}
					else{if(pb[3] == 3){deleteProg();sidemenu = 0;LCD.Clear();}}
    3c96:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    3c9a:	83 30       	cpi	r24, 0x03	; 3
    3c9c:	11 f0       	breq	.+4      	; 0x3ca2 <main+0x112e>
    3c9e:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3ca2:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <_ZL10deleteProgv>
    3ca6:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    3caa:	89 e0       	ldi	r24, 0x09	; 9
    3cac:	95 e0       	ldi	r25, 0x05	; 5
    3cae:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    3cb2:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
				}
				else if(submenu > 0){
					if(sidemenu == 0){
						switch(submenu){
    3cb6:	89 30       	cpi	r24, 0x09	; 9
    3cb8:	38 f4       	brcc	.+14     	; 0x3cc8 <main+0x1154>
    3cba:	85 30       	cpi	r24, 0x05	; 5
    3cbc:	08 f0       	brcs	.+2      	; 0x3cc0 <main+0x114c>
    3cbe:	01 c2       	rjmp	.+1026   	; 0x40c2 <main+0x154e>
    3cc0:	81 30       	cpi	r24, 0x01	; 1
    3cc2:	38 f4       	brcc	.+14     	; 0x3cd2 <main+0x115e>
    3cc4:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3cc8:	8d 30       	cpi	r24, 0x0D	; 13
    3cca:	08 f4       	brcc	.+2      	; 0x3cce <main+0x115a>
    3ccc:	82 c3       	rjmp	.+1796   	; 0x43d2 <main+0x185e>
    3cce:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
							case 1 ... 4:
								uppDsp = 0;
    3cd2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
								if(idxSel > 0){submenu = _loop(submenu+pb[1]-pb[0], 1, 4);}
    3cd6:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <_ZL6idxSel>
    3cda:	99 23       	and	r25, r25
    3cdc:	d1 f0       	breq	.+52     	; 0x3d12 <main+0x119e>
    3cde:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    3ce2:	eb e7       	ldi	r30, 0x7B	; 123
    3ce4:	f4 e0       	ldi	r31, 0x04	; 4
    3ce6:	40 81       	ld	r20, Z
    3ce8:	29 2f       	mov	r18, r25
    3cea:	30 e0       	ldi	r19, 0x00	; 0
    3cec:	28 0f       	add	r18, r24
    3cee:	31 1d       	adc	r19, r1
    3cf0:	24 1b       	sub	r18, r20
    3cf2:	31 09       	sbc	r19, r1
    3cf4:	12 16       	cp	r1, r18
    3cf6:	13 06       	cpc	r1, r19
    3cf8:	34 f4       	brge	.+12     	; 0x3d06 <main+0x1192>
    3cfa:	25 30       	cpi	r18, 0x05	; 5
    3cfc:	31 05       	cpc	r19, r1
    3cfe:	2c f4       	brge	.+10     	; 0x3d0a <main+0x1196>
    3d00:	89 0f       	add	r24, r25
    3d02:	84 1b       	sub	r24, r20
    3d04:	03 c0       	rjmp	.+6      	; 0x3d0c <main+0x1198>
    3d06:	84 e0       	ldi	r24, 0x04	; 4
    3d08:	01 c0       	rjmp	.+2      	; 0x3d0c <main+0x1198>
    3d0a:	8d 2d       	mov	r24, r13
    3d0c:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    3d10:	19 c0       	rjmp	.+50     	; 0x3d44 <main+0x11d0>
								else{submenu = _loop(submenu+pb[1]-pb[0], 1, 3);}
    3d12:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    3d16:	eb e7       	ldi	r30, 0x7B	; 123
    3d18:	f4 e0       	ldi	r31, 0x04	; 4
    3d1a:	40 81       	ld	r20, Z
    3d1c:	29 2f       	mov	r18, r25
    3d1e:	30 e0       	ldi	r19, 0x00	; 0
    3d20:	28 0f       	add	r18, r24
    3d22:	31 1d       	adc	r19, r1
    3d24:	24 1b       	sub	r18, r20
    3d26:	31 09       	sbc	r19, r1
    3d28:	12 16       	cp	r1, r18
    3d2a:	13 06       	cpc	r1, r19
    3d2c:	34 f4       	brge	.+12     	; 0x3d3a <main+0x11c6>
    3d2e:	24 30       	cpi	r18, 0x04	; 4
    3d30:	31 05       	cpc	r19, r1
    3d32:	2c f4       	brge	.+10     	; 0x3d3e <main+0x11ca>
    3d34:	89 0f       	add	r24, r25
    3d36:	84 1b       	sub	r24, r20
    3d38:	03 c0       	rjmp	.+6      	; 0x3d40 <main+0x11cc>
    3d3a:	83 e0       	ldi	r24, 0x03	; 3
    3d3c:	01 c0       	rjmp	.+2      	; 0x3d40 <main+0x11cc>
    3d3e:	8d 2d       	mov	r24, r13
    3d40:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
								if(pb[2] == 3){
    3d44:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    3d48:	83 30       	cpi	r24, 0x03	; 3
    3d4a:	71 f4       	brne	.+28     	; 0x3d68 <main+0x11f4>
									uppDsp = 1;
    3d4c:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
									submenu = 0;updateProgMem(progSel);updateStartIdx();LCD.Clear();}
    3d50:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    3d54:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3d58:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
    3d5c:	0e 94 b9 02 	call	0x572	; 0x572 <_ZL14updateStartIdxv>
    3d60:	89 e0       	ldi	r24, 0x09	; 9
    3d62:	95 e0       	ldi	r25, 0x05	; 5
    3d64:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
								if((indexBuff[0]&0b00001111) != 8){
    3d68:	f3 01       	movw	r30, r6
    3d6a:	80 81       	ld	r24, Z
    3d6c:	8f 70       	andi	r24, 0x0F	; 15
    3d6e:	88 30       	cpi	r24, 0x08	; 8
    3d70:	99 f0       	breq	.+38     	; 0x3d98 <main+0x1224>
									if(pb[3] == 3){
    3d72:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    3d76:	83 30       	cpi	r24, 0x03	; 3
    3d78:	79 f4       	brne	.+30     	; 0x3d98 <main+0x1224>
										uppDsp = 1;
    3d7a:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
										if(idxSel > 0){submenu = 5;LCD.Clear();}
    3d7e:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3d82:	88 23       	and	r24, r24
    3d84:	11 f4       	brne	.+4      	; 0x3d8a <main+0x1216>
    3d86:	0c 94 7c 37 	jmp	0x6ef8	; 0x6ef8 <main+0x4384>
    3d8a:	85 e0       	ldi	r24, 0x05	; 5
    3d8c:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    3d90:	89 e0       	ldi	r24, 0x09	; 9
    3d92:	95 e0       	ldi	r25, 0x05	; 5
    3d94:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
									}
								}
								switch(submenu){
    3d98:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    3d9c:	82 30       	cpi	r24, 0x02	; 2
    3d9e:	09 f4       	brne	.+2      	; 0x3da2 <main+0x122e>
    3da0:	65 c0       	rjmp	.+202    	; 0x3e6c <main+0x12f8>
    3da2:	20 f4       	brcc	.+8      	; 0x3dac <main+0x1238>
    3da4:	81 30       	cpi	r24, 0x01	; 1
    3da6:	51 f0       	breq	.+20     	; 0x3dbc <main+0x1248>
    3da8:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3dac:	83 30       	cpi	r24, 0x03	; 3
    3dae:	09 f4       	brne	.+2      	; 0x3db2 <main+0x123e>
    3db0:	18 c1       	rjmp	.+560    	; 0x3fe2 <main+0x146e>
    3db2:	84 30       	cpi	r24, 0x04	; 4
    3db4:	09 f4       	brne	.+2      	; 0x3db8 <main+0x1244>
    3db6:	5e c1       	rjmp	.+700    	; 0x4074 <main+0x1500>
    3db8:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
									case 1:
										if(pb[4] == 1 && idxSel < 100){
    3dbc:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    3dc0:	81 30       	cpi	r24, 0x01	; 1
    3dc2:	b9 f4       	brne	.+46     	; 0x3df2 <main+0x127e>
    3dc4:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3dc8:	84 36       	cpi	r24, 0x64	; 100
    3dca:	98 f4       	brcc	.+38     	; 0x3df2 <main+0x127e>
											updateProgMem(progSel);
    3dcc:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3dd0:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
											updateStartIdx();
    3dd4:	0e 94 b9 02 	call	0x572	; 0x572 <_ZL14updateStartIdxv>
											idxSel ++;
    3dd8:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3ddc:	8f 5f       	subi	r24, 0xFF	; 255
    3dde:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
											readProgMem(progSel);
    3de2:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3de6:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
											readSensMem();
    3dea:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
											uppDsp = 0;
    3dee:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
										}
										if(pb[5] == 1 && idxSel > 0){
    3df2:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    3df6:	81 30       	cpi	r24, 0x01	; 1
    3df8:	01 f5       	brne	.+64     	; 0x3e3a <main+0x12c6>
    3dfa:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3dfe:	88 23       	and	r24, r24
    3e00:	11 f4       	brne	.+4      	; 0x3e06 <main+0x1292>
    3e02:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
											updateProgMem(progSel);
    3e06:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3e0a:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
											idxSel --;
    3e0e:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3e12:	81 50       	subi	r24, 0x01	; 1
    3e14:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
											readProgMem(progSel);
    3e18:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    3e1c:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
											readStartIdx();
    3e20:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
											readSensMem();
    3e24:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
											if(idxSel == 0){uppDsp = 1;}
    3e28:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3e2c:	81 11       	cpse	r24, r1
    3e2e:	0c 94 93 37 	jmp	0x6f26	; 0x6f26 <main+0x43b2>
    3e32:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
    3e36:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
										}
										if(pb[3] == 2 && idxSel > 0){uppDsp = 1;sidemenu = 1;gpVar1 = idxSel;shortDisp_P(3, idxMenuStr);}
    3e3a:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    3e3e:	82 30       	cpi	r24, 0x02	; 2
    3e40:	11 f0       	breq	.+4      	; 0x3e46 <main+0x12d2>
    3e42:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3e46:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3e4a:	88 23       	and	r24, r24
    3e4c:	11 f4       	brne	.+4      	; 0x3e52 <main+0x12de>
    3e4e:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3e52:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
    3e56:	d0 92 83 04 	sts	0x0483, r13	; 0x800483 <_ZL8sidemenu>
    3e5a:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    3e5e:	6a e7       	ldi	r22, 0x7A	; 122
    3e60:	71 e0       	ldi	r23, 0x01	; 1
    3e62:	83 e0       	ldi	r24, 0x03	; 3
    3e64:	0e 94 02 07 	call	0xe04	; 0xe04 <_ZL11shortDisp_PhPKc>
    3e68:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
									break;
									case 2:
										if(idxSel == 0){indexBuff[5] = _lim(indexBuff[5]+pb[4]-pb[5], 0, 255);}
    3e6c:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    3e70:	81 11       	cpse	r24, r1
    3e72:	16 c0       	rjmp	.+44     	; 0x3ea0 <main+0x132c>
    3e74:	f3 01       	movw	r30, r6
    3e76:	25 81       	ldd	r18, Z+5	; 0x05
    3e78:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    3e7c:	90 e0       	ldi	r25, 0x00	; 0
    3e7e:	82 0f       	add	r24, r18
    3e80:	91 1d       	adc	r25, r1
    3e82:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    3e86:	82 1b       	sub	r24, r18
    3e88:	91 09       	sbc	r25, r1
    3e8a:	32 f0       	brmi	.+12     	; 0x3e98 <main+0x1324>
    3e8c:	8f 3f       	cpi	r24, 0xFF	; 255
    3e8e:	91 05       	cpc	r25, r1
    3e90:	11 f0       	breq	.+4      	; 0x3e96 <main+0x1322>
    3e92:	0c f0       	brlt	.+2      	; 0x3e96 <main+0x1322>
    3e94:	8f ef       	ldi	r24, 0xFF	; 255
    3e96:	18 2f       	mov	r17, r24
    3e98:	f3 01       	movw	r30, r6
    3e9a:	15 83       	std	Z+5, r17	; 0x05
    3e9c:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
										else{
											setMaskByte(&indexBuff[0], 0b00001111, _lim((indexBuff[0]&0b00001111)+pb[4]-pb[5], 0, 8));
    3ea0:	f0 90 7f 04 	lds	r15, 0x047F	; 0x80047f <_ZL2pb+0x4>
    3ea4:	00 91 80 04 	lds	r16, 0x0480	; 0x800480 <_ZL2pb+0x5>
    3ea8:	f3 01       	movw	r30, r6
    3eaa:	20 81       	ld	r18, Z
    3eac:	2f 70       	andi	r18, 0x0F	; 15
    3eae:	8f 2d       	mov	r24, r15
    3eb0:	90 e0       	ldi	r25, 0x00	; 0
    3eb2:	82 0f       	add	r24, r18
    3eb4:	91 1d       	adc	r25, r1
    3eb6:	80 1b       	sub	r24, r16
    3eb8:	91 09       	sbc	r25, r1
    3eba:	32 f0       	brmi	.+12     	; 0x3ec8 <main+0x1354>
    3ebc:	89 30       	cpi	r24, 0x09	; 9
    3ebe:	91 05       	cpc	r25, r1
    3ec0:	14 f0       	brlt	.+4      	; 0x3ec6 <main+0x1352>
    3ec2:	88 e0       	ldi	r24, 0x08	; 8
    3ec4:	90 e0       	ldi	r25, 0x00	; 0
    3ec6:	18 2f       	mov	r17, r24
    3ec8:	41 2f       	mov	r20, r17
    3eca:	6f e0       	ldi	r22, 0x0F	; 15
    3ecc:	c3 01       	movw	r24, r6
    3ece:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
											//Preset Values
											if(pb[4] | pb[5]){presetIdx();}
    3ed2:	0f 29       	or	r16, r15
    3ed4:	11 f4       	brne	.+4      	; 0x3eda <main+0x1366>
    3ed6:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
static bool sysRun;
static bool lowBatt;
static bool sensOff;

static void presetIdx(){
	switch(indexBuff[0]&0b00001111){
    3eda:	f3 01       	movw	r30, r6
    3edc:	80 81       	ld	r24, Z
    3ede:	8f 70       	andi	r24, 0x0F	; 15
    3ee0:	90 e0       	ldi	r25, 0x00	; 0
    3ee2:	88 30       	cpi	r24, 0x08	; 8
    3ee4:	91 05       	cpc	r25, r1
    3ee6:	10 f0       	brcs	.+4      	; 0x3eec <main+0x1378>
    3ee8:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    3eec:	fc 01       	movw	r30, r24
    3eee:	ed 5b       	subi	r30, 0xBD	; 189
    3ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef2:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
		//Run
		case 0:
			setMaskByte(&indexBuff[0], 0b11110000, 0);
    3ef6:	40 e0       	ldi	r20, 0x00	; 0
    3ef8:	60 ef       	ldi	r22, 0xF0	; 240
    3efa:	c3 01       	movw	r24, r6
    3efc:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			indexBuff[2] = 0;
    3f00:	f3 01       	movw	r30, r6
    3f02:	12 82       	std	Z+2, r1	; 0x02
			indexBuff[3] = 0;
    3f04:	13 82       	std	Z+3, r1	; 0x03
			indexBuff[4] = 0;		
    3f06:	14 82       	std	Z+4, r1	; 0x04
    3f08:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//Left
		case 1:
			setMaskByte(&indexBuff[0], 0b11110000, 5<<4);
    3f0c:	40 e5       	ldi	r20, 0x50	; 80
    3f0e:	60 ef       	ldi	r22, 0xF0	; 240
    3f10:	c3 01       	movw	r24, r6
    3f12:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			indexBuff[2] = 50/prescD;
    3f16:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
    3f1a:	70 e0       	ldi	r23, 0x00	; 0
    3f1c:	82 e3       	ldi	r24, 0x32	; 50
    3f1e:	90 e0       	ldi	r25, 0x00	; 0
    3f20:	0e 94 c6 3a 	call	0x758c	; 0x758c <__divmodhi4>
    3f24:	f3 01       	movw	r30, r6
    3f26:	62 83       	std	Z+2, r22	; 0x02
			indexBuff[3] = 60;
    3f28:	8c e3       	ldi	r24, 0x3C	; 60
    3f2a:	83 83       	std	Z+3, r24	; 0x03
			indexBuff[4] = -55;
    3f2c:	89 ec       	ldi	r24, 0xC9	; 201
    3f2e:	84 83       	std	Z+4, r24	; 0x04
    3f30:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//Right
		case 2:
			setMaskByte(&indexBuff[0], 0b11110000, 10<<4);
    3f34:	40 ea       	ldi	r20, 0xA0	; 160
    3f36:	60 ef       	ldi	r22, 0xF0	; 240
    3f38:	c3 01       	movw	r24, r6
    3f3a:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			indexBuff[2] = 50/prescD;
    3f3e:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
    3f42:	70 e0       	ldi	r23, 0x00	; 0
    3f44:	82 e3       	ldi	r24, 0x32	; 50
    3f46:	90 e0       	ldi	r25, 0x00	; 0
    3f48:	0e 94 c6 3a 	call	0x758c	; 0x758c <__divmodhi4>
    3f4c:	f3 01       	movw	r30, r6
    3f4e:	62 83       	std	Z+2, r22	; 0x02
			indexBuff[3] = -55;
    3f50:	89 ec       	ldi	r24, 0xC9	; 201
    3f52:	83 83       	std	Z+3, r24	; 0x03
			indexBuff[4] = 60;
    3f54:	8c e3       	ldi	r24, 0x3C	; 60
    3f56:	84 83       	std	Z+4, r24	; 0x04
			indexBuff[6] = 55;
    3f58:	87 e3       	ldi	r24, 0x37	; 55
    3f5a:	86 83       	std	Z+6, r24	; 0x06
    3f5c:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//Fwrd
		case 3:
			setMaskByte(&indexBuff[0], 0b11110000, 0);
    3f60:	40 e0       	ldi	r20, 0x00	; 0
    3f62:	60 ef       	ldi	r22, 0xF0	; 240
    3f64:	c3 01       	movw	r24, r6
    3f66:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
			indexBuff[2] = 160/prescD;
    3f6a:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
    3f6e:	70 e0       	ldi	r23, 0x00	; 0
    3f70:	80 ea       	ldi	r24, 0xA0	; 160
    3f72:	90 e0       	ldi	r25, 0x00	; 0
    3f74:	0e 94 c6 3a 	call	0x758c	; 0x758c <__divmodhi4>
    3f78:	f3 01       	movw	r30, r6
    3f7a:	62 83       	std	Z+2, r22	; 0x02
			indexBuff[3] = 60;
    3f7c:	8c e3       	ldi	r24, 0x3C	; 60
    3f7e:	83 83       	std	Z+3, r24	; 0x03
			indexBuff[4] = 60;
    3f80:	84 83       	std	Z+4, r24	; 0x04
    3f82:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//Revrs
		case 4:
			indexBuff[2] = 160/prescD;
    3f86:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
    3f8a:	70 e0       	ldi	r23, 0x00	; 0
    3f8c:	80 ea       	ldi	r24, 0xA0	; 160
    3f8e:	90 e0       	ldi	r25, 0x00	; 0
    3f90:	0e 94 c6 3a 	call	0x758c	; 0x758c <__divmodhi4>
    3f94:	f3 01       	movw	r30, r6
    3f96:	62 83       	std	Z+2, r22	; 0x02
			indexBuff[3] = -60;
    3f98:	84 ec       	ldi	r24, 0xC4	; 196
    3f9a:	83 83       	std	Z+3, r24	; 0x03
			indexBuff[4] = -60;
    3f9c:	84 83       	std	Z+4, r24	; 0x04
    3f9e:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//Stop
		case 5:
			indexBuff[2] = 400/prescD;
    3fa2:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <_ZL6prescD>
    3fa6:	70 e0       	ldi	r23, 0x00	; 0
    3fa8:	80 e9       	ldi	r24, 0x90	; 144
    3faa:	91 e0       	ldi	r25, 0x01	; 1
    3fac:	0e 94 c6 3a 	call	0x758c	; 0x758c <__divmodhi4>
    3fb0:	f3 01       	movw	r30, r6
    3fb2:	62 83       	std	Z+2, r22	; 0x02
			indexBuff[3] = 0;
    3fb4:	13 82       	std	Z+3, r1	; 0x03
			indexBuff[4] = 0;
    3fb6:	14 82       	std	Z+4, r1	; 0x04
			indexBuff[5] = 0;
    3fb8:	15 82       	std	Z+5, r1	; 0x05
			indexBuff[6] = 0;
    3fba:	16 82       	std	Z+6, r1	; 0x06
			indexBuff[7] = 4;
    3fbc:	84 e0       	ldi	r24, 0x04	; 4
    3fbe:	87 83       	std	Z+7, r24	; 0x07
    3fc0:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//Servo
		case 6:
			indexBuff[2] = 100;
    3fc4:	84 e6       	ldi	r24, 0x64	; 100
    3fc6:	f3 01       	movw	r30, r6
    3fc8:	82 83       	std	Z+2, r24	; 0x02
			indexBuff[3] = 100;
    3fca:	83 83       	std	Z+3, r24	; 0x03
			indexBuff[4] = 100;
    3fcc:	84 83       	std	Z+4, r24	; 0x04
			indexBuff[5] = 100;
    3fce:	85 83       	std	Z+5, r24	; 0x05
			indexBuff[6] = 100;
    3fd0:	86 83       	std	Z+6, r24	; 0x06
			indexBuff[7] = 100;
    3fd2:	87 83       	std	Z+7, r24	; 0x07
    3fd4:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
		break;
		//GoTo
		case 7:
			indexBuff[2] = 0;
    3fd8:	f3 01       	movw	r30, r6
    3fda:	12 82       	std	Z+2, r1	; 0x02
			indexBuff[3] = 0;
    3fdc:	13 82       	std	Z+3, r1	; 0x03
    3fde:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
											//Preset Values
											if(pb[4] | pb[5]){presetIdx();}
										}
									break;
									case 3:
										if(idxSel == 0){indexBuff[6] = _lim(indexBuff[6]+pb[4]-pb[5], 0, 100);}
    3fe2:	20 91 76 04 	lds	r18, 0x0476	; 0x800476 <_ZL6idxSel>
    3fe6:	21 11       	cpse	r18, r1
    3fe8:	16 c0       	rjmp	.+44     	; 0x4016 <main+0x14a2>
    3fea:	f3 01       	movw	r30, r6
    3fec:	36 81       	ldd	r19, Z+6	; 0x06
    3fee:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    3ff2:	90 e0       	ldi	r25, 0x00	; 0
    3ff4:	83 0f       	add	r24, r19
    3ff6:	91 1d       	adc	r25, r1
    3ff8:	30 91 80 04 	lds	r19, 0x0480	; 0x800480 <_ZL2pb+0x5>
    3ffc:	83 1b       	sub	r24, r19
    3ffe:	91 09       	sbc	r25, r1
    4000:	32 f0       	brmi	.+12     	; 0x400e <main+0x149a>
    4002:	85 36       	cpi	r24, 0x65	; 101
    4004:	91 05       	cpc	r25, r1
    4006:	14 f0       	brlt	.+4      	; 0x400c <main+0x1498>
    4008:	84 e6       	ldi	r24, 0x64	; 100
    400a:	90 e0       	ldi	r25, 0x00	; 0
    400c:	28 2f       	mov	r18, r24
    400e:	f3 01       	movw	r30, r6
    4010:	26 83       	std	Z+6, r18	; 0x06
    4012:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
										else{
											setMaskByte(&indexBuff[1], 0b0011111, _lim((indexBuff[1]&0b0011111)+pb[4]-pb[5], 0, 30));
    4016:	f3 01       	movw	r30, r6
    4018:	21 81       	ldd	r18, Z+1	; 0x01
    401a:	2f 71       	andi	r18, 0x1F	; 31
    401c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4020:	90 e0       	ldi	r25, 0x00	; 0
    4022:	82 0f       	add	r24, r18
    4024:	91 1d       	adc	r25, r1
    4026:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    402a:	82 1b       	sub	r24, r18
    402c:	91 09       	sbc	r25, r1
    402e:	12 f4       	brpl	.+4      	; 0x4034 <main+0x14c0>
    4030:	0c 94 9b 37 	jmp	0x6f36	; 0x6f36 <main+0x43c2>
    4034:	8f 31       	cpi	r24, 0x1F	; 31
    4036:	91 05       	cpc	r25, r1
    4038:	14 f0       	brlt	.+4      	; 0x403e <main+0x14ca>
    403a:	8e e1       	ldi	r24, 0x1E	; 30
    403c:	90 e0       	ldi	r25, 0x00	; 0
    403e:	18 2f       	mov	r17, r24
    4040:	0c 94 9b 37 	jmp	0x6f36	; 0x6f36 <main+0x43c2>
											if(pb[3] == 2 && idxSel > 0){uppDsp = 0;sidemenu = 1;gpVar1 = 20;shortDisp_P(2, editSensStr);}
    4044:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
    4048:	d0 92 83 04 	sts	0x0483, r13	; 0x800483 <_ZL8sidemenu>
    404c:	84 e1       	ldi	r24, 0x14	; 20
    404e:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    4052:	6e e6       	ldi	r22, 0x6E	; 110
    4054:	71 e0       	ldi	r23, 0x01	; 1
    4056:	82 e0       	ldi	r24, 0x02	; 2
    4058:	0e 94 02 07 	call	0xe04	; 0xe04 <_ZL11shortDisp_PhPKc>
											if(pb[4] | pb[5]){readSensMem();}
    405c:	90 91 7f 04 	lds	r25, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4060:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4064:	89 2b       	or	r24, r25
    4066:	11 f4       	brne	.+4      	; 0x406c <main+0x14f8>
    4068:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    406c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
    4070:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
										}
									break;
									case 4:setMaskByte(&indexBuff[1], 0b1100000, _lim((indexBuff[1]>>5)+pb[4]-pb[5], 0, 2)<<5);break;
    4074:	f3 01       	movw	r30, r6
    4076:	81 81       	ldd	r24, Z+1	; 0x01
    4078:	90 e0       	ldi	r25, 0x00	; 0
    407a:	95 95       	asr	r25
    407c:	87 95       	ror	r24
    407e:	95 95       	asr	r25
    4080:	87 95       	ror	r24
    4082:	95 95       	asr	r25
    4084:	87 95       	ror	r24
    4086:	95 95       	asr	r25
    4088:	87 95       	ror	r24
    408a:	95 95       	asr	r25
    408c:	87 95       	ror	r24
    408e:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4092:	82 0f       	add	r24, r18
    4094:	91 1d       	adc	r25, r1
    4096:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    409a:	82 1b       	sub	r24, r18
    409c:	91 09       	sbc	r25, r1
    409e:	4a f0       	brmi	.+18     	; 0x40b2 <main+0x153e>
    40a0:	83 30       	cpi	r24, 0x03	; 3
    40a2:	91 05       	cpc	r25, r1
    40a4:	14 f0       	brlt	.+4      	; 0x40aa <main+0x1536>
    40a6:	82 e0       	ldi	r24, 0x02	; 2
    40a8:	90 e0       	ldi	r25, 0x00	; 0
    40aa:	18 2f       	mov	r17, r24
    40ac:	12 95       	swap	r17
    40ae:	11 0f       	add	r17, r17
    40b0:	10 7e       	andi	r17, 0xE0	; 224
    40b2:	41 2f       	mov	r20, r17
    40b4:	60 e6       	ldi	r22, 0x60	; 96
    40b6:	8c e6       	ldi	r24, 0x6C	; 108
    40b8:	94 e0       	ldi	r25, 0x04	; 4
    40ba:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
    40be:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
								}
							break;
							case 5 ... 8:
								uppDsp = 1;
    40c2:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
								switch(indexBuff[0]&0b00001111){
    40c6:	f3 01       	movw	r30, r6
    40c8:	90 81       	ld	r25, Z
    40ca:	9f 70       	andi	r25, 0x0F	; 15
    40cc:	96 30       	cpi	r25, 0x06	; 6
    40ce:	21 f0       	breq	.+8      	; 0x40d8 <main+0x1564>
    40d0:	97 30       	cpi	r25, 0x07	; 7
    40d2:	09 f4       	brne	.+2      	; 0x40d6 <main+0x1562>
    40d4:	75 c0       	rjmp	.+234    	; 0x41c0 <main+0x164c>
    40d6:	c8 c0       	rjmp	.+400    	; 0x4268 <main+0x16f4>
									//Servo
									case 6:
										submenu = _loop(submenu+pb[1]-pb[0], 5, 7);
    40d8:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    40dc:	eb e7       	ldi	r30, 0x7B	; 123
    40de:	f4 e0       	ldi	r31, 0x04	; 4
    40e0:	40 81       	ld	r20, Z
    40e2:	29 2f       	mov	r18, r25
    40e4:	30 e0       	ldi	r19, 0x00	; 0
    40e6:	28 0f       	add	r18, r24
    40e8:	31 1d       	adc	r19, r1
    40ea:	24 1b       	sub	r18, r20
    40ec:	31 09       	sbc	r19, r1
    40ee:	25 30       	cpi	r18, 0x05	; 5
    40f0:	31 05       	cpc	r19, r1
    40f2:	14 f4       	brge	.+4      	; 0x40f8 <main+0x1584>
    40f4:	0c 94 a9 37 	jmp	0x6f52	; 0x6f52 <main+0x43de>
    40f8:	28 30       	cpi	r18, 0x08	; 8
    40fa:	31 05       	cpc	r19, r1
    40fc:	14 f0       	brlt	.+4      	; 0x4102 <main+0x158e>
    40fe:	0c 94 ae 37 	jmp	0x6f5c	; 0x6f5c <main+0x43e8>
    4102:	89 0f       	add	r24, r25
    4104:	84 1b       	sub	r24, r20
    4106:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
										switch(submenu){
    410a:	86 30       	cpi	r24, 0x06	; 6
    410c:	e9 f0       	breq	.+58     	; 0x4148 <main+0x15d4>
    410e:	87 30       	cpi	r24, 0x07	; 7
    4110:	99 f1       	breq	.+102    	; 0x4178 <main+0x1604>
    4112:	85 30       	cpi	r24, 0x05	; 5
    4114:	09 f0       	breq	.+2      	; 0x4118 <main+0x15a4>
    4116:	47 c0       	rjmp	.+142    	; 0x41a6 <main+0x1632>
											case 5:indexBuff[2] = _lim(indexBuff[2]+pb[4]-pb[5], 1, 254);break;
    4118:	f3 01       	movw	r30, r6
    411a:	22 81       	ldd	r18, Z+2	; 0x02
    411c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4120:	90 e0       	ldi	r25, 0x00	; 0
    4122:	82 0f       	add	r24, r18
    4124:	91 1d       	adc	r25, r1
    4126:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    412a:	82 1b       	sub	r24, r18
    412c:	91 09       	sbc	r25, r1
    412e:	18 16       	cp	r1, r24
    4130:	19 06       	cpc	r1, r25
    4132:	34 f4       	brge	.+12     	; 0x4140 <main+0x15cc>
    4134:	8f 3f       	cpi	r24, 0xFF	; 255
    4136:	91 05       	cpc	r25, r1
    4138:	24 f0       	brlt	.+8      	; 0x4142 <main+0x15ce>
    413a:	8e ef       	ldi	r24, 0xFE	; 254
    413c:	90 e0       	ldi	r25, 0x00	; 0
    413e:	01 c0       	rjmp	.+2      	; 0x4142 <main+0x15ce>
    4140:	8d 2d       	mov	r24, r13
    4142:	f3 01       	movw	r30, r6
    4144:	82 83       	std	Z+2, r24	; 0x02
    4146:	2f c0       	rjmp	.+94     	; 0x41a6 <main+0x1632>
											case 6:indexBuff[3] = _lim(indexBuff[3]+pb[4]-pb[5], 1, 254);break;
    4148:	f3 01       	movw	r30, r6
    414a:	23 81       	ldd	r18, Z+3	; 0x03
    414c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4150:	90 e0       	ldi	r25, 0x00	; 0
    4152:	82 0f       	add	r24, r18
    4154:	91 1d       	adc	r25, r1
    4156:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    415a:	82 1b       	sub	r24, r18
    415c:	91 09       	sbc	r25, r1
    415e:	18 16       	cp	r1, r24
    4160:	19 06       	cpc	r1, r25
    4162:	34 f4       	brge	.+12     	; 0x4170 <main+0x15fc>
    4164:	8f 3f       	cpi	r24, 0xFF	; 255
    4166:	91 05       	cpc	r25, r1
    4168:	24 f0       	brlt	.+8      	; 0x4172 <main+0x15fe>
    416a:	8e ef       	ldi	r24, 0xFE	; 254
    416c:	90 e0       	ldi	r25, 0x00	; 0
    416e:	01 c0       	rjmp	.+2      	; 0x4172 <main+0x15fe>
    4170:	8d 2d       	mov	r24, r13
    4172:	f3 01       	movw	r30, r6
    4174:	83 83       	std	Z+3, r24	; 0x03
    4176:	17 c0       	rjmp	.+46     	; 0x41a6 <main+0x1632>
											case 7:indexBuff[4] = _lim(indexBuff[4]+pb[4]-pb[5], 1, 254);break;
    4178:	f3 01       	movw	r30, r6
    417a:	24 81       	ldd	r18, Z+4	; 0x04
    417c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4180:	90 e0       	ldi	r25, 0x00	; 0
    4182:	82 0f       	add	r24, r18
    4184:	91 1d       	adc	r25, r1
    4186:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    418a:	82 1b       	sub	r24, r18
    418c:	91 09       	sbc	r25, r1
    418e:	18 16       	cp	r1, r24
    4190:	19 06       	cpc	r1, r25
    4192:	34 f4       	brge	.+12     	; 0x41a0 <main+0x162c>
    4194:	8f 3f       	cpi	r24, 0xFF	; 255
    4196:	91 05       	cpc	r25, r1
    4198:	24 f0       	brlt	.+8      	; 0x41a2 <main+0x162e>
    419a:	8e ef       	ldi	r24, 0xFE	; 254
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	01 c0       	rjmp	.+2      	; 0x41a2 <main+0x162e>
    41a0:	8d 2d       	mov	r24, r13
    41a2:	f3 01       	movw	r30, r6
    41a4:	84 83       	std	Z+4, r24	; 0x04
										}
										if(pb[3] == 3){submenu = 9;LCD.Clear();}
    41a6:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    41aa:	83 30       	cpi	r24, 0x03	; 3
    41ac:	09 f0       	breq	.+2      	; 0x41b0 <main+0x163c>
    41ae:	01 c1       	rjmp	.+514    	; 0x43b2 <main+0x183e>
    41b0:	89 e0       	ldi	r24, 0x09	; 9
    41b2:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    41b6:	89 e0       	ldi	r24, 0x09	; 9
    41b8:	95 e0       	ldi	r25, 0x05	; 5
    41ba:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    41be:	78 c0       	rjmp	.+240    	; 0x42b0 <main+0x173c>
									break;
									//GoTo
									case 7:
										submenu = _loop(submenu+pb[1]-pb[0], 5, 6);
    41c0:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    41c4:	eb e7       	ldi	r30, 0x7B	; 123
    41c6:	f4 e0       	ldi	r31, 0x04	; 4
    41c8:	40 81       	ld	r20, Z
    41ca:	29 2f       	mov	r18, r25
    41cc:	30 e0       	ldi	r19, 0x00	; 0
    41ce:	28 0f       	add	r18, r24
    41d0:	31 1d       	adc	r19, r1
    41d2:	24 1b       	sub	r18, r20
    41d4:	31 09       	sbc	r19, r1
    41d6:	25 30       	cpi	r18, 0x05	; 5
    41d8:	31 05       	cpc	r19, r1
    41da:	14 f4       	brge	.+4      	; 0x41e0 <main+0x166c>
    41dc:	0c 94 b8 37 	jmp	0x6f70	; 0x6f70 <main+0x43fc>
    41e0:	27 30       	cpi	r18, 0x07	; 7
    41e2:	31 05       	cpc	r19, r1
    41e4:	14 f0       	brlt	.+4      	; 0x41ea <main+0x1676>
    41e6:	0c 94 b3 37 	jmp	0x6f66	; 0x6f66 <main+0x43f2>
    41ea:	89 0f       	add	r24, r25
    41ec:	84 1b       	sub	r24, r20
    41ee:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
										if(submenu == 5){indexBuff[2] = _lim(indexBuff[2]+pb[4]-pb[5], 0, 9);}
    41f2:	85 30       	cpi	r24, 0x05	; 5
    41f4:	b1 f4       	brne	.+44     	; 0x4222 <main+0x16ae>
    41f6:	f3 01       	movw	r30, r6
    41f8:	22 81       	ldd	r18, Z+2	; 0x02
    41fa:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    41fe:	90 e0       	ldi	r25, 0x00	; 0
    4200:	82 0f       	add	r24, r18
    4202:	91 1d       	adc	r25, r1
    4204:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4208:	82 1b       	sub	r24, r18
    420a:	91 09       	sbc	r25, r1
    420c:	32 f0       	brmi	.+12     	; 0x421a <main+0x16a6>
    420e:	8a 30       	cpi	r24, 0x0A	; 10
    4210:	91 05       	cpc	r25, r1
    4212:	24 f0       	brlt	.+8      	; 0x421c <main+0x16a8>
    4214:	89 e0       	ldi	r24, 0x09	; 9
    4216:	90 e0       	ldi	r25, 0x00	; 0
    4218:	01 c0       	rjmp	.+2      	; 0x421c <main+0x16a8>
    421a:	81 2f       	mov	r24, r17
    421c:	f3 01       	movw	r30, r6
    421e:	82 83       	std	Z+2, r24	; 0x02
    4220:	15 c0       	rjmp	.+42     	; 0x424c <main+0x16d8>
										else{indexBuff[3] = _lim(indexBuff[3]+pb[4]-pb[5], 0, 100);}
    4222:	f3 01       	movw	r30, r6
    4224:	23 81       	ldd	r18, Z+3	; 0x03
    4226:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    422a:	90 e0       	ldi	r25, 0x00	; 0
    422c:	82 0f       	add	r24, r18
    422e:	91 1d       	adc	r25, r1
    4230:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4234:	82 1b       	sub	r24, r18
    4236:	91 09       	sbc	r25, r1
    4238:	32 f0       	brmi	.+12     	; 0x4246 <main+0x16d2>
    423a:	85 36       	cpi	r24, 0x65	; 101
    423c:	91 05       	cpc	r25, r1
    423e:	24 f0       	brlt	.+8      	; 0x4248 <main+0x16d4>
    4240:	84 e6       	ldi	r24, 0x64	; 100
    4242:	90 e0       	ldi	r25, 0x00	; 0
    4244:	01 c0       	rjmp	.+2      	; 0x4248 <main+0x16d4>
    4246:	81 2f       	mov	r24, r17
    4248:	f3 01       	movw	r30, r6
    424a:	83 83       	std	Z+3, r24	; 0x03
										if(pb[3] == 3){submenu = 1;LCD.Clear();uppDsp = 0;}
    424c:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4250:	83 30       	cpi	r24, 0x03	; 3
    4252:	09 f0       	breq	.+2      	; 0x4256 <main+0x16e2>
    4254:	ae c0       	rjmp	.+348    	; 0x43b2 <main+0x183e>
    4256:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    425a:	89 e0       	ldi	r24, 0x09	; 9
    425c:	95 e0       	ldi	r25, 0x05	; 5
    425e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4262:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
    4266:	24 c0       	rjmp	.+72     	; 0x42b0 <main+0x173c>
									break;
									default:
										submenu = _loop(submenu+pb[1]-pb[0], 5, 8);
    4268:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    426c:	eb e7       	ldi	r30, 0x7B	; 123
    426e:	f4 e0       	ldi	r31, 0x04	; 4
    4270:	40 81       	ld	r20, Z
    4272:	29 2f       	mov	r18, r25
    4274:	30 e0       	ldi	r19, 0x00	; 0
    4276:	28 0f       	add	r18, r24
    4278:	31 1d       	adc	r19, r1
    427a:	24 1b       	sub	r18, r20
    427c:	31 09       	sbc	r19, r1
    427e:	25 30       	cpi	r18, 0x05	; 5
    4280:	31 05       	cpc	r19, r1
    4282:	34 f0       	brlt	.+12     	; 0x4290 <main+0x171c>
    4284:	29 30       	cpi	r18, 0x09	; 9
    4286:	31 05       	cpc	r19, r1
    4288:	2c f4       	brge	.+10     	; 0x4294 <main+0x1720>
    428a:	89 0f       	add	r24, r25
    428c:	84 1b       	sub	r24, r20
    428e:	03 c0       	rjmp	.+6      	; 0x4296 <main+0x1722>
    4290:	88 e0       	ldi	r24, 0x08	; 8
    4292:	01 c0       	rjmp	.+2      	; 0x4296 <main+0x1722>
    4294:	85 e0       	ldi	r24, 0x05	; 5
    4296:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
										if(pb[3] == 3){submenu = 9;LCD.Clear();}
    429a:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    429e:	83 30       	cpi	r24, 0x03	; 3
    42a0:	39 f4       	brne	.+14     	; 0x42b0 <main+0x173c>
    42a2:	89 e0       	ldi	r24, 0x09	; 9
    42a4:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    42a8:	89 e0       	ldi	r24, 0x09	; 9
    42aa:	95 e0       	ldi	r25, 0x05	; 5
    42ac:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
									break;
								}
								if((indexBuff[0]&0b00001111) < 6){
    42b0:	f3 01       	movw	r30, r6
    42b2:	80 81       	ld	r24, Z
    42b4:	28 2f       	mov	r18, r24
    42b6:	2f 70       	andi	r18, 0x0F	; 15
    42b8:	30 e0       	ldi	r19, 0x00	; 0
    42ba:	26 30       	cpi	r18, 0x06	; 6
    42bc:	31 05       	cpc	r19, r1
    42be:	0c f0       	brlt	.+2      	; 0x42c2 <main+0x174e>
    42c0:	78 c0       	rjmp	.+240    	; 0x43b2 <main+0x183e>
									switch(submenu){
    42c2:	90 91 84 04 	lds	r25, 0x0484	; 0x800484 <_ZL7submenu>
    42c6:	96 30       	cpi	r25, 0x06	; 6
    42c8:	f9 f0       	breq	.+62     	; 0x4308 <main+0x1794>
    42ca:	18 f4       	brcc	.+6      	; 0x42d2 <main+0x175e>
    42cc:	95 30       	cpi	r25, 0x05	; 5
    42ce:	39 f0       	breq	.+14     	; 0x42de <main+0x176a>
    42d0:	70 c0       	rjmp	.+224    	; 0x43b2 <main+0x183e>
    42d2:	97 30       	cpi	r25, 0x07	; 7
    42d4:	c9 f1       	breq	.+114    	; 0x4348 <main+0x17d4>
    42d6:	98 30       	cpi	r25, 0x08	; 8
    42d8:	09 f4       	brne	.+2      	; 0x42dc <main+0x1768>
    42da:	51 c0       	rjmp	.+162    	; 0x437e <main+0x180a>
    42dc:	6a c0       	rjmp	.+212    	; 0x43b2 <main+0x183e>
										case 5:indexBuff[2] = _lim(indexBuff[2]+pb[4]-pb[5], 0, 255);break;
    42de:	f3 01       	movw	r30, r6
    42e0:	22 81       	ldd	r18, Z+2	; 0x02
    42e2:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    42e6:	90 e0       	ldi	r25, 0x00	; 0
    42e8:	82 0f       	add	r24, r18
    42ea:	91 1d       	adc	r25, r1
    42ec:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    42f0:	82 1b       	sub	r24, r18
    42f2:	91 09       	sbc	r25, r1
    42f4:	32 f0       	brmi	.+12     	; 0x4302 <main+0x178e>
    42f6:	8f 3f       	cpi	r24, 0xFF	; 255
    42f8:	91 05       	cpc	r25, r1
    42fa:	11 f0       	breq	.+4      	; 0x4300 <main+0x178c>
    42fc:	0c f0       	brlt	.+2      	; 0x4300 <main+0x178c>
    42fe:	8f ef       	ldi	r24, 0xFF	; 255
    4300:	18 2f       	mov	r17, r24
    4302:	f3 01       	movw	r30, r6
    4304:	12 83       	std	Z+2, r17	; 0x02
    4306:	55 c0       	rjmp	.+170    	; 0x43b2 <main+0x183e>
										case 6:
											setMaskByte(&indexBuff[0], 0b11110000, _lim((indexBuff[0]>>4)+pb[4]-pb[5], 0, 14)<<4);
    4308:	90 e0       	ldi	r25, 0x00	; 0
    430a:	95 95       	asr	r25
    430c:	87 95       	ror	r24
    430e:	95 95       	asr	r25
    4310:	87 95       	ror	r24
    4312:	95 95       	asr	r25
    4314:	87 95       	ror	r24
    4316:	95 95       	asr	r25
    4318:	87 95       	ror	r24
    431a:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    431e:	82 0f       	add	r24, r18
    4320:	91 1d       	adc	r25, r1
    4322:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4326:	82 1b       	sub	r24, r18
    4328:	91 09       	sbc	r25, r1
    432a:	42 f0       	brmi	.+16     	; 0x433c <main+0x17c8>
    432c:	8f 30       	cpi	r24, 0x0F	; 15
    432e:	91 05       	cpc	r25, r1
    4330:	14 f0       	brlt	.+4      	; 0x4336 <main+0x17c2>
    4332:	8e e0       	ldi	r24, 0x0E	; 14
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	18 2f       	mov	r17, r24
    4338:	12 95       	swap	r17
    433a:	10 7f       	andi	r17, 0xF0	; 240
    433c:	41 2f       	mov	r20, r17
    433e:	60 ef       	ldi	r22, 0xF0	; 240
    4340:	c3 01       	movw	r24, r6
    4342:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
    4346:	35 c0       	rjmp	.+106    	; 0x43b2 <main+0x183e>
										break;
										case 7:indexBuff[3] = _lim((int8_t)indexBuff[3]+pb[4]-pb[5], -100, 100);break;
    4348:	f3 01       	movw	r30, r6
    434a:	23 81       	ldd	r18, Z+3	; 0x03
    434c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4350:	90 e0       	ldi	r25, 0x00	; 0
    4352:	82 0f       	add	r24, r18
    4354:	91 1d       	adc	r25, r1
    4356:	27 fd       	sbrc	r18, 7
    4358:	9a 95       	dec	r25
    435a:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    435e:	82 1b       	sub	r24, r18
    4360:	91 09       	sbc	r25, r1
    4362:	8c 39       	cpi	r24, 0x9C	; 156
    4364:	ff ef       	ldi	r31, 0xFF	; 255
    4366:	9f 07       	cpc	r25, r31
    4368:	34 f0       	brlt	.+12     	; 0x4376 <main+0x1802>
    436a:	85 36       	cpi	r24, 0x65	; 101
    436c:	91 05       	cpc	r25, r1
    436e:	24 f0       	brlt	.+8      	; 0x4378 <main+0x1804>
    4370:	84 e6       	ldi	r24, 0x64	; 100
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	01 c0       	rjmp	.+2      	; 0x4378 <main+0x1804>
    4376:	8c e9       	ldi	r24, 0x9C	; 156
    4378:	f3 01       	movw	r30, r6
    437a:	83 83       	std	Z+3, r24	; 0x03
    437c:	1a c0       	rjmp	.+52     	; 0x43b2 <main+0x183e>
										case 8:indexBuff[4] = _lim((int8_t)indexBuff[4]+pb[4]-pb[5], -100, 100);break;
    437e:	f3 01       	movw	r30, r6
    4380:	24 81       	ldd	r18, Z+4	; 0x04
    4382:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4386:	90 e0       	ldi	r25, 0x00	; 0
    4388:	82 0f       	add	r24, r18
    438a:	91 1d       	adc	r25, r1
    438c:	27 fd       	sbrc	r18, 7
    438e:	9a 95       	dec	r25
    4390:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4394:	82 1b       	sub	r24, r18
    4396:	91 09       	sbc	r25, r1
    4398:	8c 39       	cpi	r24, 0x9C	; 156
    439a:	ff ef       	ldi	r31, 0xFF	; 255
    439c:	9f 07       	cpc	r25, r31
    439e:	34 f0       	brlt	.+12     	; 0x43ac <main+0x1838>
    43a0:	85 36       	cpi	r24, 0x65	; 101
    43a2:	91 05       	cpc	r25, r1
    43a4:	24 f0       	brlt	.+8      	; 0x43ae <main+0x183a>
    43a6:	84 e6       	ldi	r24, 0x64	; 100
    43a8:	90 e0       	ldi	r25, 0x00	; 0
    43aa:	01 c0       	rjmp	.+2      	; 0x43ae <main+0x183a>
    43ac:	8c e9       	ldi	r24, 0x9C	; 156
    43ae:	f3 01       	movw	r30, r6
    43b0:	84 83       	std	Z+4, r24	; 0x04
									}
								}
								if(pb[2] == 3){submenu = 1;LCD.Clear();uppDsp = 0;}
    43b2:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    43b6:	83 30       	cpi	r24, 0x03	; 3
    43b8:	11 f0       	breq	.+4      	; 0x43be <main+0x184a>
    43ba:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    43be:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    43c2:	89 e0       	ldi	r24, 0x09	; 9
    43c4:	95 e0       	ldi	r25, 0x05	; 5
    43c6:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    43ca:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
    43ce:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
							break;
							case 9 ... 12:
								if((indexBuff[0]&0b00001111) == 6){
    43d2:	f3 01       	movw	r30, r6
    43d4:	90 81       	ld	r25, Z
    43d6:	9f 70       	andi	r25, 0x0F	; 15
    43d8:	96 30       	cpi	r25, 0x06	; 6
    43da:	09 f0       	breq	.+2      	; 0x43de <main+0x186a>
    43dc:	68 c0       	rjmp	.+208    	; 0x44ae <main+0x193a>
									submenu = _loop(submenu+pb[1]-pb[0], 9, 11);
    43de:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    43e2:	eb e7       	ldi	r30, 0x7B	; 123
    43e4:	f4 e0       	ldi	r31, 0x04	; 4
    43e6:	40 81       	ld	r20, Z
    43e8:	29 2f       	mov	r18, r25
    43ea:	30 e0       	ldi	r19, 0x00	; 0
    43ec:	28 0f       	add	r18, r24
    43ee:	31 1d       	adc	r19, r1
    43f0:	24 1b       	sub	r18, r20
    43f2:	31 09       	sbc	r19, r1
    43f4:	29 30       	cpi	r18, 0x09	; 9
    43f6:	31 05       	cpc	r19, r1
    43f8:	14 f4       	brge	.+4      	; 0x43fe <main+0x188a>
    43fa:	0c 94 bd 37 	jmp	0x6f7a	; 0x6f7a <main+0x4406>
    43fe:	2c 30       	cpi	r18, 0x0C	; 12
    4400:	31 05       	cpc	r19, r1
    4402:	14 f0       	brlt	.+4      	; 0x4408 <main+0x1894>
    4404:	0c 94 c2 37 	jmp	0x6f84	; 0x6f84 <main+0x4410>
    4408:	89 0f       	add	r24, r25
    440a:	84 1b       	sub	r24, r20
    440c:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
									switch(submenu){
    4410:	8a 30       	cpi	r24, 0x0A	; 10
    4412:	e9 f0       	breq	.+58     	; 0x444e <main+0x18da>
    4414:	8b 30       	cpi	r24, 0x0B	; 11
    4416:	99 f1       	breq	.+102    	; 0x447e <main+0x190a>
    4418:	89 30       	cpi	r24, 0x09	; 9
    441a:	09 f0       	breq	.+2      	; 0x441e <main+0x18aa>
    441c:	d4 c0       	rjmp	.+424    	; 0x45c6 <main+0x1a52>
										case 9:indexBuff[5] = _lim(indexBuff[5]+pb[4]-pb[5], 1, 254);break;
    441e:	f3 01       	movw	r30, r6
    4420:	25 81       	ldd	r18, Z+5	; 0x05
    4422:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4426:	90 e0       	ldi	r25, 0x00	; 0
    4428:	82 0f       	add	r24, r18
    442a:	91 1d       	adc	r25, r1
    442c:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4430:	82 1b       	sub	r24, r18
    4432:	91 09       	sbc	r25, r1
    4434:	18 16       	cp	r1, r24
    4436:	19 06       	cpc	r1, r25
    4438:	34 f4       	brge	.+12     	; 0x4446 <main+0x18d2>
    443a:	8f 3f       	cpi	r24, 0xFF	; 255
    443c:	91 05       	cpc	r25, r1
    443e:	24 f0       	brlt	.+8      	; 0x4448 <main+0x18d4>
    4440:	8e ef       	ldi	r24, 0xFE	; 254
    4442:	90 e0       	ldi	r25, 0x00	; 0
    4444:	01 c0       	rjmp	.+2      	; 0x4448 <main+0x18d4>
    4446:	8d 2d       	mov	r24, r13
    4448:	f3 01       	movw	r30, r6
    444a:	85 83       	std	Z+5, r24	; 0x05
    444c:	bc c0       	rjmp	.+376    	; 0x45c6 <main+0x1a52>
										case 10:indexBuff[6] = _lim(indexBuff[6]+pb[4]-pb[5], 1, 254);break;
    444e:	f3 01       	movw	r30, r6
    4450:	26 81       	ldd	r18, Z+6	; 0x06
    4452:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	82 0f       	add	r24, r18
    445a:	91 1d       	adc	r25, r1
    445c:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4460:	82 1b       	sub	r24, r18
    4462:	91 09       	sbc	r25, r1
    4464:	18 16       	cp	r1, r24
    4466:	19 06       	cpc	r1, r25
    4468:	34 f4       	brge	.+12     	; 0x4476 <main+0x1902>
    446a:	8f 3f       	cpi	r24, 0xFF	; 255
    446c:	91 05       	cpc	r25, r1
    446e:	24 f0       	brlt	.+8      	; 0x4478 <main+0x1904>
    4470:	8e ef       	ldi	r24, 0xFE	; 254
    4472:	90 e0       	ldi	r25, 0x00	; 0
    4474:	01 c0       	rjmp	.+2      	; 0x4478 <main+0x1904>
    4476:	8d 2d       	mov	r24, r13
    4478:	f3 01       	movw	r30, r6
    447a:	86 83       	std	Z+6, r24	; 0x06
    447c:	a4 c0       	rjmp	.+328    	; 0x45c6 <main+0x1a52>
										case 11:indexBuff[7] = _lim(indexBuff[7]+pb[4]-pb[5], 1, 254);break;
    447e:	f3 01       	movw	r30, r6
    4480:	27 81       	ldd	r18, Z+7	; 0x07
    4482:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4486:	90 e0       	ldi	r25, 0x00	; 0
    4488:	82 0f       	add	r24, r18
    448a:	91 1d       	adc	r25, r1
    448c:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4490:	82 1b       	sub	r24, r18
    4492:	91 09       	sbc	r25, r1
    4494:	18 16       	cp	r1, r24
    4496:	19 06       	cpc	r1, r25
    4498:	34 f4       	brge	.+12     	; 0x44a6 <main+0x1932>
    449a:	8f 3f       	cpi	r24, 0xFF	; 255
    449c:	91 05       	cpc	r25, r1
    449e:	24 f0       	brlt	.+8      	; 0x44a8 <main+0x1934>
    44a0:	8e ef       	ldi	r24, 0xFE	; 254
    44a2:	90 e0       	ldi	r25, 0x00	; 0
    44a4:	01 c0       	rjmp	.+2      	; 0x44a8 <main+0x1934>
    44a6:	8d 2d       	mov	r24, r13
    44a8:	f3 01       	movw	r30, r6
    44aa:	87 83       	std	Z+7, r24	; 0x07
    44ac:	8c c0       	rjmp	.+280    	; 0x45c6 <main+0x1a52>
									}
								}
								else{
									submenu = _loop(submenu+pb[1]-pb[0], 9, 12);
    44ae:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    44b2:	eb e7       	ldi	r30, 0x7B	; 123
    44b4:	f4 e0       	ldi	r31, 0x04	; 4
    44b6:	40 81       	ld	r20, Z
    44b8:	29 2f       	mov	r18, r25
    44ba:	30 e0       	ldi	r19, 0x00	; 0
    44bc:	28 0f       	add	r18, r24
    44be:	31 1d       	adc	r19, r1
    44c0:	24 1b       	sub	r18, r20
    44c2:	31 09       	sbc	r19, r1
    44c4:	29 30       	cpi	r18, 0x09	; 9
    44c6:	31 05       	cpc	r19, r1
    44c8:	14 f4       	brge	.+4      	; 0x44ce <main+0x195a>
    44ca:	0c 94 c7 37 	jmp	0x6f8e	; 0x6f8e <main+0x441a>
    44ce:	2d 30       	cpi	r18, 0x0D	; 13
    44d0:	31 05       	cpc	r19, r1
    44d2:	14 f0       	brlt	.+4      	; 0x44d8 <main+0x1964>
    44d4:	0c 94 cc 37 	jmp	0x6f98	; 0x6f98 <main+0x4424>
    44d8:	89 0f       	add	r24, r25
    44da:	84 1b       	sub	r24, r20
    44dc:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
									switch(submenu){
    44e0:	8a 30       	cpi	r24, 0x0A	; 10
    44e2:	01 f1       	breq	.+64     	; 0x4524 <main+0x19b0>
    44e4:	20 f4       	brcc	.+8      	; 0x44ee <main+0x197a>
    44e6:	89 30       	cpi	r24, 0x09	; 9
    44e8:	09 f0       	breq	.+2      	; 0x44ec <main+0x1978>
    44ea:	6d c0       	rjmp	.+218    	; 0x45c6 <main+0x1a52>
    44ec:	06 c0       	rjmp	.+12     	; 0x44fa <main+0x1986>
    44ee:	8b 30       	cpi	r24, 0x0B	; 11
    44f0:	99 f1       	breq	.+102    	; 0x4558 <main+0x19e4>
    44f2:	8c 30       	cpi	r24, 0x0C	; 12
    44f4:	09 f0       	breq	.+2      	; 0x44f8 <main+0x1984>
    44f6:	67 c0       	rjmp	.+206    	; 0x45c6 <main+0x1a52>
    44f8:	52 c0       	rjmp	.+164    	; 0x459e <main+0x1a2a>
										case 9:indexBuff[5] = _lim(indexBuff[5]+pb[4]-pb[5], 0, 255);break;
    44fa:	f3 01       	movw	r30, r6
    44fc:	25 81       	ldd	r18, Z+5	; 0x05
    44fe:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4502:	90 e0       	ldi	r25, 0x00	; 0
    4504:	82 0f       	add	r24, r18
    4506:	91 1d       	adc	r25, r1
    4508:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    450c:	82 1b       	sub	r24, r18
    450e:	91 09       	sbc	r25, r1
    4510:	32 f0       	brmi	.+12     	; 0x451e <main+0x19aa>
    4512:	8f 3f       	cpi	r24, 0xFF	; 255
    4514:	91 05       	cpc	r25, r1
    4516:	11 f0       	breq	.+4      	; 0x451c <main+0x19a8>
    4518:	0c f0       	brlt	.+2      	; 0x451c <main+0x19a8>
    451a:	8f ef       	ldi	r24, 0xFF	; 255
    451c:	18 2f       	mov	r17, r24
    451e:	f3 01       	movw	r30, r6
    4520:	15 83       	std	Z+5, r17	; 0x05
    4522:	51 c0       	rjmp	.+162    	; 0x45c6 <main+0x1a52>
										case 10:
											setMaskByte(&indexBuff[7], 0b00001111, _lim((indexBuff[7]&0b00001111)+pb[4]-pb[5], 0, 9));
    4524:	f3 01       	movw	r30, r6
    4526:	27 81       	ldd	r18, Z+7	; 0x07
    4528:	2f 70       	andi	r18, 0x0F	; 15
    452a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    452e:	90 e0       	ldi	r25, 0x00	; 0
    4530:	82 0f       	add	r24, r18
    4532:	91 1d       	adc	r25, r1
    4534:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4538:	82 1b       	sub	r24, r18
    453a:	91 09       	sbc	r25, r1
    453c:	32 f0       	brmi	.+12     	; 0x454a <main+0x19d6>
    453e:	8a 30       	cpi	r24, 0x0A	; 10
    4540:	91 05       	cpc	r25, r1
    4542:	14 f0       	brlt	.+4      	; 0x4548 <main+0x19d4>
    4544:	89 e0       	ldi	r24, 0x09	; 9
    4546:	90 e0       	ldi	r25, 0x00	; 0
    4548:	18 2f       	mov	r17, r24
    454a:	41 2f       	mov	r20, r17
    454c:	6f e0       	ldi	r22, 0x0F	; 15
    454e:	82 e7       	ldi	r24, 0x72	; 114
    4550:	94 e0       	ldi	r25, 0x04	; 4
    4552:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
    4556:	37 c0       	rjmp	.+110    	; 0x45c6 <main+0x1a52>
										break;
										case 11:
											setMaskByte(&indexBuff[7], 0b11110000, _lim((indexBuff[7]>>4)+pb[4]-pb[5], 0, 4)<<4);
    4558:	f3 01       	movw	r30, r6
    455a:	87 81       	ldd	r24, Z+7	; 0x07
    455c:	90 e0       	ldi	r25, 0x00	; 0
    455e:	95 95       	asr	r25
    4560:	87 95       	ror	r24
    4562:	95 95       	asr	r25
    4564:	87 95       	ror	r24
    4566:	95 95       	asr	r25
    4568:	87 95       	ror	r24
    456a:	95 95       	asr	r25
    456c:	87 95       	ror	r24
    456e:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4572:	82 0f       	add	r24, r18
    4574:	91 1d       	adc	r25, r1
    4576:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    457a:	82 1b       	sub	r24, r18
    457c:	91 09       	sbc	r25, r1
    457e:	42 f0       	brmi	.+16     	; 0x4590 <main+0x1a1c>
    4580:	85 30       	cpi	r24, 0x05	; 5
    4582:	91 05       	cpc	r25, r1
    4584:	14 f0       	brlt	.+4      	; 0x458a <main+0x1a16>
    4586:	84 e0       	ldi	r24, 0x04	; 4
    4588:	90 e0       	ldi	r25, 0x00	; 0
    458a:	18 2f       	mov	r17, r24
    458c:	12 95       	swap	r17
    458e:	10 7f       	andi	r17, 0xF0	; 240
    4590:	41 2f       	mov	r20, r17
    4592:	60 ef       	ldi	r22, 0xF0	; 240
    4594:	82 e7       	ldi	r24, 0x72	; 114
    4596:	94 e0       	ldi	r25, 0x04	; 4
    4598:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
    459c:	14 c0       	rjmp	.+40     	; 0x45c6 <main+0x1a52>
										break;
										case 12:indexBuff[6] = _lim(indexBuff[6]+pb[4]-pb[5], 0, 100);break;
    459e:	f3 01       	movw	r30, r6
    45a0:	26 81       	ldd	r18, Z+6	; 0x06
    45a2:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    45a6:	90 e0       	ldi	r25, 0x00	; 0
    45a8:	82 0f       	add	r24, r18
    45aa:	91 1d       	adc	r25, r1
    45ac:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    45b0:	82 1b       	sub	r24, r18
    45b2:	91 09       	sbc	r25, r1
    45b4:	32 f0       	brmi	.+12     	; 0x45c2 <main+0x1a4e>
    45b6:	85 36       	cpi	r24, 0x65	; 101
    45b8:	91 05       	cpc	r25, r1
    45ba:	14 f0       	brlt	.+4      	; 0x45c0 <main+0x1a4c>
    45bc:	84 e6       	ldi	r24, 0x64	; 100
    45be:	90 e0       	ldi	r25, 0x00	; 0
    45c0:	18 2f       	mov	r17, r24
    45c2:	f3 01       	movw	r30, r6
    45c4:	16 83       	std	Z+6, r17	; 0x06
									}
								}
							if(pb[3] == 3){submenu = 1;LCD.Clear();uppDsp = 0;}
    45c6:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    45ca:	83 30       	cpi	r24, 0x03	; 3
    45cc:	41 f4       	brne	.+16     	; 0x45de <main+0x1a6a>
    45ce:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    45d2:	89 e0       	ldi	r24, 0x09	; 9
    45d4:	95 e0       	ldi	r25, 0x05	; 5
    45d6:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    45da:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
							if(pb[2] == 3){submenu = 5;LCD.Clear();}
    45de:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    45e2:	83 30       	cpi	r24, 0x03	; 3
    45e4:	11 f0       	breq	.+4      	; 0x45ea <main+0x1a76>
    45e6:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    45ea:	85 e0       	ldi	r24, 0x05	; 5
    45ec:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    45f0:	89 e0       	ldi	r24, 0x09	; 9
    45f2:	95 e0       	ldi	r25, 0x05	; 5
    45f4:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    45f8:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
							
					}
					else{
						switch(submenu){
							case 1:
								sidemenu = _lim(sidemenu+pb[0]-pb[1], 1, 3);
    45fc:	eb e7       	ldi	r30, 0x7B	; 123
    45fe:	f4 e0       	ldi	r31, 0x04	; 4
    4600:	20 81       	ld	r18, Z
    4602:	81 2f       	mov	r24, r17
    4604:	90 e0       	ldi	r25, 0x00	; 0
    4606:	82 0f       	add	r24, r18
    4608:	91 1d       	adc	r25, r1
    460a:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    460e:	82 1b       	sub	r24, r18
    4610:	91 09       	sbc	r25, r1
    4612:	18 16       	cp	r1, r24
    4614:	19 06       	cpc	r1, r25
    4616:	2c f4       	brge	.+10     	; 0x4622 <main+0x1aae>
    4618:	8c 01       	movw	r16, r24
    461a:	04 97       	sbiw	r24, 0x04	; 4
    461c:	14 f0       	brlt	.+4      	; 0x4622 <main+0x1aae>
    461e:	03 e0       	ldi	r16, 0x03	; 3
    4620:	10 e0       	ldi	r17, 0x00	; 0
    4622:	00 93 83 04 	sts	0x0483, r16	; 0x800483 <_ZL8sidemenu>
								if(pb[2] == 3){sidemenu = 0;LCD.Clear();uppDsp = 0;}
    4626:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    462a:	83 30       	cpi	r24, 0x03	; 3
    462c:	41 f4       	brne	.+16     	; 0x463e <main+0x1aca>
    462e:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    4632:	89 e0       	ldi	r24, 0x09	; 9
    4634:	95 e0       	ldi	r25, 0x05	; 5
    4636:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    463a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
								switch(sidemenu){
    463e:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    4642:	82 30       	cpi	r24, 0x02	; 2
    4644:	d9 f1       	breq	.+118    	; 0x46bc <main+0x1b48>
    4646:	83 30       	cpi	r24, 0x03	; 3
    4648:	09 f4       	brne	.+2      	; 0x464c <main+0x1ad8>
    464a:	71 c0       	rjmp	.+226    	; 0x472e <main+0x1bba>
    464c:	81 30       	cpi	r24, 0x01	; 1
    464e:	11 f0       	breq	.+4      	; 0x4654 <main+0x1ae0>
    4650:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
									case 1:
										gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 100);
    4654:	20 91 78 04 	lds	r18, 0x0478	; 0x800478 <_ZL6gpVar1>
    4658:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    465c:	90 e0       	ldi	r25, 0x00	; 0
    465e:	82 0f       	add	r24, r18
    4660:	91 1d       	adc	r25, r1
    4662:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4666:	82 1b       	sub	r24, r18
    4668:	91 09       	sbc	r25, r1
    466a:	32 f0       	brmi	.+12     	; 0x4678 <main+0x1b04>
    466c:	85 36       	cpi	r24, 0x65	; 101
    466e:	91 05       	cpc	r25, r1
    4670:	24 f0       	brlt	.+8      	; 0x467a <main+0x1b06>
    4672:	84 e6       	ldi	r24, 0x64	; 100
    4674:	90 e0       	ldi	r25, 0x00	; 0
    4676:	01 c0       	rjmp	.+2      	; 0x467a <main+0x1b06>
    4678:	80 e0       	ldi	r24, 0x00	; 0
    467a:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
										if(pb[3] == 3){
    467e:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4682:	83 30       	cpi	r24, 0x03	; 3
    4684:	11 f0       	breq	.+4      	; 0x468a <main+0x1b16>
    4686:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
											uint8_t srcIdx = idxSel;
    468a:	10 91 76 04 	lds	r17, 0x0476	; 0x800476 <_ZL6idxSel>
											readProgMem(progSel);
    468e:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    4692:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
											idxSel = gpVar1;
    4696:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    469a:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
											updateProgMem(progSel);
    469e:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    46a2:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
											idxSel = srcIdx;
    46a6:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <_ZL6idxSel>
											sidemenu = 0;LCD.Clear();
    46aa:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    46ae:	89 e0       	ldi	r24, 0x09	; 9
    46b0:	95 e0       	ldi	r25, 0x05	; 5
    46b2:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
											uppDsp = 0;
    46b6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
    46ba:	de c7       	rjmp	.+4028   	; 0x5678 <main+0x2b04>
										}
									break;
									case 2:
										if(pb[3] == 3){
    46bc:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    46c0:	83 30       	cpi	r24, 0x03	; 3
    46c2:	09 f0       	breq	.+2      	; 0x46c6 <main+0x1b52>
    46c4:	d9 c7       	rjmp	.+4018   	; 0x5678 <main+0x2b04>
											uint8_t gpVar1 = idxSel;
    46c6:	00 91 76 04 	lds	r16, 0x0476	; 0x800476 <_ZL6idxSel>
											for(idxSel = 100;idxSel > gpVar1;idxSel --){
    46ca:	84 e6       	ldi	r24, 0x64	; 100
    46cc:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
    46d0:	04 36       	cpi	r16, 0x64	; 100
    46d2:	b0 f4       	brcc	.+44     	; 0x4700 <main+0x1b8c>
    46d4:	14 e6       	ldi	r17, 0x64	; 100
												uint8_t sidx = idxSel;
												idxSel -= 1;
    46d6:	8f ef       	ldi	r24, 0xFF	; 255
    46d8:	81 0f       	add	r24, r17
    46da:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
												readProgMem(progSel);
    46de:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    46e2:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
												idxSel = sidx;
    46e6:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <_ZL6idxSel>
												updateProgMem(progSel);
    46ea:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    46ee:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
										}
									break;
									case 2:
										if(pb[3] == 3){
											uint8_t gpVar1 = idxSel;
											for(idxSel = 100;idxSel > gpVar1;idxSel --){
    46f2:	10 91 76 04 	lds	r17, 0x0476	; 0x800476 <_ZL6idxSel>
    46f6:	11 50       	subi	r17, 0x01	; 1
    46f8:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <_ZL6idxSel>
    46fc:	01 17       	cp	r16, r17
    46fe:	58 f3       	brcs	.-42     	; 0x46d6 <main+0x1b62>
												idxSel -= 1;
												readProgMem(progSel);
												idxSel = sidx;
												updateProgMem(progSel);
											}
											arrcpy(indexBuff, indexDefVal, 8);
    4700:	48 e0       	ldi	r20, 0x08	; 8
    4702:	6a eb       	ldi	r22, 0xBA	; 186
    4704:	73 e0       	ldi	r23, 0x03	; 3
    4706:	c3 01       	movw	r24, r6
    4708:	0e 94 09 02 	call	0x412	; 0x412 <_ZL6arrcpyPhPKhh>
											idxSel = gpVar1;
    470c:	00 93 76 04 	sts	0x0476, r16	; 0x800476 <_ZL6idxSel>
											updateProgMem(progSel);
    4710:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    4714:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
											readSensMem();
    4718:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
											sidemenu = 0;LCD.Clear();
    471c:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    4720:	89 e0       	ldi	r24, 0x09	; 9
    4722:	95 e0       	ldi	r25, 0x05	; 5
    4724:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
											uppDsp = 0;
    4728:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
    472c:	a5 c7       	rjmp	.+3914   	; 0x5678 <main+0x2b04>
										}
									break;
									case 3:
										if(pb[3] == 3){
    472e:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4732:	83 30       	cpi	r24, 0x03	; 3
    4734:	09 f0       	breq	.+2      	; 0x4738 <main+0x1bc4>
    4736:	a0 c7       	rjmp	.+3904   	; 0x5678 <main+0x2b04>
											uint8_t gpVar1 = idxSel;
    4738:	00 91 76 04 	lds	r16, 0x0476	; 0x800476 <_ZL6idxSel>
											while(idxSel < 100){
    473c:	04 36       	cpi	r16, 0x64	; 100
    473e:	b0 f4       	brcc	.+44     	; 0x476c <main+0x1bf8>
    4740:	10 2f       	mov	r17, r16
												uint8_t sidx = idxSel;
												idxSel += 1;
    4742:	81 e0       	ldi	r24, 0x01	; 1
    4744:	81 0f       	add	r24, r17
    4746:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
												readProgMem(progSel);
    474a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    474e:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
												idxSel = sidx;
    4752:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <_ZL6idxSel>
												updateProgMem(progSel);
    4756:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    475a:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
												idxSel ++;
    475e:	10 91 76 04 	lds	r17, 0x0476	; 0x800476 <_ZL6idxSel>
    4762:	1f 5f       	subi	r17, 0xFF	; 255
    4764:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <_ZL6idxSel>
										}
									break;
									case 3:
										if(pb[3] == 3){
											uint8_t gpVar1 = idxSel;
											while(idxSel < 100){
    4768:	14 36       	cpi	r17, 0x64	; 100
    476a:	58 f3       	brcs	.-42     	; 0x4742 <main+0x1bce>
												readProgMem(progSel);
												idxSel = sidx;
												updateProgMem(progSel);
												idxSel ++;
											}
											arrcpy(indexBuff, indexDefVal, 8);
    476c:	48 e0       	ldi	r20, 0x08	; 8
    476e:	6a eb       	ldi	r22, 0xBA	; 186
    4770:	73 e0       	ldi	r23, 0x03	; 3
    4772:	c3 01       	movw	r24, r6
    4774:	0e 94 09 02 	call	0x412	; 0x412 <_ZL6arrcpyPhPKhh>
											idxSel = 100;
    4778:	84 e6       	ldi	r24, 0x64	; 100
    477a:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZL6idxSel>
											updateProgMem(progSel);
    477e:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    4782:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <_ZL13updateProgMemh>
											idxSel = gpVar1;
    4786:	00 93 76 04 	sts	0x0476, r16	; 0x800476 <_ZL6idxSel>
											readProgMem(progSel);
    478a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    478e:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
											readSensMem();
    4792:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
											sidemenu = 0;LCD.Clear();
    4796:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
    479a:	89 e0       	ldi	r24, 0x09	; 9
    479c:	95 e0       	ldi	r25, 0x05	; 5
    479e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
											uppDsp = 0;
    47a2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
    47a6:	68 c7       	rjmp	.+3792   	; 0x5678 <main+0x2b04>
										}
									break;
								}
							break;
							case 3:
								sidemenu = _loop(sidemenu+pb[1]-pb[0], 1, 15);
    47a8:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <_ZL2pb+0x1>
    47ac:	eb e7       	ldi	r30, 0x7B	; 123
    47ae:	f4 e0       	ldi	r31, 0x04	; 4
    47b0:	90 81       	ld	r25, Z
    47b2:	28 2f       	mov	r18, r24
    47b4:	30 e0       	ldi	r19, 0x00	; 0
    47b6:	21 0f       	add	r18, r17
    47b8:	31 1d       	adc	r19, r1
    47ba:	29 1b       	sub	r18, r25
    47bc:	31 09       	sbc	r19, r1
    47be:	12 16       	cp	r1, r18
    47c0:	13 06       	cpc	r1, r19
    47c2:	34 f4       	brge	.+12     	; 0x47d0 <main+0x1c5c>
    47c4:	20 31       	cpi	r18, 0x10	; 16
    47c6:	31 05       	cpc	r19, r1
    47c8:	2c f4       	brge	.+10     	; 0x47d4 <main+0x1c60>
    47ca:	81 0f       	add	r24, r17
    47cc:	89 1b       	sub	r24, r25
    47ce:	03 c0       	rjmp	.+6      	; 0x47d6 <main+0x1c62>
    47d0:	8f e0       	ldi	r24, 0x0F	; 15
    47d2:	01 c0       	rjmp	.+2      	; 0x47d6 <main+0x1c62>
    47d4:	8d 2d       	mov	r24, r13
    47d6:	80 93 83 04 	sts	0x0483, r24	; 0x800483 <_ZL8sidemenu>
								if(pb[2] == 3 || pb[3] == 3){sidemenu = 0;updateSensMem();LCD.Clear();uppDsp = 0;}
    47da:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    47de:	83 30       	cpi	r24, 0x03	; 3
    47e0:	11 f4       	brne	.+4      	; 0x47e6 <main+0x1c72>
    47e2:	0c 94 d1 37 	jmp	0x6fa2	; 0x6fa2 <main+0x442e>
    47e6:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    47ea:	83 30       	cpi	r24, 0x03	; 3
    47ec:	09 f0       	breq	.+2      	; 0x47f0 <main+0x1c7c>
    47ee:	58 c0       	rjmp	.+176    	; 0x48a0 <main+0x1d2c>
    47f0:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
		eeprom_update_word(&sensOffs_eep[gpVar2], Sens.SensOffs[gpVar2]);
	}
}
static void updateSensMem(){
	uint16_t tmp = 0;
	if(progInv){
    47f4:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <_ZL7progInv>
    47f8:	88 23       	and	r24, r24
    47fa:	f1 f1       	breq	.+124    	; 0x4878 <main+0x1d04>
		for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){
			_SET(&tmp, gpVar2, _READ(&sensMask, 13 - gpVar2));
    47fc:	40 91 2b 04 	lds	r20, 0x042B	; 0x80042b <_ZL8sensMask>
    4800:	50 91 2c 04 	lds	r21, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    4804:	20 e0       	ldi	r18, 0x00	; 0
    4806:	30 e0       	ldi	r19, 0x00	; 0
    4808:	80 e0       	ldi	r24, 0x00	; 0
    480a:	90 e0       	ldi	r25, 0x00	; 0
    480c:	6d e0       	ldi	r22, 0x0D	; 13
    480e:	70 e0       	ldi	r23, 0x00	; 0
    4810:	62 1b       	sub	r22, r18
    4812:	73 0b       	sbc	r23, r19
    4814:	fa 01       	movw	r30, r20
    4816:	02 c0       	rjmp	.+4      	; 0x481c <main+0x1ca8>
    4818:	f6 95       	lsr	r31
    481a:	e7 95       	ror	r30
    481c:	6a 95       	dec	r22
    481e:	e2 f7       	brpl	.-8      	; 0x4818 <main+0x1ca4>
    4820:	e0 ff       	sbrs	r30, 0
    4822:	0a c0       	rjmp	.+20     	; 0x4838 <main+0x1cc4>
    4824:	b4 01       	movw	r22, r8
    4826:	02 2e       	mov	r0, r18
    4828:	02 c0       	rjmp	.+4      	; 0x482e <main+0x1cba>
    482a:	66 0f       	add	r22, r22
    482c:	77 1f       	adc	r23, r23
    482e:	0a 94       	dec	r0
    4830:	e2 f7       	brpl	.-8      	; 0x482a <main+0x1cb6>
    4832:	86 2b       	or	r24, r22
    4834:	97 2b       	or	r25, r23
    4836:	0b c0       	rjmp	.+22     	; 0x484e <main+0x1cda>
    4838:	b4 01       	movw	r22, r8
    483a:	02 2e       	mov	r0, r18
    483c:	02 c0       	rjmp	.+4      	; 0x4842 <main+0x1cce>
    483e:	66 0f       	add	r22, r22
    4840:	77 1f       	adc	r23, r23
    4842:	0a 94       	dec	r0
    4844:	e2 f7       	brpl	.-8      	; 0x483e <main+0x1cca>
    4846:	60 95       	com	r22
    4848:	70 95       	com	r23
    484a:	86 23       	and	r24, r22
    484c:	97 23       	and	r25, r23
    484e:	2f 5f       	subi	r18, 0xFF	; 255
    4850:	3f 4f       	sbci	r19, 0xFF	; 255
	}
}
static void updateSensMem(){
	uint16_t tmp = 0;
	if(progInv){
		for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){
    4852:	2e 30       	cpi	r18, 0x0E	; 14
    4854:	31 05       	cpc	r19, r1
    4856:	d1 f6       	brne	.-76     	; 0x480c <main+0x1c98>
    4858:	2e e0       	ldi	r18, 0x0E	; 14
    485a:	20 93 3e 04 	sts	0x043E, r18	; 0x80043e <_ZL6gpVar2>
			_SET(&tmp, gpVar2, _READ(&sensMask, 13 - gpVar2));
		}
		_SET(&tmp, 14, _READ(&sensMask, 14));
    485e:	56 ff       	sbrs	r21, 6
    4860:	02 c0       	rjmp	.+4      	; 0x4866 <main+0x1cf2>
    4862:	90 64       	ori	r25, 0x40	; 64
    4864:	01 c0       	rjmp	.+2      	; 0x4868 <main+0x1cf4>
    4866:	9f 7b       	andi	r25, 0xBF	; 191
		_SET(&tmp, 15, _READ(&sensMask, 15));
    4868:	55 23       	and	r21, r21
    486a:	1c f4       	brge	.+6      	; 0x4872 <main+0x1cfe>
    486c:	bc 01       	movw	r22, r24
    486e:	70 68       	ori	r23, 0x80	; 128
    4870:	07 c0       	rjmp	.+14     	; 0x4880 <main+0x1d0c>
    4872:	bc 01       	movw	r22, r24
    4874:	7f 77       	andi	r23, 0x7F	; 127
    4876:	04 c0       	rjmp	.+8      	; 0x4880 <main+0x1d0c>
	}
	else{tmp = sensMask;}
    4878:	60 91 2b 04 	lds	r22, 0x042B	; 0x80042b <_ZL8sensMask>
    487c:	70 91 2c 04 	lds	r23, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
	eeprom_update_word(&sensMask_eep[(indexBuff[1]&0b0011111)], tmp);
    4880:	f3 01       	movw	r30, r6
    4882:	81 81       	ldd	r24, Z+1	; 0x01
    4884:	8f 71       	andi	r24, 0x1F	; 31
    4886:	90 e0       	ldi	r25, 0x00	; 0
    4888:	88 0f       	add	r24, r24
    488a:	99 1f       	adc	r25, r25
    488c:	85 5b       	subi	r24, 0xB5	; 181
    488e:	9e 4f       	sbci	r25, 0xFE	; 254
    4890:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <eeprom_update_word>
									break;
								}
							break;
							case 3:
								sidemenu = _loop(sidemenu+pb[1]-pb[0], 1, 15);
								if(pb[2] == 3 || pb[3] == 3){sidemenu = 0;updateSensMem();LCD.Clear();uppDsp = 0;}
    4894:	89 e0       	ldi	r24, 0x09	; 9
    4896:	95 e0       	ldi	r25, 0x05	; 5
    4898:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    489c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
								switch(sidemenu){
    48a0:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    48a4:	81 30       	cpi	r24, 0x01	; 1
    48a6:	08 f4       	brcc	.+2      	; 0x48aa <main+0x1d36>
    48a8:	e7 c6       	rjmp	.+3534   	; 0x5678 <main+0x2b04>
    48aa:	8f 30       	cpi	r24, 0x0F	; 15
    48ac:	18 f0       	brcs	.+6      	; 0x48b4 <main+0x1d40>
    48ae:	8f 30       	cpi	r24, 0x0F	; 15
    48b0:	c1 f1       	breq	.+112    	; 0x4922 <main+0x1dae>
    48b2:	e2 c6       	rjmp	.+3524   	; 0x5678 <main+0x2b04>
									case 1 ... 14:
										if(pb[4]){_SET(&sensMask, 14-sidemenu, 1);}
    48b4:	90 91 7f 04 	lds	r25, 0x047F	; 0x80047f <_ZL2pb+0x4>
    48b8:	99 23       	and	r25, r25
    48ba:	a9 f0       	breq	.+42     	; 0x48e6 <main+0x1d72>
    48bc:	2e e0       	ldi	r18, 0x0E	; 14
    48be:	30 e0       	ldi	r19, 0x00	; 0
    48c0:	28 1b       	sub	r18, r24
    48c2:	31 09       	sbc	r19, r1
    48c4:	a4 01       	movw	r20, r8
    48c6:	02 c0       	rjmp	.+4      	; 0x48cc <main+0x1d58>
    48c8:	44 0f       	add	r20, r20
    48ca:	55 1f       	adc	r21, r21
    48cc:	2a 95       	dec	r18
    48ce:	e2 f7       	brpl	.-8      	; 0x48c8 <main+0x1d54>
    48d0:	9a 01       	movw	r18, r20
    48d2:	40 91 2b 04 	lds	r20, 0x042B	; 0x80042b <_ZL8sensMask>
    48d6:	50 91 2c 04 	lds	r21, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    48da:	24 2b       	or	r18, r20
    48dc:	35 2b       	or	r19, r21
    48de:	30 93 2c 04 	sts	0x042C, r19	; 0x80042c <_ZL8sensMask+0x1>
    48e2:	20 93 2b 04 	sts	0x042B, r18	; 0x80042b <_ZL8sensMask>
										if(pb[5]){_SET(&sensMask, 14-sidemenu, 0);}
    48e6:	90 91 80 04 	lds	r25, 0x0480	; 0x800480 <_ZL2pb+0x5>
    48ea:	99 23       	and	r25, r25
    48ec:	09 f4       	brne	.+2      	; 0x48f0 <main+0x1d7c>
    48ee:	c4 c6       	rjmp	.+3464   	; 0x5678 <main+0x2b04>
    48f0:	2e e0       	ldi	r18, 0x0E	; 14
    48f2:	30 e0       	ldi	r19, 0x00	; 0
    48f4:	b9 01       	movw	r22, r18
    48f6:	68 1b       	sub	r22, r24
    48f8:	71 09       	sbc	r23, r1
    48fa:	f4 01       	movw	r30, r8
    48fc:	02 c0       	rjmp	.+4      	; 0x4902 <main+0x1d8e>
    48fe:	ee 0f       	add	r30, r30
    4900:	ff 1f       	adc	r31, r31
    4902:	6a 95       	dec	r22
    4904:	e2 f7       	brpl	.-8      	; 0x48fe <main+0x1d8a>
    4906:	cf 01       	movw	r24, r30
    4908:	80 95       	com	r24
    490a:	90 95       	com	r25
    490c:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <_ZL8sensMask>
    4910:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    4914:	82 23       	and	r24, r18
    4916:	93 23       	and	r25, r19
    4918:	90 93 2c 04 	sts	0x042C, r25	; 0x80042c <_ZL8sensMask+0x1>
    491c:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <_ZL8sensMask>
    4920:	ab c6       	rjmp	.+3414   	; 0x5678 <main+0x2b04>
									break;
									case 15:
										if((sensMask>>14) > 0 && pb[5]){sensMask = (((sensMask>>14)-1)<<14) | (sensMask&0b0011111111111111);}
    4922:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <_ZL8sensMask>
    4926:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    492a:	9c 01       	movw	r18, r24
    492c:	24 e0       	ldi	r18, 0x04	; 4
    492e:	32 9f       	mul	r19, r18
    4930:	21 2d       	mov	r18, r1
    4932:	33 27       	eor	r19, r19
    4934:	11 24       	eor	r1, r1
    4936:	21 15       	cp	r18, r1
    4938:	31 05       	cpc	r19, r1
    493a:	01 f1       	breq	.+64     	; 0x497c <main+0x1e08>
    493c:	40 91 80 04 	lds	r20, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4940:	44 23       	and	r20, r20
    4942:	71 f0       	breq	.+28     	; 0x4960 <main+0x1dec>
    4944:	21 50       	subi	r18, 0x01	; 1
    4946:	31 09       	sbc	r19, r1
    4948:	30 e4       	ldi	r19, 0x40	; 64
    494a:	23 9f       	mul	r18, r19
    494c:	30 2d       	mov	r19, r0
    494e:	22 27       	eor	r18, r18
    4950:	11 24       	eor	r1, r1
    4952:	9f 73       	andi	r25, 0x3F	; 63
    4954:	28 2b       	or	r18, r24
    4956:	39 2b       	or	r19, r25
    4958:	30 93 2c 04 	sts	0x042C, r19	; 0x80042c <_ZL8sensMask+0x1>
    495c:	20 93 2b 04 	sts	0x042B, r18	; 0x80042b <_ZL8sensMask>
										if((sensMask>>14) < 3 && pb[4]){sensMask = (((sensMask>>14)+1)<<14) | (sensMask&0b0011111111111111);}
    4960:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <_ZL8sensMask>
    4964:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    4968:	9c 01       	movw	r18, r24
    496a:	24 e0       	ldi	r18, 0x04	; 4
    496c:	32 9f       	mul	r19, r18
    496e:	21 2d       	mov	r18, r1
    4970:	33 27       	eor	r19, r19
    4972:	11 24       	eor	r1, r1
    4974:	23 30       	cpi	r18, 0x03	; 3
    4976:	31 05       	cpc	r19, r1
    4978:	08 f0       	brcs	.+2      	; 0x497c <main+0x1e08>
    497a:	7e c6       	rjmp	.+3324   	; 0x5678 <main+0x2b04>
    497c:	40 91 7f 04 	lds	r20, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4980:	44 23       	and	r20, r20
    4982:	09 f4       	brne	.+2      	; 0x4986 <main+0x1e12>
    4984:	79 c6       	rjmp	.+3314   	; 0x5678 <main+0x2b04>
    4986:	2f 5f       	subi	r18, 0xFF	; 255
    4988:	3f 4f       	sbci	r19, 0xFF	; 255
    498a:	30 e4       	ldi	r19, 0x40	; 64
    498c:	23 9f       	mul	r18, r19
    498e:	30 2d       	mov	r19, r0
    4990:	22 27       	eor	r18, r18
    4992:	11 24       	eor	r1, r1
    4994:	9f 73       	andi	r25, 0x3F	; 63
    4996:	28 2b       	or	r18, r24
    4998:	39 2b       	or	r19, r25
    499a:	30 93 2c 04 	sts	0x042C, r19	; 0x80042c <_ZL8sensMask+0x1>
    499e:	20 93 2b 04 	sts	0x042B, r18	; 0x80042b <_ZL8sensMask>
    49a2:	6a c6       	rjmp	.+3284   	; 0x5678 <main+0x2b04>
							break;
						}
					}
				}
				else{
					progSel = _lim(progSel+pb[4]-pb[5],0,9);
    49a4:	50 91 7f 04 	lds	r21, 0x047F	; 0x80047f <_ZL2pb+0x4>
    49a8:	40 91 80 04 	lds	r20, 0x0480	; 0x800480 <_ZL2pb+0x5>
    49ac:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <_ZL7progSel>
    49b0:	25 2f       	mov	r18, r21
    49b2:	30 e0       	ldi	r19, 0x00	; 0
    49b4:	29 0f       	add	r18, r25
    49b6:	31 1d       	adc	r19, r1
    49b8:	24 1b       	sub	r18, r20
    49ba:	31 09       	sbc	r19, r1
    49bc:	32 f0       	brmi	.+12     	; 0x49ca <main+0x1e56>
    49be:	c9 01       	movw	r24, r18
    49c0:	2a 30       	cpi	r18, 0x0A	; 10
    49c2:	31 05       	cpc	r19, r1
    49c4:	14 f0       	brlt	.+4      	; 0x49ca <main+0x1e56>
    49c6:	89 e0       	ldi	r24, 0x09	; 9
    49c8:	90 e0       	ldi	r25, 0x00	; 0
    49ca:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <_ZL7progSel>
					if(pb[4] | pb[5]){
    49ce:	45 2b       	or	r20, r21
    49d0:	29 f1       	breq	.+74     	; 0x4a1c <main+0x1ea8>
						readStartIdx();
    49d2:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
						readStopIdx();
    49d6:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    49da:	90 e0       	ldi	r25, 0x00	; 0
    49dc:	8f 5b       	subi	r24, 0xBF	; 191
    49de:	9e 4f       	sbci	r25, 0xFE	; 254
    49e0:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    49e4:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <_ZL7idxStop>
						updateConfMem();
    49e8:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
						readCPselMem();
    49ec:	00 91 77 04 	lds	r16, 0x0477	; 0x800477 <_ZL7progSel>
    49f0:	10 e0       	ldi	r17, 0x00	; 0
    49f2:	c8 01       	movw	r24, r16
    49f4:	89 5c       	subi	r24, 0xC9	; 201
    49f6:	9e 4f       	sbci	r25, 0xFE	; 254
    49f8:	0e 94 cd 3d 	call	0x7b9a	; 0x7b9a <eeprom_read_byte>
    49fc:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <_ZL13checkPointSel>
						readCheckPoint();}
    4a00:	85 e1       	ldi	r24, 0x15	; 21
    4a02:	80 9f       	mul	r24, r16
    4a04:	b0 01       	movw	r22, r0
    4a06:	81 9f       	mul	r24, r17
    4a08:	70 0d       	add	r23, r0
    4a0a:	11 24       	eor	r1, r1
    4a0c:	6b 59       	subi	r22, 0x9B	; 155
    4a0e:	7f 4f       	sbci	r23, 0xFF	; 255
    4a10:	45 e1       	ldi	r20, 0x15	; 21
    4a12:	50 e0       	ldi	r21, 0x00	; 0
    4a14:	86 e5       	ldi	r24, 0x56	; 86
    4a16:	94 e0       	ldi	r25, 0x04	; 4
    4a18:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
					if(pb[3] == 2){
    4a1c:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4a20:	82 30       	cpi	r24, 0x02	; 2
    4a22:	61 f4       	brne	.+24     	; 0x4a3c <main+0x1ec8>
						sidemenu = 1;
    4a24:	d0 92 83 04 	sts	0x0483, r13	; 0x800483 <_ZL8sidemenu>
						shortDisp_P(3, progMenuStr);
    4a28:	65 e8       	ldi	r22, 0x85	; 133
    4a2a:	71 e0       	ldi	r23, 0x01	; 1
    4a2c:	83 e0       	ldi	r24, 0x03	; 3
    4a2e:	0e 94 02 07 	call	0xe04	; 0xe04 <_ZL11shortDisp_PhPKc>
						gpVar1 = progSel;}
    4a32:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    4a36:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    4a3a:	1e c6       	rjmp	.+3132   	; 0x5678 <main+0x2b04>
					else if(pb[3] == 3){
    4a3c:	83 30       	cpi	r24, 0x03	; 3
    4a3e:	09 f0       	breq	.+2      	; 0x4a42 <main+0x1ece>
    4a40:	1b c6       	rjmp	.+3126   	; 0x5678 <main+0x2b04>
						if(idxSel > 0){uppDsp = 0;}
    4a42:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    4a46:	81 11       	cpse	r24, r1
    4a48:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
						submenu = 1;
    4a4c:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
						readProgMem(progSel);readStartIdx();
    4a50:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    4a54:	0e 94 84 14 	call	0x2908	; 0x2908 <_ZL11readProgMemh>
    4a58:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZL12readStartIdxv>
						readSensMem();
    4a5c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZL11readSensMemv>
						LCD.Clear();}
    4a60:	89 e0       	ldi	r24, 0x09	; 9
    4a62:	95 e0       	ldi	r25, 0x05	; 5
    4a64:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4a68:	07 c6       	rjmp	.+3086   	; 0x5678 <main+0x2b04>
				}
			break;
			//Stop at
			case 2:
				idxStop = _lim(idxStop+pb[4]-pb[5], 0, 100);
    4a6a:	30 91 7f 04 	lds	r19, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4a6e:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4a72:	40 91 75 04 	lds	r20, 0x0475	; 0x800475 <_ZL7idxStop>
    4a76:	83 2f       	mov	r24, r19
    4a78:	90 e0       	ldi	r25, 0x00	; 0
    4a7a:	84 0f       	add	r24, r20
    4a7c:	91 1d       	adc	r25, r1
    4a7e:	82 1b       	sub	r24, r18
    4a80:	91 09       	sbc	r25, r1
    4a82:	3a f0       	brmi	.+14     	; 0x4a92 <main+0x1f1e>
    4a84:	85 36       	cpi	r24, 0x65	; 101
    4a86:	91 05       	cpc	r25, r1
    4a88:	14 f0       	brlt	.+4      	; 0x4a8e <main+0x1f1a>
    4a8a:	84 e6       	ldi	r24, 0x64	; 100
    4a8c:	90 e0       	ldi	r25, 0x00	; 0
    4a8e:	68 2f       	mov	r22, r24
    4a90:	01 c0       	rjmp	.+2      	; 0x4a94 <main+0x1f20>
    4a92:	60 e0       	ldi	r22, 0x00	; 0
    4a94:	60 93 75 04 	sts	0x0475, r22	; 0x800475 <_ZL7idxStop>
				if(pb[4] | pb[5]){updateStopIdx();}
    4a98:	23 2b       	or	r18, r19
    4a9a:	09 f4       	brne	.+2      	; 0x4a9e <main+0x1f2a>
    4a9c:	ed c5       	rjmp	.+3034   	; 0x5678 <main+0x2b04>
    4a9e:	20 91 77 04 	lds	r18, 0x0477	; 0x800477 <_ZL7progSel>
    4aa2:	30 e0       	ldi	r19, 0x00	; 0
    4aa4:	c9 01       	movw	r24, r18
    4aa6:	8f 5b       	subi	r24, 0xBF	; 191
    4aa8:	9e 4f       	sbci	r25, 0xFE	; 254
    4aaa:	0e 94 eb 3d 	call	0x7bd6	; 0x7bd6 <eeprom_update_byte>
    4aae:	e4 c5       	rjmp	.+3016   	; 0x5678 <main+0x2b04>
			break;
			//Checkpoint
			case 3:
				switch(submenu){
    4ab0:	90 91 84 04 	lds	r25, 0x0484	; 0x800484 <_ZL7submenu>
    4ab4:	91 30       	cpi	r25, 0x01	; 1
    4ab6:	09 f1       	breq	.+66     	; 0x4afa <main+0x1f86>
    4ab8:	20 f0       	brcs	.+8      	; 0x4ac2 <main+0x1f4e>
    4aba:	92 30       	cpi	r25, 0x02	; 2
    4abc:	09 f4       	brne	.+2      	; 0x4ac0 <main+0x1f4c>
    4abe:	62 c0       	rjmp	.+196    	; 0x4b84 <main+0x2010>
    4ac0:	db c5       	rjmp	.+2998   	; 0x5678 <main+0x2b04>
					case 0:if(pb[3] == 3){submenu = 1;gpVar1 = 0;readCheckPoint();LCD.Clear();}break;
    4ac2:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4ac6:	83 30       	cpi	r24, 0x03	; 3
    4ac8:	09 f0       	breq	.+2      	; 0x4acc <main+0x1f58>
    4aca:	d6 c5       	rjmp	.+2988   	; 0x5678 <main+0x2b04>
    4acc:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    4ad0:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
    4ad4:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
    4ad8:	f5 e1       	ldi	r31, 0x15	; 21
    4ada:	6f 9f       	mul	r22, r31
    4adc:	b0 01       	movw	r22, r0
    4ade:	11 24       	eor	r1, r1
    4ae0:	6b 59       	subi	r22, 0x9B	; 155
    4ae2:	7f 4f       	sbci	r23, 0xFF	; 255
    4ae4:	45 e1       	ldi	r20, 0x15	; 21
    4ae6:	50 e0       	ldi	r21, 0x00	; 0
    4ae8:	86 e5       	ldi	r24, 0x56	; 86
    4aea:	94 e0       	ldi	r25, 0x04	; 4
    4aec:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
    4af0:	89 e0       	ldi	r24, 0x09	; 9
    4af2:	95 e0       	ldi	r25, 0x05	; 5
    4af4:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4af8:	bf c5       	rjmp	.+2942   	; 0x5678 <main+0x2b04>
					case 1:
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 20);
    4afa:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    4afe:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4b02:	30 e0       	ldi	r19, 0x00	; 0
    4b04:	28 0f       	add	r18, r24
    4b06:	31 1d       	adc	r19, r1
    4b08:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4b0c:	28 1b       	sub	r18, r24
    4b0e:	31 09       	sbc	r19, r1
    4b10:	32 f0       	brmi	.+12     	; 0x4b1e <main+0x1faa>
    4b12:	25 31       	cpi	r18, 0x15	; 21
    4b14:	31 05       	cpc	r19, r1
    4b16:	24 f0       	brlt	.+8      	; 0x4b20 <main+0x1fac>
    4b18:	24 e1       	ldi	r18, 0x14	; 20
    4b1a:	30 e0       	ldi	r19, 0x00	; 0
    4b1c:	01 c0       	rjmp	.+2      	; 0x4b20 <main+0x1fac>
    4b1e:	20 e0       	ldi	r18, 0x00	; 0
    4b20:	20 93 78 04 	sts	0x0478, r18	; 0x800478 <_ZL6gpVar1>
						submenu = _lim(submenu+pb[0]-pb[1], 1, 2);
    4b24:	eb e7       	ldi	r30, 0x7B	; 123
    4b26:	f4 e0       	ldi	r31, 0x04	; 4
    4b28:	20 81       	ld	r18, Z
    4b2a:	30 e0       	ldi	r19, 0x00	; 0
    4b2c:	2f 5f       	subi	r18, 0xFF	; 255
    4b2e:	3f 4f       	sbci	r19, 0xFF	; 255
    4b30:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4b34:	28 1b       	sub	r18, r24
    4b36:	31 09       	sbc	r19, r1
    4b38:	12 16       	cp	r1, r18
    4b3a:	13 06       	cpc	r1, r19
    4b3c:	3c f4       	brge	.+14     	; 0x4b4c <main+0x1fd8>
    4b3e:	c9 01       	movw	r24, r18
    4b40:	23 30       	cpi	r18, 0x03	; 3
    4b42:	31 05       	cpc	r19, r1
    4b44:	14 f0       	brlt	.+4      	; 0x4b4a <main+0x1fd6>
    4b46:	82 e0       	ldi	r24, 0x02	; 2
    4b48:	90 e0       	ldi	r25, 0x00	; 0
    4b4a:	98 2f       	mov	r25, r24
    4b4c:	90 93 84 04 	sts	0x0484, r25	; 0x800484 <_ZL7submenu>
						if(pb[2] == 3){submenu = 0;updateCheckPoint();LCD.Clear();}
    4b50:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    4b54:	83 30       	cpi	r24, 0x03	; 3
    4b56:	09 f0       	breq	.+2      	; 0x4b5a <main+0x1fe6>
    4b58:	8f c5       	rjmp	.+2846   	; 0x5678 <main+0x2b04>
    4b5a:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    4b5e:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
    4b62:	f5 e1       	ldi	r31, 0x15	; 21
    4b64:	6f 9f       	mul	r22, r31
    4b66:	b0 01       	movw	r22, r0
    4b68:	11 24       	eor	r1, r1
    4b6a:	6b 59       	subi	r22, 0x9B	; 155
    4b6c:	7f 4f       	sbci	r23, 0xFF	; 255
    4b6e:	45 e1       	ldi	r20, 0x15	; 21
    4b70:	50 e0       	ldi	r21, 0x00	; 0
    4b72:	86 e5       	ldi	r24, 0x56	; 86
    4b74:	94 e0       	ldi	r25, 0x04	; 4
    4b76:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
    4b7a:	89 e0       	ldi	r24, 0x09	; 9
    4b7c:	95 e0       	ldi	r25, 0x05	; 5
    4b7e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4b82:	7a c5       	rjmp	.+2804   	; 0x5678 <main+0x2b04>
					break;
					case 2:
						checkPoint[gpVar1] = _lim(checkPoint[gpVar1]+pb[4]-pb[5], 0, 100);
    4b84:	20 91 78 04 	lds	r18, 0x0478	; 0x800478 <_ZL6gpVar1>
    4b88:	30 e0       	ldi	r19, 0x00	; 0
    4b8a:	f9 01       	movw	r30, r18
    4b8c:	ea 5a       	subi	r30, 0xAA	; 170
    4b8e:	fb 4f       	sbci	r31, 0xFB	; 251
    4b90:	40 81       	ld	r20, Z
    4b92:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4b96:	90 e0       	ldi	r25, 0x00	; 0
    4b98:	84 0f       	add	r24, r20
    4b9a:	91 1d       	adc	r25, r1
    4b9c:	40 91 80 04 	lds	r20, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4ba0:	84 1b       	sub	r24, r20
    4ba2:	91 09       	sbc	r25, r1
    4ba4:	32 f0       	brmi	.+12     	; 0x4bb2 <main+0x203e>
    4ba6:	85 36       	cpi	r24, 0x65	; 101
    4ba8:	91 05       	cpc	r25, r1
    4baa:	24 f0       	brlt	.+8      	; 0x4bb4 <main+0x2040>
    4bac:	84 e6       	ldi	r24, 0x64	; 100
    4bae:	90 e0       	ldi	r25, 0x00	; 0
    4bb0:	01 c0       	rjmp	.+2      	; 0x4bb4 <main+0x2040>
    4bb2:	80 e0       	ldi	r24, 0x00	; 0
    4bb4:	f9 01       	movw	r30, r18
    4bb6:	ea 5a       	subi	r30, 0xAA	; 170
    4bb8:	fb 4f       	sbci	r31, 0xFB	; 251
    4bba:	80 83       	st	Z, r24
						submenu = _lim(submenu+pb[0]-pb[1], 1, 2);
    4bbc:	eb e7       	ldi	r30, 0x7B	; 123
    4bbe:	f4 e0       	ldi	r31, 0x04	; 4
    4bc0:	80 81       	ld	r24, Z
    4bc2:	90 e0       	ldi	r25, 0x00	; 0
    4bc4:	02 96       	adiw	r24, 0x02	; 2
    4bc6:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4bca:	82 1b       	sub	r24, r18
    4bcc:	91 09       	sbc	r25, r1
    4bce:	18 16       	cp	r1, r24
    4bd0:	19 06       	cpc	r1, r25
    4bd2:	34 f4       	brge	.+12     	; 0x4be0 <main+0x206c>
    4bd4:	83 30       	cpi	r24, 0x03	; 3
    4bd6:	91 05       	cpc	r25, r1
    4bd8:	24 f0       	brlt	.+8      	; 0x4be2 <main+0x206e>
    4bda:	82 e0       	ldi	r24, 0x02	; 2
    4bdc:	90 e0       	ldi	r25, 0x00	; 0
    4bde:	01 c0       	rjmp	.+2      	; 0x4be2 <main+0x206e>
    4be0:	8d 2d       	mov	r24, r13
    4be2:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						if(pb[2] == 3){submenu = 0;updateCheckPoint();LCD.Clear();}
    4be6:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    4bea:	83 30       	cpi	r24, 0x03	; 3
    4bec:	09 f0       	breq	.+2      	; 0x4bf0 <main+0x207c>
    4bee:	44 c5       	rjmp	.+2696   	; 0x5678 <main+0x2b04>
    4bf0:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    4bf4:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <_ZL7progSel>
    4bf8:	f5 e1       	ldi	r31, 0x15	; 21
    4bfa:	6f 9f       	mul	r22, r31
    4bfc:	b0 01       	movw	r22, r0
    4bfe:	11 24       	eor	r1, r1
    4c00:	6b 59       	subi	r22, 0x9B	; 155
    4c02:	7f 4f       	sbci	r23, 0xFF	; 255
    4c04:	45 e1       	ldi	r20, 0x15	; 21
    4c06:	50 e0       	ldi	r21, 0x00	; 0
    4c08:	86 e5       	ldi	r24, 0x56	; 86
    4c0a:	94 e0       	ldi	r25, 0x04	; 4
    4c0c:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
    4c10:	89 e0       	ldi	r24, 0x09	; 9
    4c12:	95 e0       	ldi	r25, 0x05	; 5
    4c14:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4c18:	2f c5       	rjmp	.+2654   	; 0x5678 <main+0x2b04>
					break;
				}
			break;
			//PD
			case 4:
				if(submenu > 0){
    4c1a:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    4c1e:	88 23       	and	r24, r24
    4c20:	09 f4       	brne	.+2      	; 0x4c24 <main+0x20b0>
    4c22:	cc c0       	rjmp	.+408    	; 0x4dbc <main+0x2248>
					if(PDMsel > 0){
    4c24:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <_ZL6PDMsel>
    4c28:	99 23       	and	r25, r25
    4c2a:	b9 f1       	breq	.+110    	; 0x4c9a <main+0x2126>
						submenu = _loop(submenu+pb[1]-pb[0], 1, 3);
    4c2c:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4c30:	eb e7       	ldi	r30, 0x7B	; 123
    4c32:	f4 e0       	ldi	r31, 0x04	; 4
    4c34:	40 81       	ld	r20, Z
    4c36:	29 2f       	mov	r18, r25
    4c38:	30 e0       	ldi	r19, 0x00	; 0
    4c3a:	28 0f       	add	r18, r24
    4c3c:	31 1d       	adc	r19, r1
    4c3e:	24 1b       	sub	r18, r20
    4c40:	31 09       	sbc	r19, r1
    4c42:	12 16       	cp	r1, r18
    4c44:	13 06       	cpc	r1, r19
    4c46:	34 f4       	brge	.+12     	; 0x4c54 <main+0x20e0>
    4c48:	24 30       	cpi	r18, 0x04	; 4
    4c4a:	31 05       	cpc	r19, r1
    4c4c:	2c f4       	brge	.+10     	; 0x4c58 <main+0x20e4>
    4c4e:	89 0f       	add	r24, r25
    4c50:	84 1b       	sub	r24, r20
    4c52:	03 c0       	rjmp	.+6      	; 0x4c5a <main+0x20e6>
    4c54:	83 e0       	ldi	r24, 0x03	; 3
    4c56:	01 c0       	rjmp	.+2      	; 0x4c5a <main+0x20e6>
    4c58:	8d 2d       	mov	r24, r13
    4c5a:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						if(pb[2] == 3){submenu = 0;LCD.Clear();updatePDMmem(PDMsel-1);}
    4c5e:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    4c62:	83 30       	cpi	r24, 0x03	; 3
    4c64:	09 f0       	breq	.+2      	; 0x4c68 <main+0x20f4>
    4c66:	45 c0       	rjmp	.+138    	; 0x4cf2 <main+0x217e>
    4c68:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    4c6c:	89 e0       	ldi	r24, 0x09	; 9
    4c6e:	95 e0       	ldi	r25, 0x05	; 5
    4c70:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4c74:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <_ZL6PDMsel>
    4c78:	90 e0       	ldi	r25, 0x00	; 0
    4c7a:	01 97       	sbiw	r24, 0x01	; 1
    4c7c:	bc 01       	movw	r22, r24
    4c7e:	66 0f       	add	r22, r22
    4c80:	77 1f       	adc	r23, r23
    4c82:	86 0f       	add	r24, r22
    4c84:	97 1f       	adc	r25, r23
    4c86:	bc 01       	movw	r22, r24
    4c88:	6d 5c       	subi	r22, 0xCD	; 205
    4c8a:	7f 4f       	sbci	r23, 0xFF	; 255
    4c8c:	43 e0       	ldi	r20, 0x03	; 3
    4c8e:	50 e0       	ldi	r21, 0x00	; 0
    4c90:	81 e5       	ldi	r24, 0x51	; 81
    4c92:	94 e0       	ldi	r25, 0x04	; 4
    4c94:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
    4c98:	2c c0       	rjmp	.+88     	; 0x4cf2 <main+0x217e>
					}
					else{
						submenu = _loop(submenu+pb[1]-pb[0], 1, 4);
    4c9a:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4c9e:	eb e7       	ldi	r30, 0x7B	; 123
    4ca0:	f4 e0       	ldi	r31, 0x04	; 4
    4ca2:	40 81       	ld	r20, Z
    4ca4:	29 2f       	mov	r18, r25
    4ca6:	30 e0       	ldi	r19, 0x00	; 0
    4ca8:	28 0f       	add	r18, r24
    4caa:	31 1d       	adc	r19, r1
    4cac:	24 1b       	sub	r18, r20
    4cae:	31 09       	sbc	r19, r1
    4cb0:	12 16       	cp	r1, r18
    4cb2:	13 06       	cpc	r1, r19
    4cb4:	34 f4       	brge	.+12     	; 0x4cc2 <main+0x214e>
    4cb6:	25 30       	cpi	r18, 0x05	; 5
    4cb8:	31 05       	cpc	r19, r1
    4cba:	2c f4       	brge	.+10     	; 0x4cc6 <main+0x2152>
    4cbc:	89 0f       	add	r24, r25
    4cbe:	84 1b       	sub	r24, r20
    4cc0:	03 c0       	rjmp	.+6      	; 0x4cc8 <main+0x2154>
    4cc2:	84 e0       	ldi	r24, 0x04	; 4
    4cc4:	01 c0       	rjmp	.+2      	; 0x4cc8 <main+0x2154>
    4cc6:	8d 2d       	mov	r24, r13
    4cc8:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						if(pb[2] == 3){submenu = 0;LCD.Clear();
    4ccc:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    4cd0:	83 30       	cpi	r24, 0x03	; 3
    4cd2:	79 f4       	brne	.+30     	; 0x4cf2 <main+0x217e>
    4cd4:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    4cd8:	89 e0       	ldi	r24, 0x09	; 9
    4cda:	95 e0       	ldi	r25, 0x05	; 5
    4cdc:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
							arrcpy(scanPDM, PDMnow, 3);
    4ce0:	43 e0       	ldi	r20, 0x03	; 3
    4ce2:	61 e5       	ldi	r22, 0x51	; 81
    4ce4:	74 e0       	ldi	r23, 0x04	; 4
    4ce6:	8e e4       	ldi	r24, 0x4E	; 78
    4ce8:	94 e0       	ldi	r25, 0x04	; 4
    4cea:	0e 94 09 02 	call	0x412	; 0x412 <_ZL6arrcpyPhPKhh>
							updateConfMem();
    4cee:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
						}
					}
					switch(submenu){
    4cf2:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    4cf6:	82 30       	cpi	r24, 0x02	; 2
    4cf8:	01 f1       	breq	.+64     	; 0x4d3a <main+0x21c6>
    4cfa:	18 f4       	brcc	.+6      	; 0x4d02 <main+0x218e>
    4cfc:	81 30       	cpi	r24, 0x01	; 1
    4cfe:	39 f0       	breq	.+14     	; 0x4d0e <main+0x219a>
    4d00:	bb c4       	rjmp	.+2422   	; 0x5678 <main+0x2b04>
    4d02:	83 30       	cpi	r24, 0x03	; 3
    4d04:	81 f1       	breq	.+96     	; 0x4d66 <main+0x21f2>
    4d06:	84 30       	cpi	r24, 0x04	; 4
    4d08:	09 f4       	brne	.+2      	; 0x4d0c <main+0x2198>
    4d0a:	42 c0       	rjmp	.+132    	; 0x4d90 <main+0x221c>
    4d0c:	b5 c4       	rjmp	.+2410   	; 0x5678 <main+0x2b04>
						case 1:PDMnow[0] = _lim(PDMnow[0]+pb[4]-pb[5], 0, 255);break;
    4d0e:	20 91 51 04 	lds	r18, 0x0451	; 0x800451 <_ZL6PDMnow>
    4d12:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4d16:	90 e0       	ldi	r25, 0x00	; 0
    4d18:	82 0f       	add	r24, r18
    4d1a:	91 1d       	adc	r25, r1
    4d1c:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4d20:	82 1b       	sub	r24, r18
    4d22:	91 09       	sbc	r25, r1
    4d24:	32 f0       	brmi	.+12     	; 0x4d32 <main+0x21be>
    4d26:	8f 3f       	cpi	r24, 0xFF	; 255
    4d28:	91 05       	cpc	r25, r1
    4d2a:	21 f0       	breq	.+8      	; 0x4d34 <main+0x21c0>
    4d2c:	1c f0       	brlt	.+6      	; 0x4d34 <main+0x21c0>
    4d2e:	8f ef       	ldi	r24, 0xFF	; 255
    4d30:	01 c0       	rjmp	.+2      	; 0x4d34 <main+0x21c0>
    4d32:	80 e0       	ldi	r24, 0x00	; 0
    4d34:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <_ZL6PDMnow>
    4d38:	9f c4       	rjmp	.+2366   	; 0x5678 <main+0x2b04>
						case 2:PDMnow[1] = _lim(PDMnow[1]+pb[4]-pb[5], 0, 255);break;
    4d3a:	20 91 52 04 	lds	r18, 0x0452	; 0x800452 <_ZL6PDMnow+0x1>
    4d3e:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4d42:	90 e0       	ldi	r25, 0x00	; 0
    4d44:	82 0f       	add	r24, r18
    4d46:	91 1d       	adc	r25, r1
    4d48:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4d4c:	82 1b       	sub	r24, r18
    4d4e:	91 09       	sbc	r25, r1
    4d50:	32 f0       	brmi	.+12     	; 0x4d5e <main+0x21ea>
    4d52:	8f 3f       	cpi	r24, 0xFF	; 255
    4d54:	91 05       	cpc	r25, r1
    4d56:	21 f0       	breq	.+8      	; 0x4d60 <main+0x21ec>
    4d58:	1c f0       	brlt	.+6      	; 0x4d60 <main+0x21ec>
    4d5a:	8f ef       	ldi	r24, 0xFF	; 255
    4d5c:	01 c0       	rjmp	.+2      	; 0x4d60 <main+0x21ec>
    4d5e:	80 e0       	ldi	r24, 0x00	; 0
    4d60:	80 93 52 04 	sts	0x0452, r24	; 0x800452 <_ZL6PDMnow+0x1>
    4d64:	89 c4       	rjmp	.+2322   	; 0x5678 <main+0x2b04>
						case 3:PDMnow[2] = _lim(PDMnow[2]+pb[4]-pb[5], 0, 1);break;
    4d66:	20 91 53 04 	lds	r18, 0x0453	; 0x800453 <_ZL6PDMnow+0x2>
    4d6a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4d6e:	90 e0       	ldi	r25, 0x00	; 0
    4d70:	82 0f       	add	r24, r18
    4d72:	91 1d       	adc	r25, r1
    4d74:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4d78:	82 1b       	sub	r24, r18
    4d7a:	91 09       	sbc	r25, r1
    4d7c:	2a f0       	brmi	.+10     	; 0x4d88 <main+0x2214>
    4d7e:	18 16       	cp	r1, r24
    4d80:	19 06       	cpc	r1, r25
    4d82:	1c f4       	brge	.+6      	; 0x4d8a <main+0x2216>
    4d84:	c4 01       	movw	r24, r8
    4d86:	01 c0       	rjmp	.+2      	; 0x4d8a <main+0x2216>
    4d88:	80 e0       	ldi	r24, 0x00	; 0
    4d8a:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <_ZL6PDMnow+0x2>
    4d8e:	74 c4       	rjmp	.+2280   	; 0x5678 <main+0x2b04>
						case 4:scanVel = _lim(scanVel+pb[4]-pb[5], 0, 100);break;
    4d90:	20 91 4d 04 	lds	r18, 0x044D	; 0x80044d <_ZL7scanVel>
    4d94:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4d98:	90 e0       	ldi	r25, 0x00	; 0
    4d9a:	82 0f       	add	r24, r18
    4d9c:	91 1d       	adc	r25, r1
    4d9e:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4da2:	82 1b       	sub	r24, r18
    4da4:	91 09       	sbc	r25, r1
    4da6:	32 f0       	brmi	.+12     	; 0x4db4 <main+0x2240>
    4da8:	85 36       	cpi	r24, 0x65	; 101
    4daa:	91 05       	cpc	r25, r1
    4dac:	24 f0       	brlt	.+8      	; 0x4db6 <main+0x2242>
    4dae:	84 e6       	ldi	r24, 0x64	; 100
    4db0:	90 e0       	ldi	r25, 0x00	; 0
    4db2:	01 c0       	rjmp	.+2      	; 0x4db6 <main+0x2242>
    4db4:	80 e0       	ldi	r24, 0x00	; 0
    4db6:	80 93 4d 04 	sts	0x044D, r24	; 0x80044d <_ZL7scanVel>
    4dba:	5e c4       	rjmp	.+2236   	; 0x5678 <main+0x2b04>
					}
				}
				else{
					PDMsel = _lim(PDMsel+pb[4]-pb[5], 0 , 10);
    4dbc:	20 91 54 04 	lds	r18, 0x0454	; 0x800454 <_ZL6PDMsel>
    4dc0:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4dc4:	90 e0       	ldi	r25, 0x00	; 0
    4dc6:	82 0f       	add	r24, r18
    4dc8:	91 1d       	adc	r25, r1
    4dca:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4dce:	82 1b       	sub	r24, r18
    4dd0:	91 09       	sbc	r25, r1
    4dd2:	12 f4       	brpl	.+4      	; 0x4dd8 <main+0x2264>
    4dd4:	0c 94 de 37 	jmp	0x6fbc	; 0x6fbc <main+0x4448>
    4dd8:	8b 30       	cpi	r24, 0x0B	; 11
    4dda:	91 05       	cpc	r25, r1
    4ddc:	14 f0       	brlt	.+4      	; 0x4de2 <main+0x226e>
    4dde:	8a e0       	ldi	r24, 0x0A	; 10
    4de0:	90 e0       	ldi	r25, 0x00	; 0
    4de2:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <_ZL6PDMsel>
					if(pb[3] == 3){submenu = 1;
    4de6:	20 91 7e 04 	lds	r18, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4dea:	23 30       	cpi	r18, 0x03	; 3
    4dec:	09 f0       	breq	.+2      	; 0x4df0 <main+0x227c>
    4dee:	44 c4       	rjmp	.+2184   	; 0x5678 <main+0x2b04>
    4df0:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
						if(PDMsel == 0){
    4df4:	81 11       	cpse	r24, r1
    4df6:	0a c0       	rjmp	.+20     	; 0x4e0c <main+0x2298>
							readConfMem();
    4df8:	0e 94 2f 03 	call	0x65e	; 0x65e <_ZL11readConfMemv>
							arrcpy(PDMnow, scanPDM, 3);
    4dfc:	43 e0       	ldi	r20, 0x03	; 3
    4dfe:	6e e4       	ldi	r22, 0x4E	; 78
    4e00:	74 e0       	ldi	r23, 0x04	; 4
    4e02:	81 e5       	ldi	r24, 0x51	; 81
    4e04:	94 e0       	ldi	r25, 0x04	; 4
    4e06:	0e 94 09 02 	call	0x412	; 0x412 <_ZL6arrcpyPhPKhh>
    4e0a:	36 c4       	rjmp	.+2156   	; 0x5678 <main+0x2b04>
						}
						else{readPDMmem(PDMsel-1);}
    4e0c:	99 27       	eor	r25, r25
    4e0e:	01 97       	sbiw	r24, 0x01	; 1
    4e10:	bc 01       	movw	r22, r24
    4e12:	66 0f       	add	r22, r22
    4e14:	77 1f       	adc	r23, r23
    4e16:	86 0f       	add	r24, r22
    4e18:	97 1f       	adc	r25, r23
    4e1a:	bc 01       	movw	r22, r24
    4e1c:	6d 5c       	subi	r22, 0xCD	; 205
    4e1e:	7f 4f       	sbci	r23, 0xFF	; 255
    4e20:	43 e0       	ldi	r20, 0x03	; 3
    4e22:	50 e0       	ldi	r21, 0x00	; 0
    4e24:	81 e5       	ldi	r24, 0x51	; 81
    4e26:	94 e0       	ldi	r25, 0x04	; 4
    4e28:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
    4e2c:	25 c4       	rjmp	.+2122   	; 0x5678 <main+0x2b04>
					}
				}
			break;
			//Sensor
			case 5:
				if(submenu > 0){
    4e2e:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    4e32:	88 23       	and	r24, r24
    4e34:	09 f4       	brne	.+2      	; 0x4e38 <main+0x22c4>
    4e36:	7d c1       	rjmp	.+762    	; 0x5132 <main+0x25be>
					if(submenu == 1){
    4e38:	81 30       	cpi	r24, 0x01	; 1
    4e3a:	f9 f4       	brne	.+62     	; 0x4e7a <main+0x2306>
						useATC = _lim(useATC+pb[4]-pb[5], 0, 1);
    4e3c:	40 91 7f 04 	lds	r20, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4e40:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ZL6useATC>
    4e44:	24 2f       	mov	r18, r20
    4e46:	30 e0       	ldi	r19, 0x00	; 0
    4e48:	28 0f       	add	r18, r24
    4e4a:	31 1d       	adc	r19, r1
    4e4c:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4e50:	68 2f       	mov	r22, r24
    4e52:	70 e0       	ldi	r23, 0x00	; 0
    4e54:	f9 01       	movw	r30, r18
    4e56:	e6 1b       	sub	r30, r22
    4e58:	f7 0b       	sbc	r31, r23
    4e5a:	32 f0       	brmi	.+12     	; 0x4e68 <main+0x22f4>
    4e5c:	9d 2d       	mov	r25, r13
    4e5e:	26 17       	cp	r18, r22
    4e60:	37 07       	cpc	r19, r23
    4e62:	19 f4       	brne	.+6      	; 0x4e6a <main+0x22f6>
    4e64:	90 e0       	ldi	r25, 0x00	; 0
    4e66:	01 c0       	rjmp	.+2      	; 0x4e6a <main+0x22f6>
    4e68:	90 e0       	ldi	r25, 0x00	; 0
    4e6a:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <_ZL6useATC>
						if(pb[4] | pb[5]){
    4e6e:	84 2b       	or	r24, r20
    4e70:	21 f0       	breq	.+8      	; 0x4e7a <main+0x2306>
							updateConfMem();
    4e72:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
							readSensCfg();
    4e76:	0e 94 a2 03 	call	0x744	; 0x744 <_ZL11readSensCfgv>
						}
					}
					if(useATC && cal == 0){
    4e7a:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ZL6useATC>
    4e7e:	88 23       	and	r24, r24
    4e80:	09 f4       	brne	.+2      	; 0x4e84 <main+0x2310>
    4e82:	58 c0       	rjmp	.+176    	; 0x4f34 <main+0x23c0>
    4e84:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    4e88:	81 11       	cpse	r24, r1
    4e8a:	0c 94 ef 37 	jmp	0x6fde	; 0x6fde <main+0x446a>
						submenu = _lim(submenu+pb[0]-pb[1], 1 ,3);
    4e8e:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4e92:	30 91 84 04 	lds	r19, 0x0484	; 0x800484 <_ZL7submenu>
    4e96:	eb e7       	ldi	r30, 0x7B	; 123
    4e98:	f4 e0       	ldi	r31, 0x04	; 4
    4e9a:	80 81       	ld	r24, Z
    4e9c:	90 e0       	ldi	r25, 0x00	; 0
    4e9e:	83 0f       	add	r24, r19
    4ea0:	91 1d       	adc	r25, r1
    4ea2:	82 1b       	sub	r24, r18
    4ea4:	91 09       	sbc	r25, r1
    4ea6:	18 16       	cp	r1, r24
    4ea8:	19 06       	cpc	r1, r25
    4eaa:	14 f0       	brlt	.+4      	; 0x4eb0 <main+0x233c>
    4eac:	0c 94 e7 37 	jmp	0x6fce	; 0x6fce <main+0x445a>
    4eb0:	84 30       	cpi	r24, 0x04	; 4
    4eb2:	91 05       	cpc	r25, r1
    4eb4:	14 f0       	brlt	.+4      	; 0x4eba <main+0x2346>
    4eb6:	83 e0       	ldi	r24, 0x03	; 3
    4eb8:	90 e0       	ldi	r25, 0x00	; 0
    4eba:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						if(pb[1] && submenu == 1){updateSensCfg();}
    4ebe:	22 23       	and	r18, r18
    4ec0:	21 f0       	breq	.+8      	; 0x4eca <main+0x2356>
    4ec2:	81 30       	cpi	r24, 0x01	; 1
    4ec4:	11 f4       	brne	.+4      	; 0x4eca <main+0x2356>
    4ec6:	0e 94 93 02 	call	0x526	; 0x526 <_ZL13updateSensCfgv>
						switch(submenu){
    4eca:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    4ece:	82 30       	cpi	r24, 0x02	; 2
    4ed0:	19 f0       	breq	.+6      	; 0x4ed8 <main+0x2364>
    4ed2:	83 30       	cpi	r24, 0x03	; 3
    4ed4:	c1 f0       	breq	.+48     	; 0x4f06 <main+0x2392>
    4ed6:	1d c1       	rjmp	.+570    	; 0x5112 <main+0x259e>
							case 2:sensLo = _lim(sensLo+pb[4]-pb[5], 0, 1023);break;
    4ed8:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4edc:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <_ZL6sensLo>
    4ee0:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
    4ee4:	82 0f       	add	r24, r18
    4ee6:	91 1d       	adc	r25, r1
    4ee8:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4eec:	82 1b       	sub	r24, r18
    4eee:	91 09       	sbc	r25, r1
    4ef0:	81 15       	cp	r24, r1
    4ef2:	f4 e0       	ldi	r31, 0x04	; 4
    4ef4:	9f 07       	cpc	r25, r31
    4ef6:	10 f0       	brcs	.+4      	; 0x4efc <main+0x2388>
    4ef8:	8f ef       	ldi	r24, 0xFF	; 255
    4efa:	93 e0       	ldi	r25, 0x03	; 3
    4efc:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <_ZL6sensLo+0x1>
    4f00:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <_ZL6sensLo>
    4f04:	06 c1       	rjmp	.+524    	; 0x5112 <main+0x259e>
							case 3:sensHi = _lim(sensHi+pb[4]-pb[5], 0, 300);break;
    4f06:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    4f0a:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <_ZL6sensHi>
    4f0e:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    4f12:	82 0f       	add	r24, r18
    4f14:	91 1d       	adc	r25, r1
    4f16:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    4f1a:	82 1b       	sub	r24, r18
    4f1c:	91 09       	sbc	r25, r1
    4f1e:	8d 32       	cpi	r24, 0x2D	; 45
    4f20:	21 e0       	ldi	r18, 0x01	; 1
    4f22:	92 07       	cpc	r25, r18
    4f24:	10 f0       	brcs	.+4      	; 0x4f2a <main+0x23b6>
    4f26:	8c e2       	ldi	r24, 0x2C	; 44
    4f28:	91 e0       	ldi	r25, 0x01	; 1
    4f2a:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <_ZL6sensHi+0x1>
    4f2e:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <_ZL6sensHi>
    4f32:	ef c0       	rjmp	.+478    	; 0x5112 <main+0x259e>
						}
					}
					else{
						if(cal == 0){submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);}
    4f34:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    4f38:	81 11       	cpse	r24, r1
    4f3a:	0c 94 f7 37 	jmp	0x6fee	; 0x6fee <main+0x447a>
    4f3e:	20 91 84 04 	lds	r18, 0x0484	; 0x800484 <_ZL7submenu>
    4f42:	eb e7       	ldi	r30, 0x7B	; 123
    4f44:	f4 e0       	ldi	r31, 0x04	; 4
    4f46:	80 81       	ld	r24, Z
    4f48:	90 e0       	ldi	r25, 0x00	; 0
    4f4a:	82 0f       	add	r24, r18
    4f4c:	91 1d       	adc	r25, r1
    4f4e:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4f52:	82 1b       	sub	r24, r18
    4f54:	91 09       	sbc	r25, r1
    4f56:	18 16       	cp	r1, r24
    4f58:	19 06       	cpc	r1, r25
    4f5a:	14 f0       	brlt	.+4      	; 0x4f60 <main+0x23ec>
    4f5c:	0c 94 5b 38 	jmp	0x70b6	; 0x70b6 <main+0x4542>
    4f60:	83 30       	cpi	r24, 0x03	; 3
    4f62:	91 05       	cpc	r25, r1
    4f64:	14 f0       	brlt	.+4      	; 0x4f6a <main+0x23f6>
    4f66:	82 e0       	ldi	r24, 0x02	; 2
    4f68:	90 e0       	ldi	r25, 0x00	; 0
    4f6a:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						if(submenu == 2){
    4f6e:	82 30       	cpi	r24, 0x02	; 2
    4f70:	09 f0       	breq	.+2      	; 0x4f74 <main+0x2400>
    4f72:	cf c0       	rjmp	.+414    	; 0x5112 <main+0x259e>
							if(cal == 0){
								if(pb[3] == 3){
    4f74:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    4f78:	83 30       	cpi	r24, 0x03	; 3
    4f7a:	09 f0       	breq	.+2      	; 0x4f7e <main+0x240a>
    4f7c:	ca c0       	rjmp	.+404    	; 0x5112 <main+0x259e>
									uppDsp = 0;
    4f7e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
									pb[3] = 0;
    4f82:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <_ZL2pb+0x3>
									cal = 1;
    4f86:	d0 92 38 04 	sts	0x0438, r13	; 0x800438 <_ZL3cal>
									sensHi = 0;
    4f8a:	10 92 12 04 	sts	0x0412, r1	; 0x800412 <_ZL6sensHi+0x1>
    4f8e:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <_ZL6sensHi>
									sensLo = 1023;
    4f92:	8f ef       	ldi	r24, 0xFF	; 255
    4f94:	93 e0       	ldi	r25, 0x03	; 3
    4f96:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <_ZL6sensLo+0x1>
    4f9a:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <_ZL6sensLo>
									LCD.Clear();
    4f9e:	89 e0       	ldi	r24, 0x09	; 9
    4fa0:	95 e0       	ldi	r25, 0x05	; 5
    4fa2:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    4fa6:	b5 c0       	rjmp	.+362    	; 0x5112 <main+0x259e>
								}
							}
							else{
								if(pb[1]){
    4fa8:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <_ZL2pb+0x1>
    4fac:	88 23       	and	r24, r24
    4fae:	c1 f0       	breq	.+48     	; 0x4fe0 <main+0x246c>
									cal = 2;
    4fb0:	82 e0       	ldi	r24, 0x02	; 2
    4fb2:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <_ZL3cal>
									sensHi = 1023; sensLo = 0;
    4fb6:	8f ef       	ldi	r24, 0xFF	; 255
    4fb8:	93 e0       	ldi	r25, 0x03	; 3
    4fba:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <_ZL6sensHi+0x1>
    4fbe:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <_ZL6sensHi>
    4fc2:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <_ZL6sensLo+0x1>
    4fc6:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <_ZL6sensLo>
    4fca:	ea ec       	ldi	r30, 0xCA	; 202
    4fcc:	f4 e0       	ldi	r31, 0x04	; 4
    4fce:	86 ee       	ldi	r24, 0xE6	; 230
    4fd0:	94 e0       	ldi	r25, 0x04	; 4
									for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){Sens.SensOffs[gpVar2] = 0;}
    4fd2:	11 92       	st	Z+, r1
    4fd4:	11 92       	st	Z+, r1
    4fd6:	8e 17       	cp	r24, r30
    4fd8:	9f 07       	cpc	r25, r31
    4fda:	d9 f7       	brne	.-10     	; 0x4fd2 <main+0x245e>
    4fdc:	0c 94 ff 37 	jmp	0x6ffe	; 0x6ffe <main+0x448a>
								}
								if(cal == 1){
    4fe0:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    4fe4:	81 30       	cpi	r24, 0x01	; 1
    4fe6:	11 f0       	breq	.+4      	; 0x4fec <main+0x2478>
    4fe8:	0c 94 11 38 	jmp	0x7022	; 0x7022 <main+0x44ae>
									if(Sens.ResultLow < sensLo && Sens.ResultHigh != 1023){sensLo = Sens.ResultLow;}
    4fec:	20 91 c6 04 	lds	r18, 0x04C6	; 0x8004c6 <Sens+0x1c>
    4ff0:	30 91 c7 04 	lds	r19, 0x04C7	; 0x8004c7 <Sens+0x1d>
    4ff4:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <_ZL6sensLo>
    4ff8:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
    4ffc:	28 17       	cp	r18, r24
    4ffe:	39 07       	cpc	r19, r25
    5000:	b8 f4       	brcc	.+46     	; 0x5030 <main+0x24bc>
    5002:	80 91 c8 04 	lds	r24, 0x04C8	; 0x8004c8 <Sens+0x1e>
    5006:	90 91 c9 04 	lds	r25, 0x04C9	; 0x8004c9 <Sens+0x1f>
    500a:	8f 3f       	cpi	r24, 0xFF	; 255
    500c:	f3 e0       	ldi	r31, 0x03	; 3
    500e:	9f 07       	cpc	r25, r31
    5010:	11 f4       	brne	.+4      	; 0x5016 <main+0x24a2>
    5012:	0c 94 0a 38 	jmp	0x7014	; 0x7014 <main+0x44a0>
    5016:	30 93 10 04 	sts	0x0410, r19	; 0x800410 <_ZL6sensLo+0x1>
    501a:	20 93 0f 04 	sts	0x040F, r18	; 0x80040f <_ZL6sensLo>
									if(Sens.ResultHigh > sensHi && Sens.ResultHigh != 1023){sensHi = Sens.ResultHigh;}
    501e:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <_ZL6sensHi>
    5022:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    5026:	28 17       	cp	r18, r24
    5028:	39 07       	cpc	r19, r25
    502a:	a8 f0       	brcs	.+42     	; 0x5056 <main+0x24e2>
    502c:	0c 94 5f 38 	jmp	0x70be	; 0x70be <main+0x454a>
    5030:	80 91 c8 04 	lds	r24, 0x04C8	; 0x8004c8 <Sens+0x1e>
    5034:	90 91 c9 04 	lds	r25, 0x04C9	; 0x8004c9 <Sens+0x1f>
    5038:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <_ZL6sensHi>
    503c:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    5040:	28 17       	cp	r18, r24
    5042:	39 07       	cpc	r19, r25
    5044:	10 f0       	brcs	.+4      	; 0x504a <main+0x24d6>
    5046:	0c 94 0a 38 	jmp	0x7014	; 0x7014 <main+0x44a0>
    504a:	8f 3f       	cpi	r24, 0xFF	; 255
    504c:	23 e0       	ldi	r18, 0x03	; 3
    504e:	92 07       	cpc	r25, r18
    5050:	11 f4       	brne	.+4      	; 0x5056 <main+0x24e2>
    5052:	0c 94 0a 38 	jmp	0x7014	; 0x7014 <main+0x44a0>
    5056:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <_ZL6sensHi+0x1>
    505a:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <_ZL6sensHi>
    505e:	0c 94 0a 38 	jmp	0x7014	; 0x7014 <main+0x44a0>
								}
								if(pb[3] == 3){
									if(cal == 1){updateSensCfg();}
    5062:	0e 94 93 02 	call	0x526	; 0x526 <_ZL13updateSensCfgv>
    5066:	1b c0       	rjmp	.+54     	; 0x509e <main+0x252a>
								if(pb[1]){
									cal = 2;
									sensHi = 1023; sensLo = 0;
									for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){Sens.SensOffs[gpVar2] = 0;}
								}
								if(cal == 1){
    5068:	82 e0       	ldi	r24, 0x02	; 2
									if(Sens.ResultLow < sensLo && Sens.ResultHigh != 1023){sensLo = Sens.ResultLow;}
									if(Sens.ResultHigh > sensHi && Sens.ResultHigh != 1023){sensHi = Sens.ResultHigh;}
								}
								if(pb[3] == 3){
									if(cal == 1){updateSensCfg();}
									else if(cal == 2){
    506a:	82 30       	cpi	r24, 0x02	; 2
    506c:	c1 f4       	brne	.+48     	; 0x509e <main+0x252a>
										for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){Sens.SensOffs[gpVar2] = Sens.ResultRaw[gpVar2] - Sens.ResultLow;}
    506e:	40 91 c6 04 	lds	r20, 0x04C6	; 0x8004c6 <Sens+0x1c>
    5072:	50 91 c7 04 	lds	r21, 0x04C7	; 0x8004c7 <Sens+0x1d>
    5076:	ea ea       	ldi	r30, 0xAA	; 170
    5078:	f4 e0       	ldi	r31, 0x04	; 4
    507a:	26 ec       	ldi	r18, 0xC6	; 198
    507c:	34 e0       	ldi	r19, 0x04	; 4
    507e:	81 91       	ld	r24, Z+
    5080:	91 91       	ld	r25, Z+
    5082:	84 1b       	sub	r24, r20
    5084:	95 0b       	sbc	r25, r21
    5086:	97 8f       	std	Z+31, r25	; 0x1f
    5088:	86 8f       	std	Z+30, r24	; 0x1e
    508a:	2e 17       	cp	r18, r30
    508c:	3f 07       	cpc	r19, r31
    508e:	b9 f7       	brne	.-18     	; 0x507e <main+0x250a>
    5090:	8e e0       	ldi	r24, 0x0E	; 14
    5092:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <_ZL6gpVar2>
										updateSensOffs();
    5096:	0e 94 78 02 	call	0x4f0	; 0x4f0 <_ZL14updateSensOffsv>
										readSensCfg();
    509a:	0e 94 a2 03 	call	0x744	; 0x744 <_ZL11readSensCfgv>
									}
									uppDsp = 1;
    509e:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
									pb[3] = 0;
    50a2:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <_ZL2pb+0x3>
									cal = 0;
    50a6:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <_ZL3cal>
									LCD.Clear();
    50aa:	89 e0       	ldi	r24, 0x09	; 9
    50ac:	95 e0       	ldi	r25, 0x05	; 5
    50ae:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
								}
								if(pb[2] == 3){
    50b2:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    50b6:	83 30       	cpi	r24, 0x03	; 3
    50b8:	09 f0       	breq	.+2      	; 0x50bc <main+0x2548>
    50ba:	de c2       	rjmp	.+1468   	; 0x5678 <main+0x2b04>
									if(cal == 1){updateSensCfg();}
    50bc:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    50c0:	81 30       	cpi	r24, 0x01	; 1
    50c2:	19 f4       	brne	.+6      	; 0x50ca <main+0x2556>
    50c4:	0e 94 93 02 	call	0x526	; 0x526 <_ZL13updateSensCfgv>
    50c8:	1a c0       	rjmp	.+52     	; 0x50fe <main+0x258a>
									else if(cal == 2){
    50ca:	82 30       	cpi	r24, 0x02	; 2
    50cc:	c1 f4       	brne	.+48     	; 0x50fe <main+0x258a>
										for(gpVar2 = 0;gpVar2 < 14;gpVar2 ++){Sens.SensOffs[gpVar2] = Sens.ResultRaw[gpVar2] - Sens.ResultLow;}
    50ce:	40 91 c6 04 	lds	r20, 0x04C6	; 0x8004c6 <Sens+0x1c>
    50d2:	50 91 c7 04 	lds	r21, 0x04C7	; 0x8004c7 <Sens+0x1d>
    50d6:	ea ea       	ldi	r30, 0xAA	; 170
    50d8:	f4 e0       	ldi	r31, 0x04	; 4
    50da:	26 ec       	ldi	r18, 0xC6	; 198
    50dc:	34 e0       	ldi	r19, 0x04	; 4
    50de:	81 91       	ld	r24, Z+
    50e0:	91 91       	ld	r25, Z+
    50e2:	84 1b       	sub	r24, r20
    50e4:	95 0b       	sbc	r25, r21
    50e6:	97 8f       	std	Z+31, r25	; 0x1f
    50e8:	86 8f       	std	Z+30, r24	; 0x1e
    50ea:	2e 17       	cp	r18, r30
    50ec:	3f 07       	cpc	r19, r31
    50ee:	b9 f7       	brne	.-18     	; 0x50de <main+0x256a>
    50f0:	8e e0       	ldi	r24, 0x0E	; 14
    50f2:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <_ZL6gpVar2>
										updateSensOffs();
    50f6:	0e 94 78 02 	call	0x4f0	; 0x4f0 <_ZL14updateSensOffsv>
										readSensCfg();
    50fa:	0e 94 a2 03 	call	0x744	; 0x744 <_ZL11readSensCfgv>
									}
									uppDsp = 1;
    50fe:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
									pb[2] = 0;
    5102:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <_ZL2pb+0x2>
									cal = 0;
    5106:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <_ZL3cal>
									LCD.Clear();
    510a:	89 e0       	ldi	r24, 0x09	; 9
    510c:	95 e0       	ldi	r25, 0x05	; 5
    510e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
								}
							}
						}
					}
					if(pb[2] == 3){
    5112:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    5116:	83 30       	cpi	r24, 0x03	; 3
    5118:	09 f0       	breq	.+2      	; 0x511c <main+0x25a8>
    511a:	ae c2       	rjmp	.+1372   	; 0x5678 <main+0x2b04>
						updateSensCfg();
    511c:	0e 94 93 02 	call	0x526	; 0x526 <_ZL13updateSensCfgv>
						submenu = 0;uppDsp = 1;LCD.Clear();}
    5120:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    5124:	d0 92 60 00 	sts	0x0060, r13	; 0x800060 <__data_start>
    5128:	89 e0       	ldi	r24, 0x09	; 9
    512a:	95 e0       	ldi	r25, 0x05	; 5
    512c:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    5130:	a3 c2       	rjmp	.+1350   	; 0x5678 <main+0x2b04>
				}
				else{
					if(pb[3] == 3){
    5132:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    5136:	83 30       	cpi	r24, 0x03	; 3
    5138:	09 f0       	breq	.+2      	; 0x513c <main+0x25c8>
    513a:	9e c2       	rjmp	.+1340   	; 0x5678 <main+0x2b04>
						readSensCfg();
    513c:	0e 94 a2 03 	call	0x744	; 0x744 <_ZL11readSensCfgv>
						submenu = 1;LCD.Clear();}
    5140:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    5144:	89 e0       	ldi	r24, 0x09	; 9
    5146:	95 e0       	ldi	r25, 0x05	; 5
    5148:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    514c:	95 c2       	rjmp	.+1322   	; 0x5678 <main+0x2b04>
				}
			break;
			//Motor Offset
			case 6:
				if(submenu > 0){
    514e:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5152:	88 23       	and	r24, r24
    5154:	09 f4       	brne	.+2      	; 0x5158 <main+0x25e4>
    5156:	61 c0       	rjmp	.+194    	; 0x521a <main+0x26a6>
					submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);
    5158:	eb e7       	ldi	r30, 0x7B	; 123
    515a:	f4 e0       	ldi	r31, 0x04	; 4
    515c:	20 81       	ld	r18, Z
    515e:	90 e0       	ldi	r25, 0x00	; 0
    5160:	82 0f       	add	r24, r18
    5162:	91 1d       	adc	r25, r1
    5164:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    5168:	82 1b       	sub	r24, r18
    516a:	91 09       	sbc	r25, r1
    516c:	18 16       	cp	r1, r24
    516e:	19 06       	cpc	r1, r25
    5170:	34 f4       	brge	.+12     	; 0x517e <main+0x260a>
    5172:	83 30       	cpi	r24, 0x03	; 3
    5174:	91 05       	cpc	r25, r1
    5176:	24 f0       	brlt	.+8      	; 0x5180 <main+0x260c>
    5178:	82 e0       	ldi	r24, 0x02	; 2
    517a:	90 e0       	ldi	r25, 0x00	; 0
    517c:	01 c0       	rjmp	.+2      	; 0x5180 <main+0x260c>
    517e:	8d 2d       	mov	r24, r13
    5180:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
					if(pb[2] == 3){submenu = 0;
    5184:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    5188:	83 30       	cpi	r24, 0x03	; 3
    518a:	a1 f4       	brne	.+40     	; 0x51b4 <main+0x2640>
    518c:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
						Motor.Config(1023, mtrOffsL, mtrOffsR);
    5190:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <_ZL8mtrOffsR>
    5194:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <_ZL8mtrOffsL>
	//TCNT1 Init (Phase Correct PWM 10-Bit, Clk/8 Prescaler)
	TCCR1A = (1<<COM1A1)|(0<<COM1A0)|(1<<COM1B1)|(0<<COM1B0)|(1<<WGM11)|(1<<WGM10);
	TCCR1B = (0<<WGM13)|(0<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
}
void MotorLib::Config(uint16_t vLimit, uint8_t ofL, uint8_t ofR){
	_motor_vLimit = vLimit;
    5198:	e6 ea       	ldi	r30, 0xA6	; 166
    519a:	f4 e0       	ldi	r31, 0x04	; 4
    519c:	2f ef       	ldi	r18, 0xFF	; 255
    519e:	33 e0       	ldi	r19, 0x03	; 3
    51a0:	31 83       	std	Z+1, r19	; 0x01
    51a2:	20 83       	st	Z, r18
	_motor_ofL = ofL;
    51a4:	92 83       	std	Z+2, r25	; 0x02
	_motor_ofR = ofR;
    51a6:	83 83       	std	Z+3, r24	; 0x03
						updateConfMem();LCD.Clear();
    51a8:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
    51ac:	89 e0       	ldi	r24, 0x09	; 9
    51ae:	95 e0       	ldi	r25, 0x05	; 5
    51b0:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					}
					if(submenu == 1){mtrOffsL = _lim(mtrOffsL+pb[4]-pb[5], 1, 199);}
    51b4:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    51b8:	81 30       	cpi	r24, 0x01	; 1
    51ba:	b9 f4       	brne	.+46     	; 0x51ea <main+0x2676>
    51bc:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <_ZL8mtrOffsL>
    51c0:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <_ZL2pb+0x4>
    51c4:	30 e0       	ldi	r19, 0x00	; 0
    51c6:	29 0f       	add	r18, r25
    51c8:	31 1d       	adc	r19, r1
    51ca:	90 91 80 04 	lds	r25, 0x0480	; 0x800480 <_ZL2pb+0x5>
    51ce:	29 1b       	sub	r18, r25
    51d0:	31 09       	sbc	r19, r1
    51d2:	12 16       	cp	r1, r18
    51d4:	13 06       	cpc	r1, r19
    51d6:	34 f4       	brge	.+12     	; 0x51e4 <main+0x2670>
    51d8:	c9 01       	movw	r24, r18
    51da:	28 3c       	cpi	r18, 0xC8	; 200
    51dc:	31 05       	cpc	r19, r1
    51de:	14 f0       	brlt	.+4      	; 0x51e4 <main+0x2670>
    51e0:	87 ec       	ldi	r24, 0xC7	; 199
    51e2:	90 e0       	ldi	r25, 0x00	; 0
    51e4:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <_ZL8mtrOffsL>
    51e8:	47 c2       	rjmp	.+1166   	; 0x5678 <main+0x2b04>
					else{mtrOffsR = _lim(mtrOffsR+pb[4]-pb[5], 1, 199);}
    51ea:	20 91 65 00 	lds	r18, 0x0065	; 0x800065 <_ZL8mtrOffsR>
    51ee:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    51f2:	90 e0       	ldi	r25, 0x00	; 0
    51f4:	82 0f       	add	r24, r18
    51f6:	91 1d       	adc	r25, r1
    51f8:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    51fc:	82 1b       	sub	r24, r18
    51fe:	91 09       	sbc	r25, r1
    5200:	18 16       	cp	r1, r24
    5202:	19 06       	cpc	r1, r25
    5204:	34 f4       	brge	.+12     	; 0x5212 <main+0x269e>
    5206:	88 3c       	cpi	r24, 0xC8	; 200
    5208:	91 05       	cpc	r25, r1
    520a:	24 f0       	brlt	.+8      	; 0x5214 <main+0x26a0>
    520c:	87 ec       	ldi	r24, 0xC7	; 199
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	01 c0       	rjmp	.+2      	; 0x5214 <main+0x26a0>
    5212:	8d 2d       	mov	r24, r13
    5214:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <_ZL8mtrOffsR>
    5218:	2f c2       	rjmp	.+1118   	; 0x5678 <main+0x2b04>
				}
				else{
					if(pb[3] == 3){submenu = 1;LCD.Clear();}
    521a:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    521e:	83 30       	cpi	r24, 0x03	; 3
    5220:	09 f0       	breq	.+2      	; 0x5224 <main+0x26b0>
    5222:	2a c2       	rjmp	.+1108   	; 0x5678 <main+0x2b04>
    5224:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    5228:	89 e0       	ldi	r24, 0x09	; 9
    522a:	95 e0       	ldi	r25, 0x05	; 5
    522c:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    5230:	23 c2       	rjmp	.+1094   	; 0x5678 <main+0x2b04>
				}
			break;
			//Selftest
			case 7:
				if(submenu > 0){
    5232:	20 91 84 04 	lds	r18, 0x0484	; 0x800484 <_ZL7submenu>
    5236:	22 23       	and	r18, r18
    5238:	09 f4       	brne	.+2      	; 0x523c <main+0x26c8>
    523a:	cf c0       	rjmp	.+414    	; 0x53da <main+0x2866>
					submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);
    523c:	eb e7       	ldi	r30, 0x7B	; 123
    523e:	f4 e0       	ldi	r31, 0x04	; 4
    5240:	40 81       	ld	r20, Z
    5242:	30 91 7c 04 	lds	r19, 0x047C	; 0x80047c <_ZL2pb+0x1>
    5246:	84 2f       	mov	r24, r20
    5248:	90 e0       	ldi	r25, 0x00	; 0
    524a:	82 0f       	add	r24, r18
    524c:	91 1d       	adc	r25, r1
    524e:	83 1b       	sub	r24, r19
    5250:	91 09       	sbc	r25, r1
    5252:	18 16       	cp	r1, r24
    5254:	19 06       	cpc	r1, r25
    5256:	14 f0       	brlt	.+4      	; 0x525c <main+0x26e8>
    5258:	0c 94 18 38 	jmp	0x7030	; 0x7030 <main+0x44bc>
    525c:	83 30       	cpi	r24, 0x03	; 3
    525e:	91 05       	cpc	r25, r1
    5260:	14 f0       	brlt	.+4      	; 0x5266 <main+0x26f2>
    5262:	82 e0       	ldi	r24, 0x02	; 2
    5264:	90 e0       	ldi	r25, 0x00	; 0
    5266:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
					if(submenu == 1){
    526a:	81 30       	cpi	r24, 0x01	; 1
    526c:	09 f0       	breq	.+2      	; 0x5270 <main+0x26fc>
    526e:	4d c0       	rjmp	.+154    	; 0x530a <main+0x2796>
						if(testPD == 0){ 
    5270:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_ZL6testPD>
    5274:	81 11       	cpse	r24, r1
    5276:	30 c0       	rjmp	.+96     	; 0x52d8 <main+0x2764>
							if(pb[3] == 3){
    5278:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    527c:	83 30       	cpi	r24, 0x03	; 3
    527e:	09 f0       	breq	.+2      	; 0x5282 <main+0x270e>
    5280:	41 c0       	rjmp	.+130    	; 0x5304 <main+0x2790>
								testPD = 1; sysRun = 1; sensOff = 0;
    5282:	d0 92 c6 03 	sts	0x03C6, r13	; 0x8003c6 <_ZL6testPD>
    5286:	d0 92 c4 03 	sts	0x03C4, r13	; 0x8003c4 <_ZL6sysRun>
    528a:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <__data_end>
								if(PDMsel == 0){readConfMem();}
    528e:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <_ZL6PDMsel>
    5292:	81 11       	cpse	r24, r1
    5294:	03 c0       	rjmp	.+6      	; 0x529c <main+0x2728>
    5296:	0e 94 2f 03 	call	0x65e	; 0x65e <_ZL11readConfMemv>
    529a:	34 c0       	rjmp	.+104    	; 0x5304 <main+0x2790>
								else{
									readPDMmem(PDMsel-1);
    529c:	90 e0       	ldi	r25, 0x00	; 0
    529e:	01 97       	sbiw	r24, 0x01	; 1
    52a0:	bc 01       	movw	r22, r24
    52a2:	66 0f       	add	r22, r22
    52a4:	77 1f       	adc	r23, r23
    52a6:	86 0f       	add	r24, r22
    52a8:	97 1f       	adc	r25, r23
    52aa:	bc 01       	movw	r22, r24
    52ac:	6d 5c       	subi	r22, 0xCD	; 205
    52ae:	7f 4f       	sbci	r23, 0xFF	; 255
    52b0:	43 e0       	ldi	r20, 0x03	; 3
    52b2:	50 e0       	ldi	r21, 0x00	; 0
    52b4:	81 e5       	ldi	r24, 0x51	; 81
    52b6:	94 e0       	ldi	r25, 0x04	; 4
    52b8:	0e 94 bd 3d 	call	0x7b7a	; 0x7b7a <eeprom_read_block>
									scanPDM[0] = PDMnow[0];
    52bc:	ee e4       	ldi	r30, 0x4E	; 78
    52be:	f4 e0       	ldi	r31, 0x04	; 4
    52c0:	a1 e5       	ldi	r26, 0x51	; 81
    52c2:	b4 e0       	ldi	r27, 0x04	; 4
    52c4:	8c 91       	ld	r24, X
    52c6:	80 83       	st	Z, r24
									scanPDM[1] = PDMnow[1];
    52c8:	11 96       	adiw	r26, 0x01	; 1
    52ca:	8c 91       	ld	r24, X
    52cc:	11 97       	sbiw	r26, 0x01	; 1
    52ce:	81 83       	std	Z+1, r24	; 0x01
									scanPDM[2] = PDMnow[2];}
    52d0:	12 96       	adiw	r26, 0x02	; 2
    52d2:	8c 91       	ld	r24, X
    52d4:	82 83       	std	Z+2, r24	; 0x02
    52d6:	16 c0       	rjmp	.+44     	; 0x5304 <main+0x2790>
							}
						}
						else{
							if(pb[0] | pb[1] | pb[2] | pb[3] | pb[4] | pb[5]){
    52d8:	34 2b       	or	r19, r20
    52da:	90 91 7d 04 	lds	r25, 0x047D	; 0x80047d <_ZL2pb+0x2>
    52de:	93 2b       	or	r25, r19
    52e0:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    52e4:	98 2b       	or	r25, r24
    52e6:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    52ea:	98 2b       	or	r25, r24
    52ec:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZL2pb+0x5>
    52f0:	89 2b       	or	r24, r25
    52f2:	41 f0       	breq	.+16     	; 0x5304 <main+0x2790>
								pb[2] = 0;testPD = 0;sysRun = 0;
    52f4:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <_ZL2pb+0x2>
    52f8:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <_ZL6testPD>
    52fc:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
								readConfMem();}
    5300:	0e 94 2f 03 	call	0x65e	; 0x65e <_ZL11readConfMemv>
						}
						gpVar1 = 0;
    5304:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
    5308:	04 c0       	rjmp	.+8      	; 0x5312 <main+0x279e>
					}
					else{testPD = 0; sysRun = 0;}
    530a:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <_ZL6testPD>
    530e:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
					if(pb[2] == 3){submenu = 0;testPD = 0;sysRun = 0;readConfMem(); LCD.Clear();}
    5312:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    5316:	83 30       	cpi	r24, 0x03	; 3
    5318:	61 f4       	brne	.+24     	; 0x5332 <main+0x27be>
    531a:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    531e:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <_ZL6testPD>
    5322:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
    5326:	0e 94 2f 03 	call	0x65e	; 0x65e <_ZL11readConfMemv>
    532a:	89 e0       	ldi	r24, 0x09	; 9
    532c:	95 e0       	ldi	r25, 0x05	; 5
    532e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					if(submenu == 2){
    5332:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5336:	82 30       	cpi	r24, 0x02	; 2
    5338:	09 f0       	breq	.+2      	; 0x533c <main+0x27c8>
    533a:	9e c1       	rjmp	.+828    	; 0x5678 <main+0x2b04>
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 4);
    533c:	20 91 78 04 	lds	r18, 0x0478	; 0x800478 <_ZL6gpVar1>
    5340:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    5344:	90 e0       	ldi	r25, 0x00	; 0
    5346:	82 0f       	add	r24, r18
    5348:	91 1d       	adc	r25, r1
    534a:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    534e:	82 1b       	sub	r24, r18
    5350:	91 09       	sbc	r25, r1
    5352:	12 f4       	brpl	.+4      	; 0x5358 <main+0x27e4>
    5354:	0c 94 1c 38 	jmp	0x7038	; 0x7038 <main+0x44c4>
    5358:	85 30       	cpi	r24, 0x05	; 5
    535a:	91 05       	cpc	r25, r1
    535c:	14 f0       	brlt	.+4      	; 0x5362 <main+0x27ee>
    535e:	84 e0       	ldi	r24, 0x04	; 4
    5360:	90 e0       	ldi	r25, 0x00	; 0
    5362:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
						switch(gpVar1){
    5366:	82 30       	cpi	r24, 0x02	; 2
    5368:	e9 f0       	breq	.+58     	; 0x53a4 <main+0x2830>
    536a:	28 f4       	brcc	.+10     	; 0x5376 <main+0x2802>
    536c:	88 23       	and	r24, r24
    536e:	41 f0       	breq	.+16     	; 0x5380 <main+0x280c>
    5370:	81 30       	cpi	r24, 0x01	; 1
    5372:	79 f0       	breq	.+30     	; 0x5392 <main+0x281e>
    5374:	81 c1       	rjmp	.+770    	; 0x5678 <main+0x2b04>
    5376:	83 30       	cpi	r24, 0x03	; 3
    5378:	f1 f0       	breq	.+60     	; 0x53b6 <main+0x2842>
    537a:	84 30       	cpi	r24, 0x04	; 4
    537c:	29 f1       	breq	.+74     	; 0x53c8 <main+0x2854>
    537e:	7c c1       	rjmp	.+760    	; 0x5678 <main+0x2b04>
							case 0:Motor.Drive(0,0);break;
    5380:	40 e0       	ldi	r20, 0x00	; 0
    5382:	50 e0       	ldi	r21, 0x00	; 0
    5384:	60 e0       	ldi	r22, 0x00	; 0
    5386:	70 e0       	ldi	r23, 0x00	; 0
    5388:	86 ea       	ldi	r24, 0xA6	; 166
    538a:	94 e0       	ldi	r25, 0x04	; 4
    538c:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    5390:	73 c1       	rjmp	.+742    	; 0x5678 <main+0x2b04>
							case 1:Motor.Drive(-500,-500);break;
    5392:	4c e0       	ldi	r20, 0x0C	; 12
    5394:	5e ef       	ldi	r21, 0xFE	; 254
    5396:	6c e0       	ldi	r22, 0x0C	; 12
    5398:	7e ef       	ldi	r23, 0xFE	; 254
    539a:	86 ea       	ldi	r24, 0xA6	; 166
    539c:	94 e0       	ldi	r25, 0x04	; 4
    539e:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    53a2:	6a c1       	rjmp	.+724    	; 0x5678 <main+0x2b04>
							case 2:Motor.Drive(500,500);break;
    53a4:	44 ef       	ldi	r20, 0xF4	; 244
    53a6:	51 e0       	ldi	r21, 0x01	; 1
    53a8:	64 ef       	ldi	r22, 0xF4	; 244
    53aa:	71 e0       	ldi	r23, 0x01	; 1
    53ac:	86 ea       	ldi	r24, 0xA6	; 166
    53ae:	94 e0       	ldi	r25, 0x04	; 4
    53b0:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    53b4:	61 c1       	rjmp	.+706    	; 0x5678 <main+0x2b04>
							case 3:Motor.Drive(500,-500);break;
    53b6:	4c e0       	ldi	r20, 0x0C	; 12
    53b8:	5e ef       	ldi	r21, 0xFE	; 254
    53ba:	64 ef       	ldi	r22, 0xF4	; 244
    53bc:	71 e0       	ldi	r23, 0x01	; 1
    53be:	86 ea       	ldi	r24, 0xA6	; 166
    53c0:	94 e0       	ldi	r25, 0x04	; 4
    53c2:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    53c6:	58 c1       	rjmp	.+688    	; 0x5678 <main+0x2b04>
							case 4:Motor.Drive(-500,500);break;
    53c8:	44 ef       	ldi	r20, 0xF4	; 244
    53ca:	51 e0       	ldi	r21, 0x01	; 1
    53cc:	6c e0       	ldi	r22, 0x0C	; 12
    53ce:	7e ef       	ldi	r23, 0xFE	; 254
    53d0:	86 ea       	ldi	r24, 0xA6	; 166
    53d2:	94 e0       	ldi	r25, 0x04	; 4
    53d4:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    53d8:	4f c1       	rjmp	.+670    	; 0x5678 <main+0x2b04>
						}
					}
				}
				else{
					testPD = 0;
    53da:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <_ZL6testPD>
					sysRun = 0;
    53de:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <_ZL6sysRun>
					if(pb[3] == 3){submenu = 1;gpVar1 = 0;LCD.Clear();}
    53e2:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    53e6:	83 30       	cpi	r24, 0x03	; 3
    53e8:	41 f4       	brne	.+16     	; 0x53fa <main+0x2886>
    53ea:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    53ee:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
    53f2:	89 e0       	ldi	r24, 0x09	; 9
    53f4:	95 e0       	ldi	r25, 0x05	; 5
    53f6:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					Motor.Drive(0,0);
    53fa:	40 e0       	ldi	r20, 0x00	; 0
    53fc:	50 e0       	ldi	r21, 0x00	; 0
    53fe:	60 e0       	ldi	r22, 0x00	; 0
    5400:	70 e0       	ldi	r23, 0x00	; 0
    5402:	86 ea       	ldi	r24, 0xA6	; 166
    5404:	94 e0       	ldi	r25, 0x04	; 4
    5406:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN8MotorLib5DriveEii>
    540a:	36 c1       	rjmp	.+620    	; 0x5678 <main+0x2b04>
				}
			break;
			//Prescalers
			case 8:
				if(submenu > 0){
    540c:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5410:	88 23       	and	r24, r24
    5412:	09 f4       	brne	.+2      	; 0x5416 <main+0x28a2>
    5414:	55 c0       	rjmp	.+170    	; 0x54c0 <main+0x294c>
					submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);
    5416:	eb e7       	ldi	r30, 0x7B	; 123
    5418:	f4 e0       	ldi	r31, 0x04	; 4
    541a:	20 81       	ld	r18, Z
    541c:	90 e0       	ldi	r25, 0x00	; 0
    541e:	82 0f       	add	r24, r18
    5420:	91 1d       	adc	r25, r1
    5422:	20 91 7c 04 	lds	r18, 0x047C	; 0x80047c <_ZL2pb+0x1>
    5426:	82 1b       	sub	r24, r18
    5428:	91 09       	sbc	r25, r1
    542a:	18 16       	cp	r1, r24
    542c:	19 06       	cpc	r1, r25
    542e:	14 f0       	brlt	.+4      	; 0x5434 <main+0x28c0>
    5430:	0c 94 20 38 	jmp	0x7040	; 0x7040 <main+0x44cc>
    5434:	83 30       	cpi	r24, 0x03	; 3
    5436:	91 05       	cpc	r25, r1
    5438:	14 f0       	brlt	.+4      	; 0x543e <main+0x28ca>
    543a:	82 e0       	ldi	r24, 0x02	; 2
    543c:	90 e0       	ldi	r25, 0x00	; 0
    543e:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
					if(submenu == 1){prescT = _lim(prescT+pb[4]-pb[5], 1, 100);}
    5442:	81 30       	cpi	r24, 0x01	; 1
    5444:	c1 f4       	brne	.+48     	; 0x5476 <main+0x2902>
    5446:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <_ZL6prescT>
    544a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    544e:	90 e0       	ldi	r25, 0x00	; 0
    5450:	82 0f       	add	r24, r18
    5452:	91 1d       	adc	r25, r1
    5454:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    5458:	82 1b       	sub	r24, r18
    545a:	91 09       	sbc	r25, r1
    545c:	18 16       	cp	r1, r24
    545e:	19 06       	cpc	r1, r25
    5460:	34 f4       	brge	.+12     	; 0x546e <main+0x28fa>
    5462:	85 36       	cpi	r24, 0x65	; 101
    5464:	91 05       	cpc	r25, r1
    5466:	24 f0       	brlt	.+8      	; 0x5470 <main+0x28fc>
    5468:	84 e6       	ldi	r24, 0x64	; 100
    546a:	90 e0       	ldi	r25, 0x00	; 0
    546c:	01 c0       	rjmp	.+2      	; 0x5470 <main+0x28fc>
    546e:	8d 2d       	mov	r24, r13
    5470:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <_ZL6prescT>
    5474:	17 c0       	rjmp	.+46     	; 0x54a4 <main+0x2930>
					else{prescD = _lim(prescD+pb[4]-pb[5], 1, 100);}
    5476:	20 91 63 00 	lds	r18, 0x0063	; 0x800063 <_ZL6prescD>
    547a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    547e:	90 e0       	ldi	r25, 0x00	; 0
    5480:	82 0f       	add	r24, r18
    5482:	91 1d       	adc	r25, r1
    5484:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    5488:	82 1b       	sub	r24, r18
    548a:	91 09       	sbc	r25, r1
    548c:	18 16       	cp	r1, r24
    548e:	19 06       	cpc	r1, r25
    5490:	34 f4       	brge	.+12     	; 0x549e <main+0x292a>
    5492:	85 36       	cpi	r24, 0x65	; 101
    5494:	91 05       	cpc	r25, r1
    5496:	24 f0       	brlt	.+8      	; 0x54a0 <main+0x292c>
    5498:	84 e6       	ldi	r24, 0x64	; 100
    549a:	90 e0       	ldi	r25, 0x00	; 0
    549c:	01 c0       	rjmp	.+2      	; 0x54a0 <main+0x292c>
    549e:	8d 2d       	mov	r24, r13
    54a0:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <_ZL6prescD>
					if(pb[2] == 3){submenu = 0;updateConfMem();LCD.Clear();}
    54a4:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    54a8:	83 30       	cpi	r24, 0x03	; 3
    54aa:	09 f0       	breq	.+2      	; 0x54ae <main+0x293a>
    54ac:	e5 c0       	rjmp	.+458    	; 0x5678 <main+0x2b04>
    54ae:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    54b2:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
    54b6:	89 e0       	ldi	r24, 0x09	; 9
    54b8:	95 e0       	ldi	r25, 0x05	; 5
    54ba:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    54be:	dc c0       	rjmp	.+440    	; 0x5678 <main+0x2b04>
				}
				else{
					if(pb[3] == 3){submenu = 1;LCD.Clear();}
    54c0:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    54c4:	83 30       	cpi	r24, 0x03	; 3
    54c6:	09 f0       	breq	.+2      	; 0x54ca <main+0x2956>
    54c8:	d7 c0       	rjmp	.+430    	; 0x5678 <main+0x2b04>
    54ca:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    54ce:	89 e0       	ldi	r24, 0x09	; 9
    54d0:	95 e0       	ldi	r25, 0x05	; 5
    54d2:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    54d6:	d0 c0       	rjmp	.+416    	; 0x5678 <main+0x2b04>
				}
			break;
			//Vbat
			case 9:
				if(pb[3] == 3){submenu = 1;LCD.Clear();}
    54d8:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    54dc:	83 30       	cpi	r24, 0x03	; 3
    54de:	31 f4       	brne	.+12     	; 0x54ec <main+0x2978>
    54e0:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    54e4:	89 e0       	ldi	r24, 0x09	; 9
    54e6:	95 e0       	ldi	r25, 0x05	; 5
    54e8:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
				if(submenu > 0 && pb[2] == 3){submenu = 0;LCD.Clear();}
    54ec:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    54f0:	88 23       	and	r24, r24
    54f2:	09 f4       	brne	.+2      	; 0x54f6 <main+0x2982>
    54f4:	c1 c0       	rjmp	.+386    	; 0x5678 <main+0x2b04>
    54f6:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    54fa:	83 30       	cpi	r24, 0x03	; 3
    54fc:	09 f0       	breq	.+2      	; 0x5500 <main+0x298c>
    54fe:	bc c0       	rjmp	.+376    	; 0x5678 <main+0x2b04>
    5500:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    5504:	89 e0       	ldi	r24, 0x09	; 9
    5506:	95 e0       	ldi	r25, 0x05	; 5
    5508:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
    550c:	b5 c0       	rjmp	.+362    	; 0x5678 <main+0x2b04>
			break;
			//Settings
			case 10:
				if(submenu > 0){
    550e:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5512:	88 23       	and	r24, r24
    5514:	09 f4       	brne	.+2      	; 0x5518 <main+0x29a4>
    5516:	a4 c0       	rjmp	.+328    	; 0x5660 <main+0x2aec>
					if(pb[0] == 1){
    5518:	eb e7       	ldi	r30, 0x7B	; 123
    551a:	f4 e0       	ldi	r31, 0x04	; 4
    551c:	90 81       	ld	r25, Z
    551e:	91 30       	cpi	r25, 0x01	; 1
    5520:	79 f4       	brne	.+30     	; 0x5540 <main+0x29cc>
						if(gpVar1 == 1 && submenu < 4){submenu ++;}
    5522:	90 91 78 04 	lds	r25, 0x0478	; 0x800478 <_ZL6gpVar1>
    5526:	91 30       	cpi	r25, 0x01	; 1
    5528:	29 f4       	brne	.+10     	; 0x5534 <main+0x29c0>
    552a:	84 30       	cpi	r24, 0x04	; 4
    552c:	18 f4       	brcc	.+6      	; 0x5534 <main+0x29c0>
    552e:	8f 5f       	subi	r24, 0xFF	; 255
    5530:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						gpVar1 = 1;
    5534:	d0 92 78 04 	sts	0x0478, r13	; 0x800478 <_ZL6gpVar1>
						LCD.Clear();
    5538:	89 e0       	ldi	r24, 0x09	; 9
    553a:	95 e0       	ldi	r25, 0x05	; 5
    553c:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					}
					if(pb[1] == 1){
    5540:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <_ZL2pb+0x1>
    5544:	81 30       	cpi	r24, 0x01	; 1
    5546:	89 f4       	brne	.+34     	; 0x556a <main+0x29f6>
						if(gpVar1 == 0 && submenu > 1){submenu --;}
    5548:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    554c:	81 11       	cpse	r24, r1
    554e:	07 c0       	rjmp	.+14     	; 0x555e <main+0x29ea>
    5550:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5554:	82 30       	cpi	r24, 0x02	; 2
    5556:	18 f0       	brcs	.+6      	; 0x555e <main+0x29ea>
    5558:	81 50       	subi	r24, 0x01	; 1
    555a:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
						gpVar1 = 0;
    555e:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
						LCD.Clear();
    5562:	89 e0       	ldi	r24, 0x09	; 9
    5564:	95 e0       	ldi	r25, 0x05	; 5
    5566:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					}
					if(pb[2] == 3){submenu = 0;updateConfMem();LCD.Clear();}
    556a:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    556e:	83 30       	cpi	r24, 0x03	; 3
    5570:	41 f4       	brne	.+16     	; 0x5582 <main+0x2a0e>
    5572:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <_ZL7submenu>
    5576:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZL13updateConfMemv>
    557a:	89 e0       	ldi	r24, 0x09	; 9
    557c:	95 e0       	ldi	r25, 0x05	; 5
    557e:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
					switch(submenu+gpVar1){
    5582:	20 91 84 04 	lds	r18, 0x0484	; 0x800484 <_ZL7submenu>
    5586:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    558a:	90 e0       	ldi	r25, 0x00	; 0
    558c:	82 0f       	add	r24, r18
    558e:	91 1d       	adc	r25, r1
    5590:	82 30       	cpi	r24, 0x02	; 2
    5592:	91 05       	cpc	r25, r1
    5594:	19 f1       	breq	.+70     	; 0x55dc <main+0x2a68>
    5596:	1c f4       	brge	.+6      	; 0x559e <main+0x2a2a>
    5598:	01 97       	sbiw	r24, 0x01	; 1
    559a:	41 f0       	breq	.+16     	; 0x55ac <main+0x2a38>
    559c:	6d c0       	rjmp	.+218    	; 0x5678 <main+0x2b04>
    559e:	83 30       	cpi	r24, 0x03	; 3
    55a0:	91 05       	cpc	r25, r1
    55a2:	91 f1       	breq	.+100    	; 0x5608 <main+0x2a94>
    55a4:	04 97       	sbiw	r24, 0x04	; 4
    55a6:	09 f4       	brne	.+2      	; 0x55aa <main+0x2a36>
    55a8:	45 c0       	rjmp	.+138    	; 0x5634 <main+0x2ac0>
    55aa:	66 c0       	rjmp	.+204    	; 0x5678 <main+0x2b04>
						case 1:runDly = _lim(runDly+pb[4]-pb[5], 5, 50);break;//Run Delay
    55ac:	20 91 4c 04 	lds	r18, 0x044C	; 0x80044c <_ZL6runDly>
    55b0:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	82 0f       	add	r24, r18
    55b8:	91 1d       	adc	r25, r1
    55ba:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    55be:	82 1b       	sub	r24, r18
    55c0:	91 09       	sbc	r25, r1
    55c2:	85 30       	cpi	r24, 0x05	; 5
    55c4:	91 05       	cpc	r25, r1
    55c6:	34 f0       	brlt	.+12     	; 0x55d4 <main+0x2a60>
    55c8:	83 33       	cpi	r24, 0x33	; 51
    55ca:	91 05       	cpc	r25, r1
    55cc:	24 f0       	brlt	.+8      	; 0x55d6 <main+0x2a62>
    55ce:	82 e3       	ldi	r24, 0x32	; 50
    55d0:	90 e0       	ldi	r25, 0x00	; 0
    55d2:	01 c0       	rjmp	.+2      	; 0x55d6 <main+0x2a62>
    55d4:	85 e0       	ldi	r24, 0x05	; 5
    55d6:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <_ZL6runDly>
    55da:	4e c0       	rjmp	.+156    	; 0x5678 <main+0x2b04>
						case 2:toutTime = _lim(toutTime+pb[4]-pb[5], 0, 50);break;//Timeout
    55dc:	20 91 4b 04 	lds	r18, 0x044B	; 0x80044b <_ZL8toutTime>
    55e0:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    55e4:	90 e0       	ldi	r25, 0x00	; 0
    55e6:	82 0f       	add	r24, r18
    55e8:	91 1d       	adc	r25, r1
    55ea:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    55ee:	82 1b       	sub	r24, r18
    55f0:	91 09       	sbc	r25, r1
    55f2:	32 f0       	brmi	.+12     	; 0x5600 <main+0x2a8c>
    55f4:	83 33       	cpi	r24, 0x33	; 51
    55f6:	91 05       	cpc	r25, r1
    55f8:	24 f0       	brlt	.+8      	; 0x5602 <main+0x2a8e>
    55fa:	82 e3       	ldi	r24, 0x32	; 50
    55fc:	90 e0       	ldi	r25, 0x00	; 0
    55fe:	01 c0       	rjmp	.+2      	; 0x5602 <main+0x2a8e>
    5600:	80 e0       	ldi	r24, 0x00	; 0
    5602:	80 93 4b 04 	sts	0x044B, r24	; 0x80044b <_ZL8toutTime>
    5606:	38 c0       	rjmp	.+112    	; 0x5678 <main+0x2b04>
						case 3:brakeTime = _lim(brakeTime+pb[4]-pb[5], 0, 255);break;//End Brake
    5608:	20 91 3b 04 	lds	r18, 0x043B	; 0x80043b <_ZL9brakeTime>
    560c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    5610:	90 e0       	ldi	r25, 0x00	; 0
    5612:	82 0f       	add	r24, r18
    5614:	91 1d       	adc	r25, r1
    5616:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    561a:	82 1b       	sub	r24, r18
    561c:	91 09       	sbc	r25, r1
    561e:	32 f0       	brmi	.+12     	; 0x562c <main+0x2ab8>
    5620:	8f 3f       	cpi	r24, 0xFF	; 255
    5622:	91 05       	cpc	r25, r1
    5624:	21 f0       	breq	.+8      	; 0x562e <main+0x2aba>
    5626:	1c f0       	brlt	.+6      	; 0x562e <main+0x2aba>
    5628:	8f ef       	ldi	r24, 0xFF	; 255
    562a:	01 c0       	rjmp	.+2      	; 0x562e <main+0x2aba>
    562c:	80 e0       	ldi	r24, 0x00	; 0
    562e:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <_ZL9brakeTime>
    5632:	22 c0       	rjmp	.+68     	; 0x5678 <main+0x2b04>
						case 4:vVbatComp = _lim(vVbatComp+pb[4]-pb[5], 0, 200);break;//V-Vbat Comp
    5634:	20 91 4a 04 	lds	r18, 0x044A	; 0x80044a <_ZL9vVbatComp>
    5638:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZL2pb+0x4>
    563c:	90 e0       	ldi	r25, 0x00	; 0
    563e:	82 0f       	add	r24, r18
    5640:	91 1d       	adc	r25, r1
    5642:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZL2pb+0x5>
    5646:	82 1b       	sub	r24, r18
    5648:	91 09       	sbc	r25, r1
    564a:	32 f0       	brmi	.+12     	; 0x5658 <main+0x2ae4>
    564c:	89 3c       	cpi	r24, 0xC9	; 201
    564e:	91 05       	cpc	r25, r1
    5650:	24 f0       	brlt	.+8      	; 0x565a <main+0x2ae6>
    5652:	88 ec       	ldi	r24, 0xC8	; 200
    5654:	90 e0       	ldi	r25, 0x00	; 0
    5656:	01 c0       	rjmp	.+2      	; 0x565a <main+0x2ae6>
    5658:	80 e0       	ldi	r24, 0x00	; 0
    565a:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <_ZL9vVbatComp>
    565e:	0c c0       	rjmp	.+24     	; 0x5678 <main+0x2b04>
						case 5:break;//Diagnostics
					}
				}
				else{
					if(pb[3] == 3){submenu = 1;gpVar1 = 0;LCD.Clear();}
    5660:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    5664:	83 30       	cpi	r24, 0x03	; 3
    5666:	41 f4       	brne	.+16     	; 0x5678 <main+0x2b04>
    5668:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    566c:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
    5670:	89 e0       	ldi	r24, 0x09	; 9
    5672:	95 e0       	ldi	r25, 0x05	; 5
    5674:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN4PLCD5ClearEv>
				}
			break;
		}
	}
	if(dspRfs){
    5678:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <_ZL6dspRfs>
    567c:	88 23       	and	r24, r24
    567e:	11 f4       	brne	.+4      	; 0x5684 <main+0x2b10>
    5680:	0c 94 06 19 	jmp	0x320c	; 0x320c <main+0x698>
		dspRfs = 0;
    5684:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <_ZL6dspRfs>
		if(submenu == 0 && menu > 0 && sidemenu == 0){
    5688:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    568c:	81 11       	cpse	r24, r1
    568e:	0c 94 3d 38 	jmp	0x707a	; 0x707a <main+0x4506>
    5692:	e0 91 85 04 	lds	r30, 0x0485	; 0x800485 <_ZL4menu>
    5696:	ee 23       	and	r30, r30
    5698:	11 f4       	brne	.+4      	; 0x569e <main+0x2b2a>
    569a:	0c 94 31 38 	jmp	0x7062	; 0x7062 <main+0x44ee>
    569e:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    56a2:	81 11       	cpse	r24, r1
    56a4:	0c 94 24 38 	jmp	0x7048	; 0x7048 <main+0x44d4>
    56a8:	23 ee       	ldi	r18, 0xE3	; 227
    56aa:	33 e0       	ldi	r19, 0x03	; 3
    56ac:	51 2c       	mov	r5, r1
			for(uint8_t i = 0;i < 2;i ++){
				uint8_t tmp = menu - (1 - i);
				strcpy_P(strBuff, menuStr[tmp]);
    56ae:	0f 2e       	mov	r0, r31
    56b0:	f1 e1       	ldi	r31, 0x11	; 17
    56b2:	4f 2e       	mov	r4, r31
    56b4:	f0 2d       	mov	r31, r0
				switch(tmp){
					case 0:sprintf(dspBuff[i], "%s%c [%d] ", strBuff, (progInv?'\'':' '), progSel+1);break;
					case 1:sprintf(dspBuff[i], "%s%d  ", strBuff, idxStop);break;
    56b6:	0f 2e       	mov	r0, r31
    56b8:	fe ed       	ldi	r31, 0xDE	; 222
    56ba:	af 2e       	mov	r10, r31
    56bc:	f0 e0       	ldi	r31, 0x00	; 0
    56be:	bf 2e       	mov	r11, r31
    56c0:	f0 2d       	mov	r31, r0
		if(submenu == 0 && menu > 0 && sidemenu == 0){
			for(uint8_t i = 0;i < 2;i ++){
				uint8_t tmp = menu - (1 - i);
				strcpy_P(strBuff, menuStr[tmp]);
				switch(tmp){
					case 0:sprintf(dspBuff[i], "%s%c [%d] ", strBuff, (progInv?'\'':' '), progSel+1);break;
    56c2:	0f 2e       	mov	r0, r31
    56c4:	f3 ed       	ldi	r31, 0xD3	; 211
    56c6:	cf 2e       	mov	r12, r31
    56c8:	f0 e0       	ldi	r31, 0x00	; 0
    56ca:	df 2e       	mov	r13, r31
    56cc:	f0 2d       	mov	r31, r0
    56ce:	21 2c       	mov	r2, r1
					case 1:sprintf(dspBuff[i], "%s%d  ", strBuff, idxStop);break;
					case 3:
						if(PDMsel <= 0){sprintf(dspBuff[i], "%s[S] ", strBuff);}
						else{sprintf(dspBuff[i], "%s[%d] ", strBuff, PDMsel);}
    56d0:	0f 2e       	mov	r0, r31
    56d2:	fc ee       	ldi	r31, 0xEC	; 236
    56d4:	8f 2e       	mov	r8, r31
    56d6:	f0 e0       	ldi	r31, 0x00	; 0
    56d8:	9f 2e       	mov	r9, r31
    56da:	f0 2d       	mov	r31, r0
				strcpy_P(strBuff, menuStr[tmp]);
				switch(tmp){
					case 0:sprintf(dspBuff[i], "%s%c [%d] ", strBuff, (progInv?'\'':' '), progSel+1);break;
					case 1:sprintf(dspBuff[i], "%s%d  ", strBuff, idxStop);break;
					case 3:
						if(PDMsel <= 0){sprintf(dspBuff[i], "%s[S] ", strBuff);}
    56dc:	0f 2e       	mov	r0, r31
    56de:	f5 ee       	ldi	r31, 0xE5	; 229
    56e0:	6f 2e       	mov	r6, r31
    56e2:	f0 e0       	ldi	r31, 0x00	; 0
    56e4:	7f 2e       	mov	r7, r31
    56e6:	f0 2d       	mov	r31, r0
						else{sprintf(dspBuff[i], "%s[%d] ", strBuff, PDMsel);}
					break;
					case 8:sprintf(dspBuff[i], "%s%d.%d%dV ", strBuff, vbat/1000, vbat/100%10, vbat/10%10);break;
					default:sprintf(dspBuff[i], "%s ", strBuff);break;
    56e8:	0f 2e       	mov	r0, r31
    56ea:	f9 e9       	ldi	r31, 0x99	; 153
    56ec:	ef 2e       	mov	r14, r31
    56ee:	f2 e0       	ldi	r31, 0x02	; 2
    56f0:	ff 2e       	mov	r15, r31
    56f2:	f0 2d       	mov	r31, r0
					case 1:sprintf(dspBuff[i], "%s%d  ", strBuff, idxStop);break;
					case 3:
						if(PDMsel <= 0){sprintf(dspBuff[i], "%s[S] ", strBuff);}
						else{sprintf(dspBuff[i], "%s[%d] ", strBuff, PDMsel);}
					break;
					case 8:sprintf(dspBuff[i], "%s%d.%d%dV ", strBuff, vbat/1000, vbat/100%10, vbat/10%10);break;
    56f4:	05 2d       	mov	r16, r5
    56f6:	3d 83       	std	Y+5, r19	; 0x05
    56f8:	2c 83       	std	Y+4, r18	; 0x04
	}
	if(dspRfs){
		dspRfs = 0;
		if(submenu == 0 && menu > 0 && sidemenu == 0){
			for(uint8_t i = 0;i < 2;i ++){
				uint8_t tmp = menu - (1 - i);
    56fa:	10 91 85 04 	lds	r17, 0x0485	; 0x800485 <_ZL4menu>
    56fe:	11 50       	subi	r17, 0x01	; 1
    5700:	10 0f       	add	r17, r16
				strcpy_P(strBuff, menuStr[tmp]);
    5702:	41 9e       	mul	r4, r17
    5704:	b0 01       	movw	r22, r0
    5706:	11 24       	eor	r1, r1
    5708:	62 5b       	subi	r22, 0xB2	; 178
    570a:	7d 4f       	sbci	r23, 0xFD	; 253
    570c:	8f ec       	ldi	r24, 0xCF	; 207
    570e:	93 e0       	ldi	r25, 0x03	; 3
    5710:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
				switch(tmp){
    5714:	11 30       	cpi	r17, 0x01	; 1
    5716:	51 f1       	breq	.+84     	; 0x576c <main+0x2bf8>
    5718:	30 f0       	brcs	.+12     	; 0x5726 <main+0x2bb2>
    571a:	13 30       	cpi	r17, 0x03	; 3
    571c:	e9 f1       	breq	.+122    	; 0x5798 <main+0x2c24>
    571e:	18 30       	cpi	r17, 0x08	; 8
    5720:	09 f4       	brne	.+2      	; 0x5724 <main+0x2bb0>
    5722:	65 c0       	rjmp	.+202    	; 0x57ee <main+0x2c7a>
    5724:	d9 c0       	rjmp	.+434    	; 0x58d8 <main+0x2d64>
					case 0:sprintf(dspBuff[i], "%s%c [%d] ", strBuff, (progInv?'\'':' '), progSel+1);break;
    5726:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    572a:	90 e0       	ldi	r25, 0x00	; 0
    572c:	01 96       	adiw	r24, 0x01	; 1
    572e:	20 91 c5 03 	lds	r18, 0x03C5	; 0x8003c5 <_ZL7progInv>
    5732:	21 11       	cpse	r18, r1
    5734:	03 c0       	rjmp	.+6      	; 0x573c <main+0x2bc8>
    5736:	20 e2       	ldi	r18, 0x20	; 32
    5738:	32 2d       	mov	r19, r2
    573a:	02 c0       	rjmp	.+4      	; 0x5740 <main+0x2bcc>
    573c:	27 e2       	ldi	r18, 0x27	; 39
    573e:	32 2d       	mov	r19, r2
    5740:	9f 93       	push	r25
    5742:	8f 93       	push	r24
    5744:	3f 93       	push	r19
    5746:	2f 93       	push	r18
    5748:	8f ec       	ldi	r24, 0xCF	; 207
    574a:	93 e0       	ldi	r25, 0x03	; 3
    574c:	9f 93       	push	r25
    574e:	8f 93       	push	r24
    5750:	df 92       	push	r13
    5752:	cf 92       	push	r12
    5754:	3d 81       	ldd	r19, Y+5	; 0x05
    5756:	3f 93       	push	r19
    5758:	4c 81       	ldd	r20, Y+4	; 0x04
    575a:	4f 93       	push	r20
    575c:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    5760:	0f b6       	in	r0, 0x3f	; 63
    5762:	f8 94       	cli
    5764:	de bf       	out	0x3e, r29	; 62
    5766:	0f be       	out	0x3f, r0	; 63
    5768:	cd bf       	out	0x3d, r28	; 61
    576a:	c8 c0       	rjmp	.+400    	; 0x58fc <main+0x2d88>
					case 1:sprintf(dspBuff[i], "%s%d  ", strBuff, idxStop);break;
    576c:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_ZL7idxStop>
    5770:	1f 92       	push	r1
    5772:	8f 93       	push	r24
    5774:	8f ec       	ldi	r24, 0xCF	; 207
    5776:	93 e0       	ldi	r25, 0x03	; 3
    5778:	9f 93       	push	r25
    577a:	8f 93       	push	r24
    577c:	bf 92       	push	r11
    577e:	af 92       	push	r10
    5780:	7d 81       	ldd	r23, Y+5	; 0x05
    5782:	7f 93       	push	r23
    5784:	8c 81       	ldd	r24, Y+4	; 0x04
    5786:	8f 93       	push	r24
    5788:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    578c:	0f b6       	in	r0, 0x3f	; 63
    578e:	f8 94       	cli
    5790:	de bf       	out	0x3e, r29	; 62
    5792:	0f be       	out	0x3f, r0	; 63
    5794:	cd bf       	out	0x3d, r28	; 61
    5796:	b2 c0       	rjmp	.+356    	; 0x58fc <main+0x2d88>
					case 3:
						if(PDMsel <= 0){sprintf(dspBuff[i], "%s[S] ", strBuff);}
    5798:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <_ZL6PDMsel>
    579c:	81 11       	cpse	r24, r1
    579e:	13 c0       	rjmp	.+38     	; 0x57c6 <main+0x2c52>
    57a0:	8f ec       	ldi	r24, 0xCF	; 207
    57a2:	93 e0       	ldi	r25, 0x03	; 3
    57a4:	9f 93       	push	r25
    57a6:	8f 93       	push	r24
    57a8:	7f 92       	push	r7
    57aa:	6f 92       	push	r6
    57ac:	fd 81       	ldd	r31, Y+5	; 0x05
    57ae:	ff 93       	push	r31
    57b0:	2c 81       	ldd	r18, Y+4	; 0x04
    57b2:	2f 93       	push	r18
    57b4:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    57b8:	0f 90       	pop	r0
    57ba:	0f 90       	pop	r0
    57bc:	0f 90       	pop	r0
    57be:	0f 90       	pop	r0
    57c0:	0f 90       	pop	r0
    57c2:	0f 90       	pop	r0
    57c4:	9b c0       	rjmp	.+310    	; 0x58fc <main+0x2d88>
						else{sprintf(dspBuff[i], "%s[%d] ", strBuff, PDMsel);}
    57c6:	1f 92       	push	r1
    57c8:	8f 93       	push	r24
    57ca:	8f ec       	ldi	r24, 0xCF	; 207
    57cc:	93 e0       	ldi	r25, 0x03	; 3
    57ce:	9f 93       	push	r25
    57d0:	8f 93       	push	r24
    57d2:	9f 92       	push	r9
    57d4:	8f 92       	push	r8
    57d6:	3d 81       	ldd	r19, Y+5	; 0x05
    57d8:	3f 93       	push	r19
    57da:	4c 81       	ldd	r20, Y+4	; 0x04
    57dc:	4f 93       	push	r20
    57de:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    57e2:	0f b6       	in	r0, 0x3f	; 63
    57e4:	f8 94       	cli
    57e6:	de bf       	out	0x3e, r29	; 62
    57e8:	0f be       	out	0x3f, r0	; 63
    57ea:	cd bf       	out	0x3d, r28	; 61
    57ec:	87 c0       	rjmp	.+270    	; 0x58fc <main+0x2d88>
					break;
					case 8:sprintf(dspBuff[i], "%s%d.%d%dV ", strBuff, vbat/1000, vbat/100%10, vbat/10%10);break;
    57ee:	40 91 0d 04 	lds	r20, 0x040D	; 0x80040d <_ZL4vbat>
    57f2:	50 91 0e 04 	lds	r21, 0x040E	; 0x80040e <_ZL4vbat+0x1>
    57f6:	9a 01       	movw	r18, r20
    57f8:	ad ec       	ldi	r26, 0xCD	; 205
    57fa:	bc ec       	ldi	r27, 0xCC	; 204
    57fc:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5800:	fc 01       	movw	r30, r24
    5802:	f6 95       	lsr	r31
    5804:	e7 95       	ror	r30
    5806:	f6 95       	lsr	r31
    5808:	e7 95       	ror	r30
    580a:	f6 95       	lsr	r31
    580c:	e7 95       	ror	r30
    580e:	9f 01       	movw	r18, r30
    5810:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5814:	96 95       	lsr	r25
    5816:	87 95       	ror	r24
    5818:	96 95       	lsr	r25
    581a:	87 95       	ror	r24
    581c:	96 95       	lsr	r25
    581e:	87 95       	ror	r24
    5820:	9c 01       	movw	r18, r24
    5822:	22 0f       	add	r18, r18
    5824:	33 1f       	adc	r19, r19
    5826:	88 0f       	add	r24, r24
    5828:	99 1f       	adc	r25, r25
    582a:	88 0f       	add	r24, r24
    582c:	99 1f       	adc	r25, r25
    582e:	88 0f       	add	r24, r24
    5830:	99 1f       	adc	r25, r25
    5832:	82 0f       	add	r24, r18
    5834:	93 1f       	adc	r25, r19
    5836:	e8 1b       	sub	r30, r24
    5838:	f9 0b       	sbc	r31, r25
    583a:	ff 93       	push	r31
    583c:	ef 93       	push	r30
    583e:	9a 01       	movw	r18, r20
    5840:	36 95       	lsr	r19
    5842:	27 95       	ror	r18
    5844:	36 95       	lsr	r19
    5846:	27 95       	ror	r18
    5848:	ab e7       	ldi	r26, 0x7B	; 123
    584a:	b4 e1       	ldi	r27, 0x14	; 20
    584c:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5850:	fc 01       	movw	r30, r24
    5852:	f6 95       	lsr	r31
    5854:	e7 95       	ror	r30
    5856:	9f 01       	movw	r18, r30
    5858:	ad ec       	ldi	r26, 0xCD	; 205
    585a:	bc ec       	ldi	r27, 0xCC	; 204
    585c:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5860:	96 95       	lsr	r25
    5862:	87 95       	ror	r24
    5864:	96 95       	lsr	r25
    5866:	87 95       	ror	r24
    5868:	96 95       	lsr	r25
    586a:	87 95       	ror	r24
    586c:	9c 01       	movw	r18, r24
    586e:	22 0f       	add	r18, r18
    5870:	33 1f       	adc	r19, r19
    5872:	88 0f       	add	r24, r24
    5874:	99 1f       	adc	r25, r25
    5876:	88 0f       	add	r24, r24
    5878:	99 1f       	adc	r25, r25
    587a:	88 0f       	add	r24, r24
    587c:	99 1f       	adc	r25, r25
    587e:	82 0f       	add	r24, r18
    5880:	93 1f       	adc	r25, r19
    5882:	e8 1b       	sub	r30, r24
    5884:	f9 0b       	sbc	r31, r25
    5886:	ff 93       	push	r31
    5888:	ef 93       	push	r30
    588a:	9a 01       	movw	r18, r20
    588c:	36 95       	lsr	r19
    588e:	27 95       	ror	r18
    5890:	36 95       	lsr	r19
    5892:	27 95       	ror	r18
    5894:	36 95       	lsr	r19
    5896:	27 95       	ror	r18
    5898:	a5 ec       	ldi	r26, 0xC5	; 197
    589a:	b0 e2       	ldi	r27, 0x20	; 32
    589c:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    58a0:	92 95       	swap	r25
    58a2:	82 95       	swap	r24
    58a4:	8f 70       	andi	r24, 0x0F	; 15
    58a6:	89 27       	eor	r24, r25
    58a8:	9f 70       	andi	r25, 0x0F	; 15
    58aa:	89 27       	eor	r24, r25
    58ac:	9f 93       	push	r25
    58ae:	8f 93       	push	r24
    58b0:	8f ec       	ldi	r24, 0xCF	; 207
    58b2:	93 e0       	ldi	r25, 0x03	; 3
    58b4:	9f 93       	push	r25
    58b6:	8f 93       	push	r24
    58b8:	84 ef       	ldi	r24, 0xF4	; 244
    58ba:	90 e0       	ldi	r25, 0x00	; 0
    58bc:	9f 93       	push	r25
    58be:	8f 93       	push	r24
    58c0:	fd 81       	ldd	r31, Y+5	; 0x05
    58c2:	ff 93       	push	r31
    58c4:	2c 81       	ldd	r18, Y+4	; 0x04
    58c6:	2f 93       	push	r18
    58c8:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    58cc:	0f b6       	in	r0, 0x3f	; 63
    58ce:	f8 94       	cli
    58d0:	de bf       	out	0x3e, r29	; 62
    58d2:	0f be       	out	0x3f, r0	; 63
    58d4:	cd bf       	out	0x3d, r28	; 61
    58d6:	12 c0       	rjmp	.+36     	; 0x58fc <main+0x2d88>
					default:sprintf(dspBuff[i], "%s ", strBuff);break;
    58d8:	8f ec       	ldi	r24, 0xCF	; 207
    58da:	93 e0       	ldi	r25, 0x03	; 3
    58dc:	9f 93       	push	r25
    58de:	8f 93       	push	r24
    58e0:	ff 92       	push	r15
    58e2:	ef 92       	push	r14
    58e4:	5d 81       	ldd	r21, Y+5	; 0x05
    58e6:	5f 93       	push	r21
    58e8:	6c 81       	ldd	r22, Y+4	; 0x04
    58ea:	6f 93       	push	r22
    58ec:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    58f0:	0f 90       	pop	r0
    58f2:	0f 90       	pop	r0
    58f4:	0f 90       	pop	r0
    58f6:	0f 90       	pop	r0
    58f8:	0f 90       	pop	r0
    58fa:	0f 90       	pop	r0
		}
	}
	if(dspRfs){
		dspRfs = 0;
		if(submenu == 0 && menu > 0 && sidemenu == 0){
			for(uint8_t i = 0;i < 2;i ++){
    58fc:	0f 5f       	subi	r16, 0xFF	; 255
    58fe:	8c 81       	ldd	r24, Y+4	; 0x04
    5900:	9d 81       	ldd	r25, Y+5	; 0x05
    5902:	44 96       	adiw	r24, 0x14	; 20
    5904:	9d 83       	std	Y+5, r25	; 0x05
    5906:	8c 83       	std	Y+4, r24	; 0x04
    5908:	02 30       	cpi	r16, 0x02	; 2
    590a:	09 f0       	breq	.+2      	; 0x590e <main+0x2d9a>
    590c:	f6 ce       	rjmp	.-532    	; 0x56fa <main+0x2b86>
					break;
					case 8:sprintf(dspBuff[i], "%s%d.%d%dV ", strBuff, vbat/1000, vbat/100%10, vbat/10%10);break;
					default:sprintf(dspBuff[i], "%s ", strBuff);break;
				}
			}
			dspCursor = (pointer?17:1);
    590e:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <_ZL7pointer>
    5912:	e1 11       	cpse	r30, r1
    5914:	02 c0       	rjmp	.+4      	; 0x591a <main+0x2da6>
    5916:	81 e0       	ldi	r24, 0x01	; 1
    5918:	01 c0       	rjmp	.+2      	; 0x591c <main+0x2da8>
    591a:	81 e1       	ldi	r24, 0x11	; 17
    591c:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
			dspCursorChr = '>';
    5920:	8e e3       	ldi	r24, 0x3E	; 62
    5922:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
		}
		switch(menu+pointer){
    5926:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    592a:	f0 e0       	ldi	r31, 0x00	; 0
    592c:	e8 0f       	add	r30, r24
    592e:	f1 1d       	adc	r31, r1
    5930:	eb 30       	cpi	r30, 0x0B	; 11
    5932:	f1 05       	cpc	r31, r1
    5934:	10 f0       	brcs	.+4      	; 0x593a <main+0x2dc6>
    5936:	0c 94 ba 36 	jmp	0x6d74	; 0x6d74 <main+0x4200>
    593a:	e5 5b       	subi	r30, 0xB5	; 181
    593c:	ff 4f       	sbci	r31, 0xFF	; 255
    593e:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
			//Idle
			case 0:
				#ifndef DBG
				if(runDisp && lowBatt){
    5942:	80 91 cb 03 	lds	r24, 0x03CB	; 0x8003cb <_ZL7runDisp>
    5946:	81 11       	cpse	r24, r1
    5948:	0f c0       	rjmp	.+30     	; 0x5968 <main+0x2df4>
    594a:	0a ea       	ldi	r16, 0xAA	; 170
    594c:	14 e0       	ldi	r17, 0x04	; 4
    594e:	1a 82       	std	Y+2, r1	; 0x02
				else{
					for(uint8_t i=0;i<14;i++){
						LCD.Cursor(1+i,0);
						if(Sens.ResultRaw[i]>1015){LCD.WriteChr('x');}
						else{
							BarGraph(Sens.ResultRaw[i]*9/(Line.Threshold==0?1:Line.Threshold*1.7));
    5950:	0f 2e       	mov	r0, r31
    5952:	fd e8       	ldi	r31, 0x8D	; 141
    5954:	ef 2e       	mov	r14, r31
    5956:	f4 e0       	ldi	r31, 0x04	; 4
    5958:	ff 2e       	mov	r15, r31
    595a:	f0 2d       	mov	r31, r0
    595c:	71 2c       	mov	r7, r1
    595e:	c1 2c       	mov	r12, r1
    5960:	68 94       	set
    5962:	dd 24       	eor	r13, r13
    5964:	d7 f8       	bld	r13, 7
    5966:	ed c1       	rjmp	.+986    	; 0x5d42 <main+0x31ce>
		}
		switch(menu+pointer){
			//Idle
			case 0:
				#ifndef DBG
				if(runDisp && lowBatt){
    5968:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <_ZL7lowBatt>
    596c:	88 23       	and	r24, r24
    596e:	09 f4       	brne	.+2      	; 0x5972 <main+0x2dfe>
    5970:	93 c0       	rjmp	.+294    	; 0x5a98 <main+0x2f24>
					LCD.Cursor(2,0);
    5972:	40 e0       	ldi	r20, 0x00	; 0
    5974:	62 e0       	ldi	r22, 0x02	; 2
    5976:	89 e0       	ldi	r24, 0x09	; 9
    5978:	95 e0       	ldi	r25, 0x05	; 5
    597a:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					sprintf(dspBuff[0], "Low Battery!");
    597e:	8d e0       	ldi	r24, 0x0D	; 13
    5980:	e0 e0       	ldi	r30, 0x00	; 0
    5982:	f1 e0       	ldi	r31, 0x01	; 1
    5984:	a3 ee       	ldi	r26, 0xE3	; 227
    5986:	b3 e0       	ldi	r27, 0x03	; 3
    5988:	01 90       	ld	r0, Z+
    598a:	0d 92       	st	X+, r0
    598c:	8a 95       	dec	r24
    598e:	e1 f7       	brne	.-8      	; 0x5988 <main+0x2e14>
					LCD.WriteStr(dspBuff[0]);
    5990:	63 ee       	ldi	r22, 0xE3	; 227
    5992:	73 e0       	ldi	r23, 0x03	; 3
    5994:	89 e0       	ldi	r24, 0x09	; 9
    5996:	95 e0       	ldi	r25, 0x05	; 5
    5998:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					LCD.Cursor(5,1);
    599c:	41 e0       	ldi	r20, 0x01	; 1
    599e:	65 e0       	ldi	r22, 0x05	; 5
    59a0:	89 e0       	ldi	r24, 0x09	; 9
    59a2:	95 e0       	ldi	r25, 0x05	; 5
    59a4:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					sprintf(dspBuff[0], "%d.%d%dV ", vbat/1000, vbat/100%10, vbat/10%10);
    59a8:	40 91 0d 04 	lds	r20, 0x040D	; 0x80040d <_ZL4vbat>
    59ac:	50 91 0e 04 	lds	r21, 0x040E	; 0x80040e <_ZL4vbat+0x1>
    59b0:	9a 01       	movw	r18, r20
    59b2:	ad ec       	ldi	r26, 0xCD	; 205
    59b4:	bc ec       	ldi	r27, 0xCC	; 204
    59b6:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    59ba:	fc 01       	movw	r30, r24
    59bc:	f6 95       	lsr	r31
    59be:	e7 95       	ror	r30
    59c0:	f6 95       	lsr	r31
    59c2:	e7 95       	ror	r30
    59c4:	f6 95       	lsr	r31
    59c6:	e7 95       	ror	r30
    59c8:	9f 01       	movw	r18, r30
    59ca:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    59ce:	96 95       	lsr	r25
    59d0:	87 95       	ror	r24
    59d2:	96 95       	lsr	r25
    59d4:	87 95       	ror	r24
    59d6:	96 95       	lsr	r25
    59d8:	87 95       	ror	r24
    59da:	9c 01       	movw	r18, r24
    59dc:	22 0f       	add	r18, r18
    59de:	33 1f       	adc	r19, r19
    59e0:	88 0f       	add	r24, r24
    59e2:	99 1f       	adc	r25, r25
    59e4:	88 0f       	add	r24, r24
    59e6:	99 1f       	adc	r25, r25
    59e8:	88 0f       	add	r24, r24
    59ea:	99 1f       	adc	r25, r25
    59ec:	82 0f       	add	r24, r18
    59ee:	93 1f       	adc	r25, r19
    59f0:	e8 1b       	sub	r30, r24
    59f2:	f9 0b       	sbc	r31, r25
    59f4:	ff 93       	push	r31
    59f6:	ef 93       	push	r30
    59f8:	9a 01       	movw	r18, r20
    59fa:	36 95       	lsr	r19
    59fc:	27 95       	ror	r18
    59fe:	36 95       	lsr	r19
    5a00:	27 95       	ror	r18
    5a02:	ab e7       	ldi	r26, 0x7B	; 123
    5a04:	b4 e1       	ldi	r27, 0x14	; 20
    5a06:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5a0a:	fc 01       	movw	r30, r24
    5a0c:	f6 95       	lsr	r31
    5a0e:	e7 95       	ror	r30
    5a10:	9f 01       	movw	r18, r30
    5a12:	ad ec       	ldi	r26, 0xCD	; 205
    5a14:	bc ec       	ldi	r27, 0xCC	; 204
    5a16:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5a1a:	96 95       	lsr	r25
    5a1c:	87 95       	ror	r24
    5a1e:	96 95       	lsr	r25
    5a20:	87 95       	ror	r24
    5a22:	96 95       	lsr	r25
    5a24:	87 95       	ror	r24
    5a26:	9c 01       	movw	r18, r24
    5a28:	22 0f       	add	r18, r18
    5a2a:	33 1f       	adc	r19, r19
    5a2c:	88 0f       	add	r24, r24
    5a2e:	99 1f       	adc	r25, r25
    5a30:	88 0f       	add	r24, r24
    5a32:	99 1f       	adc	r25, r25
    5a34:	88 0f       	add	r24, r24
    5a36:	99 1f       	adc	r25, r25
    5a38:	82 0f       	add	r24, r18
    5a3a:	93 1f       	adc	r25, r19
    5a3c:	e8 1b       	sub	r30, r24
    5a3e:	f9 0b       	sbc	r31, r25
    5a40:	ff 93       	push	r31
    5a42:	ef 93       	push	r30
    5a44:	9a 01       	movw	r18, r20
    5a46:	36 95       	lsr	r19
    5a48:	27 95       	ror	r18
    5a4a:	36 95       	lsr	r19
    5a4c:	27 95       	ror	r18
    5a4e:	36 95       	lsr	r19
    5a50:	27 95       	ror	r18
    5a52:	a5 ec       	ldi	r26, 0xC5	; 197
    5a54:	b0 e2       	ldi	r27, 0x20	; 32
    5a56:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5a5a:	92 95       	swap	r25
    5a5c:	82 95       	swap	r24
    5a5e:	8f 70       	andi	r24, 0x0F	; 15
    5a60:	89 27       	eor	r24, r25
    5a62:	9f 70       	andi	r25, 0x0F	; 15
    5a64:	89 27       	eor	r24, r25
    5a66:	9f 93       	push	r25
    5a68:	8f 93       	push	r24
    5a6a:	86 ef       	ldi	r24, 0xF6	; 246
    5a6c:	90 e0       	ldi	r25, 0x00	; 0
    5a6e:	9f 93       	push	r25
    5a70:	8f 93       	push	r24
    5a72:	e3 ee       	ldi	r30, 0xE3	; 227
    5a74:	f3 e0       	ldi	r31, 0x03	; 3
    5a76:	ff 93       	push	r31
    5a78:	ef 93       	push	r30
    5a7a:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					LCD.WriteStr(dspBuff[0]);
    5a7e:	63 ee       	ldi	r22, 0xE3	; 227
    5a80:	73 e0       	ldi	r23, 0x03	; 3
    5a82:	89 e0       	ldi	r24, 0x09	; 9
    5a84:	95 e0       	ldi	r25, 0x05	; 5
    5a86:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    5a8a:	0f b6       	in	r0, 0x3f	; 63
    5a8c:	f8 94       	cli
    5a8e:	de bf       	out	0x3e, r29	; 62
    5a90:	0f be       	out	0x3f, r0	; 63
    5a92:	cd bf       	out	0x3d, r28	; 61
    5a94:	0c 94 ba 36 	jmp	0x6d74	; 0x6d74 <main+0x4200>
				}
				else if(runDisp){
					LCD.Cursor(0,0);
    5a98:	40 e0       	ldi	r20, 0x00	; 0
    5a9a:	60 e0       	ldi	r22, 0x00	; 0
    5a9c:	89 e0       	ldi	r24, 0x09	; 9
    5a9e:	95 e0       	ldi	r25, 0x05	; 5
    5aa0:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					sprintf(dspBuff[0], "i%d  ", (tout?idxPtr-1:idxPtr));
    5aa4:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <_ZL4tout>
    5aa8:	88 23       	and	r24, r24
    5aaa:	29 f0       	breq	.+10     	; 0x5ab6 <main+0x2f42>
    5aac:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZL6idxPtr>
    5ab0:	90 e0       	ldi	r25, 0x00	; 0
    5ab2:	01 97       	sbiw	r24, 0x01	; 1
    5ab4:	03 c0       	rjmp	.+6      	; 0x5abc <main+0x2f48>
    5ab6:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZL6idxPtr>
    5aba:	90 e0       	ldi	r25, 0x00	; 0
    5abc:	9f 93       	push	r25
    5abe:	8f 93       	push	r24
    5ac0:	84 e4       	ldi	r24, 0x44	; 68
    5ac2:	91 e0       	ldi	r25, 0x01	; 1
    5ac4:	9f 93       	push	r25
    5ac6:	8f 93       	push	r24
    5ac8:	83 ee       	ldi	r24, 0xE3	; 227
    5aca:	93 e0       	ldi	r25, 0x03	; 3
    5acc:	9f 93       	push	r25
    5ace:	8f 93       	push	r24
    5ad0:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					LCD.WriteStr(dspBuff[0]);
    5ad4:	63 ee       	ldi	r22, 0xE3	; 227
    5ad6:	73 e0       	ldi	r23, 0x03	; 3
    5ad8:	89 e0       	ldi	r24, 0x09	; 9
    5ada:	95 e0       	ldi	r25, 0x05	; 5
    5adc:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					LCD.Cursor(0,1);
    5ae0:	41 e0       	ldi	r20, 0x01	; 1
    5ae2:	60 e0       	ldi	r22, 0x00	; 0
    5ae4:	89 e0       	ldi	r24, 0x09	; 9
    5ae6:	95 e0       	ldi	r25, 0x05	; 5
    5ae8:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					sprintf(dspBuff[0], "P%d%c ", progPtr+1, (progInv?'\'':' '));
    5aec:	0f 90       	pop	r0
    5aee:	0f 90       	pop	r0
    5af0:	0f 90       	pop	r0
    5af2:	0f 90       	pop	r0
    5af4:	0f 90       	pop	r0
    5af6:	0f 90       	pop	r0
    5af8:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <_ZL7progInv>
    5afc:	81 11       	cpse	r24, r1
    5afe:	03 c0       	rjmp	.+6      	; 0x5b06 <main+0x2f92>
    5b00:	80 e2       	ldi	r24, 0x20	; 32
    5b02:	90 e0       	ldi	r25, 0x00	; 0
    5b04:	02 c0       	rjmp	.+4      	; 0x5b0a <main+0x2f96>
    5b06:	87 e2       	ldi	r24, 0x27	; 39
    5b08:	90 e0       	ldi	r25, 0x00	; 0
    5b0a:	9f 93       	push	r25
    5b0c:	8f 93       	push	r24
    5b0e:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <_ZL7progPtr>
    5b12:	90 e0       	ldi	r25, 0x00	; 0
    5b14:	01 96       	adiw	r24, 0x01	; 1
    5b16:	9f 93       	push	r25
    5b18:	8f 93       	push	r24
    5b1a:	8d e0       	ldi	r24, 0x0D	; 13
    5b1c:	91 e0       	ldi	r25, 0x01	; 1
    5b1e:	9f 93       	push	r25
    5b20:	8f 93       	push	r24
    5b22:	83 ee       	ldi	r24, 0xE3	; 227
    5b24:	93 e0       	ldi	r25, 0x03	; 3
    5b26:	9f 93       	push	r25
    5b28:	8f 93       	push	r24
    5b2a:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					LCD.WriteStr(dspBuff[0]);
    5b2e:	63 ee       	ldi	r22, 0xE3	; 227
    5b30:	73 e0       	ldi	r23, 0x03	; 3
    5b32:	89 e0       	ldi	r24, 0x09	; 9
    5b34:	95 e0       	ldi	r25, 0x05	; 5
    5b36:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					if(tout){sprintf(dspBuff[0], "TIMEOUT");}
    5b3a:	0f b6       	in	r0, 0x3f	; 63
    5b3c:	f8 94       	cli
    5b3e:	de bf       	out	0x3e, r29	; 62
    5b40:	0f be       	out	0x3f, r0	; 63
    5b42:	cd bf       	out	0x3d, r28	; 61
    5b44:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <_ZL4tout>
    5b48:	88 23       	and	r24, r24
    5b4a:	51 f0       	breq	.+20     	; 0x5b60 <main+0x2fec>
    5b4c:	88 e0       	ldi	r24, 0x08	; 8
    5b4e:	e4 e1       	ldi	r30, 0x14	; 20
    5b50:	f1 e0       	ldi	r31, 0x01	; 1
    5b52:	a3 ee       	ldi	r26, 0xE3	; 227
    5b54:	b3 e0       	ldi	r27, 0x03	; 3
    5b56:	01 90       	ld	r0, Z+
    5b58:	0d 92       	st	X+, r0
    5b5a:	8a 95       	dec	r24
    5b5c:	e1 f7       	brne	.-8      	; 0x5b56 <main+0x2fe2>
    5b5e:	23 c0       	rjmp	.+70     	; 0x5ba6 <main+0x3032>
					else if(seq == 1){sprintf(dspBuff[0], " SCAN  ");}
    5b60:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    5b64:	81 30       	cpi	r24, 0x01	; 1
    5b66:	51 f4       	brne	.+20     	; 0x5b7c <main+0x3008>
    5b68:	88 e0       	ldi	r24, 0x08	; 8
    5b6a:	ec e1       	ldi	r30, 0x1C	; 28
    5b6c:	f1 e0       	ldi	r31, 0x01	; 1
    5b6e:	a3 ee       	ldi	r26, 0xE3	; 227
    5b70:	b3 e0       	ldi	r27, 0x03	; 3
    5b72:	01 90       	ld	r0, Z+
    5b74:	0d 92       	st	X+, r0
    5b76:	8a 95       	dec	r24
    5b78:	e1 f7       	brne	.-8      	; 0x5b72 <main+0x2ffe>
    5b7a:	15 c0       	rjmp	.+42     	; 0x5ba6 <main+0x3032>
					else if(seq < 5){sprintf(dspBuff[0], " RUN   ");}
    5b7c:	85 30       	cpi	r24, 0x05	; 5
    5b7e:	50 f4       	brcc	.+20     	; 0x5b94 <main+0x3020>
    5b80:	88 e0       	ldi	r24, 0x08	; 8
    5b82:	e4 e2       	ldi	r30, 0x24	; 36
    5b84:	f1 e0       	ldi	r31, 0x01	; 1
    5b86:	a3 ee       	ldi	r26, 0xE3	; 227
    5b88:	b3 e0       	ldi	r27, 0x03	; 3
    5b8a:	01 90       	ld	r0, Z+
    5b8c:	0d 92       	st	X+, r0
    5b8e:	8a 95       	dec	r24
    5b90:	e1 f7       	brne	.-8      	; 0x5b8a <main+0x3016>
    5b92:	09 c0       	rjmp	.+18     	; 0x5ba6 <main+0x3032>
					else{sprintf(dspBuff[0], " STOP  ");}
    5b94:	88 e0       	ldi	r24, 0x08	; 8
    5b96:	ec e2       	ldi	r30, 0x2C	; 44
    5b98:	f1 e0       	ldi	r31, 0x01	; 1
    5b9a:	a3 ee       	ldi	r26, 0xE3	; 227
    5b9c:	b3 e0       	ldi	r27, 0x03	; 3
    5b9e:	01 90       	ld	r0, Z+
    5ba0:	0d 92       	st	X+, r0
    5ba2:	8a 95       	dec	r24
    5ba4:	e1 f7       	brne	.-8      	; 0x5b9e <main+0x302a>
					LCD.Cursor(5,0);
    5ba6:	40 e0       	ldi	r20, 0x00	; 0
    5ba8:	65 e0       	ldi	r22, 0x05	; 5
    5baa:	89 e0       	ldi	r24, 0x09	; 9
    5bac:	95 e0       	ldi	r25, 0x05	; 5
    5bae:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					LCD.WriteStr(dspBuff[0]);
    5bb2:	63 ee       	ldi	r22, 0xE3	; 227
    5bb4:	73 e0       	ldi	r23, 0x03	; 3
    5bb6:	89 e0       	ldi	r24, 0x09	; 9
    5bb8:	95 e0       	ldi	r25, 0x05	; 5
    5bba:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					if(seq >= 5 || tout){
    5bbe:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <_ZL3seq>
    5bc2:	85 30       	cpi	r24, 0x05	; 5
    5bc4:	30 f4       	brcc	.+12     	; 0x5bd2 <main+0x305e>
    5bc6:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <_ZL4tout>
    5bca:	88 23       	and	r24, r24
    5bcc:	11 f4       	brne	.+4      	; 0x5bd2 <main+0x305e>
    5bce:	0c 94 ba 36 	jmp	0x6d74	; 0x6d74 <main+0x4200>
						LCD.Cursor(5,1);
    5bd2:	41 e0       	ldi	r20, 0x01	; 1
    5bd4:	65 e0       	ldi	r22, 0x05	; 5
    5bd6:	89 e0       	ldi	r24, 0x09	; 9
    5bd8:	95 e0       	ldi	r25, 0x05	; 5
    5bda:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
						sprintf(dspBuff[0], "%u:%u%u.%u", (uint8_t)(runTotalTime/600),(uint8_t)(runTotalTime%600/100%10),(uint8_t)(runTotalTime%600/10%10),(uint8_t)(runTotalTime%600%10));
    5bde:	40 91 13 04 	lds	r20, 0x0413	; 0x800413 <_ZL12runTotalTime>
    5be2:	50 91 14 04 	lds	r21, 0x0414	; 0x800414 <_ZL12runTotalTime+0x1>
    5be6:	fa 01       	movw	r30, r20
    5be8:	f6 95       	lsr	r31
    5bea:	e7 95       	ror	r30
    5bec:	f6 95       	lsr	r31
    5bee:	e7 95       	ror	r30
    5bf0:	f6 95       	lsr	r31
    5bf2:	e7 95       	ror	r30
    5bf4:	9f 01       	movw	r18, r30
    5bf6:	af e4       	ldi	r26, 0x4F	; 79
    5bf8:	bb e1       	ldi	r27, 0x1B	; 27
    5bfa:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5bfe:	96 95       	lsr	r25
    5c00:	87 95       	ror	r24
    5c02:	96 95       	lsr	r25
    5c04:	87 95       	ror	r24
    5c06:	96 95       	lsr	r25
    5c08:	87 95       	ror	r24
    5c0a:	28 e5       	ldi	r18, 0x58	; 88
    5c0c:	32 e0       	ldi	r19, 0x02	; 2
    5c0e:	bc 01       	movw	r22, r24
    5c10:	62 9f       	mul	r22, r18
    5c12:	c0 01       	movw	r24, r0
    5c14:	63 9f       	mul	r22, r19
    5c16:	90 0d       	add	r25, r0
    5c18:	72 9f       	mul	r23, r18
    5c1a:	90 0d       	add	r25, r0
    5c1c:	11 24       	eor	r1, r1
    5c1e:	9a 01       	movw	r18, r20
    5c20:	28 1b       	sub	r18, r24
    5c22:	39 0b       	sbc	r19, r25
    5c24:	3d 83       	std	Y+5, r19	; 0x05
    5c26:	2c 83       	std	Y+4, r18	; 0x04
    5c28:	ad ec       	ldi	r26, 0xCD	; 205
    5c2a:	bc ec       	ldi	r27, 0xCC	; 204
    5c2c:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5c30:	ac 01       	movw	r20, r24
    5c32:	56 95       	lsr	r21
    5c34:	47 95       	ror	r20
    5c36:	56 95       	lsr	r21
    5c38:	47 95       	ror	r20
    5c3a:	56 95       	lsr	r21
    5c3c:	47 95       	ror	r20
    5c3e:	9a 01       	movw	r18, r20
    5c40:	22 0f       	add	r18, r18
    5c42:	33 1f       	adc	r19, r19
    5c44:	ca 01       	movw	r24, r20
    5c46:	88 0f       	add	r24, r24
    5c48:	99 1f       	adc	r25, r25
    5c4a:	88 0f       	add	r24, r24
    5c4c:	99 1f       	adc	r25, r25
    5c4e:	88 0f       	add	r24, r24
    5c50:	99 1f       	adc	r25, r25
    5c52:	82 0f       	add	r24, r18
    5c54:	93 1f       	adc	r25, r19
    5c56:	6c 81       	ldd	r22, Y+4	; 0x04
    5c58:	7d 81       	ldd	r23, Y+5	; 0x05
    5c5a:	68 1b       	sub	r22, r24
    5c5c:	79 0b       	sbc	r23, r25
    5c5e:	cb 01       	movw	r24, r22
    5c60:	99 27       	eor	r25, r25
    5c62:	9f 93       	push	r25
    5c64:	8f 93       	push	r24
    5c66:	9a 01       	movw	r18, r20
    5c68:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5c6c:	96 95       	lsr	r25
    5c6e:	87 95       	ror	r24
    5c70:	96 95       	lsr	r25
    5c72:	87 95       	ror	r24
    5c74:	96 95       	lsr	r25
    5c76:	87 95       	ror	r24
    5c78:	9c 01       	movw	r18, r24
    5c7a:	22 0f       	add	r18, r18
    5c7c:	33 1f       	adc	r19, r19
    5c7e:	88 0f       	add	r24, r24
    5c80:	99 1f       	adc	r25, r25
    5c82:	88 0f       	add	r24, r24
    5c84:	99 1f       	adc	r25, r25
    5c86:	88 0f       	add	r24, r24
    5c88:	99 1f       	adc	r25, r25
    5c8a:	82 0f       	add	r24, r18
    5c8c:	93 1f       	adc	r25, r19
    5c8e:	9a 01       	movw	r18, r20
    5c90:	28 1b       	sub	r18, r24
    5c92:	39 0b       	sbc	r19, r25
    5c94:	c9 01       	movw	r24, r18
    5c96:	99 27       	eor	r25, r25
    5c98:	9f 93       	push	r25
    5c9a:	8f 93       	push	r24
    5c9c:	2c 81       	ldd	r18, Y+4	; 0x04
    5c9e:	3d 81       	ldd	r19, Y+5	; 0x05
    5ca0:	36 95       	lsr	r19
    5ca2:	27 95       	ror	r18
    5ca4:	36 95       	lsr	r19
    5ca6:	27 95       	ror	r18
    5ca8:	ab e7       	ldi	r26, 0x7B	; 123
    5caa:	b4 e1       	ldi	r27, 0x14	; 20
    5cac:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5cb0:	ac 01       	movw	r20, r24
    5cb2:	56 95       	lsr	r21
    5cb4:	47 95       	ror	r20
    5cb6:	9a 01       	movw	r18, r20
    5cb8:	ad ec       	ldi	r26, 0xCD	; 205
    5cba:	bc ec       	ldi	r27, 0xCC	; 204
    5cbc:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5cc0:	96 95       	lsr	r25
    5cc2:	87 95       	ror	r24
    5cc4:	96 95       	lsr	r25
    5cc6:	87 95       	ror	r24
    5cc8:	96 95       	lsr	r25
    5cca:	87 95       	ror	r24
    5ccc:	9c 01       	movw	r18, r24
    5cce:	22 0f       	add	r18, r18
    5cd0:	33 1f       	adc	r19, r19
    5cd2:	88 0f       	add	r24, r24
    5cd4:	99 1f       	adc	r25, r25
    5cd6:	88 0f       	add	r24, r24
    5cd8:	99 1f       	adc	r25, r25
    5cda:	88 0f       	add	r24, r24
    5cdc:	99 1f       	adc	r25, r25
    5cde:	82 0f       	add	r24, r18
    5ce0:	93 1f       	adc	r25, r19
    5ce2:	ba 01       	movw	r22, r20
    5ce4:	68 1b       	sub	r22, r24
    5ce6:	79 0b       	sbc	r23, r25
    5ce8:	cb 01       	movw	r24, r22
    5cea:	99 27       	eor	r25, r25
    5cec:	9f 93       	push	r25
    5cee:	8f 93       	push	r24
    5cf0:	9f 01       	movw	r18, r30
    5cf2:	af e4       	ldi	r26, 0x4F	; 79
    5cf4:	bb e1       	ldi	r27, 0x1B	; 27
    5cf6:	0e 94 e0 3a 	call	0x75c0	; 0x75c0 <__umulhisi3>
    5cfa:	96 95       	lsr	r25
    5cfc:	87 95       	ror	r24
    5cfe:	96 95       	lsr	r25
    5d00:	87 95       	ror	r24
    5d02:	96 95       	lsr	r25
    5d04:	87 95       	ror	r24
    5d06:	99 27       	eor	r25, r25
    5d08:	9f 93       	push	r25
    5d0a:	8f 93       	push	r24
    5d0c:	84 e3       	ldi	r24, 0x34	; 52
    5d0e:	91 e0       	ldi	r25, 0x01	; 1
    5d10:	9f 93       	push	r25
    5d12:	8f 93       	push	r24
    5d14:	83 ee       	ldi	r24, 0xE3	; 227
    5d16:	93 e0       	ldi	r25, 0x03	; 3
    5d18:	9f 93       	push	r25
    5d1a:	8f 93       	push	r24
    5d1c:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
						LCD.WriteStr(dspBuff[0]);
    5d20:	63 ee       	ldi	r22, 0xE3	; 227
    5d22:	73 e0       	ldi	r23, 0x03	; 3
    5d24:	89 e0       	ldi	r24, 0x09	; 9
    5d26:	95 e0       	ldi	r25, 0x05	; 5
    5d28:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    5d2c:	0f b6       	in	r0, 0x3f	; 63
    5d2e:	f8 94       	cli
    5d30:	de bf       	out	0x3e, r29	; 62
    5d32:	0f be       	out	0x3f, r0	; 63
    5d34:	cd bf       	out	0x3d, r28	; 61
    5d36:	0c 94 ba 36 	jmp	0x6d74	; 0x6d74 <main+0x4200>
					}
				}
				else{
					for(uint8_t i=0;i<14;i++){
    5d3a:	9a 81       	ldd	r25, Y+2	; 0x02
    5d3c:	9e 30       	cpi	r25, 0x0E	; 14
    5d3e:	09 f4       	brne	.+2      	; 0x5d42 <main+0x31ce>
    5d40:	49 c0       	rjmp	.+146    	; 0x5dd4 <main+0x3260>
						LCD.Cursor(1+i,0);
    5d42:	ea 81       	ldd	r30, Y+2	; 0x02
    5d44:	ef 5f       	subi	r30, 0xFF	; 255
    5d46:	ea 83       	std	Y+2, r30	; 0x02
    5d48:	40 e0       	ldi	r20, 0x00	; 0
    5d4a:	6e 2f       	mov	r22, r30
    5d4c:	89 e0       	ldi	r24, 0x09	; 9
    5d4e:	95 e0       	ldi	r25, 0x05	; 5
    5d50:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
						if(Sens.ResultRaw[i]>1015){LCD.WriteChr('x');}
    5d54:	f8 01       	movw	r30, r16
    5d56:	81 91       	ld	r24, Z+
    5d58:	91 91       	ld	r25, Z+
    5d5a:	8f 01       	movw	r16, r30
    5d5c:	88 3f       	cpi	r24, 0xF8	; 248
    5d5e:	f3 e0       	ldi	r31, 0x03	; 3
    5d60:	9f 07       	cpc	r25, r31
    5d62:	30 f0       	brcs	.+12     	; 0x5d70 <main+0x31fc>
    5d64:	68 e7       	ldi	r22, 0x78	; 120
    5d66:	89 e0       	ldi	r24, 0x09	; 9
    5d68:	95 e0       	ldi	r25, 0x05	; 5
    5d6a:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
    5d6e:	e5 cf       	rjmp	.-54     	; 0x5d3a <main+0x31c6>
						else{
							BarGraph(Sens.ResultRaw[i]*9/(Line.Threshold==0?1:Line.Threshold*1.7));
    5d70:	bc 01       	movw	r22, r24
    5d72:	66 0f       	add	r22, r22
    5d74:	77 1f       	adc	r23, r23
    5d76:	66 0f       	add	r22, r22
    5d78:	77 1f       	adc	r23, r23
    5d7a:	66 0f       	add	r22, r22
    5d7c:	77 1f       	adc	r23, r23
    5d7e:	68 0f       	add	r22, r24
    5d80:	79 1f       	adc	r23, r25
    5d82:	80 e0       	ldi	r24, 0x00	; 0
    5d84:	90 e0       	ldi	r25, 0x00	; 0
    5d86:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
    5d8a:	4b 01       	movw	r8, r22
    5d8c:	5c 01       	movw	r10, r24
    5d8e:	f7 01       	movw	r30, r14
    5d90:	62 81       	ldd	r22, Z+2	; 0x02
    5d92:	73 81       	ldd	r23, Z+3	; 0x03
    5d94:	61 15       	cp	r22, r1
    5d96:	71 05       	cpc	r23, r1
    5d98:	59 f0       	breq	.+22     	; 0x5db0 <main+0x323c>
    5d9a:	80 e0       	ldi	r24, 0x00	; 0
    5d9c:	90 e0       	ldi	r25, 0x00	; 0
    5d9e:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
    5da2:	2a e9       	ldi	r18, 0x9A	; 154
    5da4:	39 e9       	ldi	r19, 0x99	; 153
    5da6:	49 ed       	ldi	r20, 0xD9	; 217
    5da8:	5f e3       	ldi	r21, 0x3F	; 63
    5daa:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
    5dae:	04 c0       	rjmp	.+8      	; 0x5db8 <main+0x3244>
    5db0:	67 2d       	mov	r22, r7
    5db2:	7c 2d       	mov	r23, r12
    5db4:	8d 2d       	mov	r24, r13
    5db6:	9f e3       	ldi	r25, 0x3F	; 63
    5db8:	26 2f       	mov	r18, r22
    5dba:	37 2f       	mov	r19, r23
    5dbc:	48 2f       	mov	r20, r24
    5dbe:	59 2f       	mov	r21, r25
    5dc0:	c5 01       	movw	r24, r10
    5dc2:	b4 01       	movw	r22, r8
    5dc4:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    5dc8:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
    5dcc:	86 2f       	mov	r24, r22
    5dce:	0e 94 b0 05 	call	0xb60	; 0xb60 <_ZL8BarGraphh>
    5dd2:	b3 cf       	rjmp	.-154    	; 0x5d3a <main+0x31c6>
						}
					}
					LCD.Cursor(0,1);
    5dd4:	41 e0       	ldi	r20, 0x01	; 1
    5dd6:	60 e0       	ldi	r22, 0x00	; 0
    5dd8:	89 e0       	ldi	r24, 0x09	; 9
    5dda:	95 e0       	ldi	r25, 0x05	; 5
    5ddc:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					sprintf(strBuff, "CP%d-i%d  ", checkPointSel, checkPoint[checkPointSel]);
    5de0:	80 91 55 04 	lds	r24, 0x0455	; 0x800455 <_ZL13checkPointSel>
    5de4:	e8 2f       	mov	r30, r24
    5de6:	f0 e0       	ldi	r31, 0x00	; 0
    5de8:	ea 5a       	subi	r30, 0xAA	; 170
    5dea:	fb 4f       	sbci	r31, 0xFB	; 251
    5dec:	90 81       	ld	r25, Z
    5dee:	1f 92       	push	r1
    5df0:	9f 93       	push	r25
    5df2:	1f 92       	push	r1
    5df4:	8f 93       	push	r24
    5df6:	8f e3       	ldi	r24, 0x3F	; 63
    5df8:	91 e0       	ldi	r25, 0x01	; 1
    5dfa:	9f 93       	push	r25
    5dfc:	8f 93       	push	r24
    5dfe:	8f ec       	ldi	r24, 0xCF	; 207
    5e00:	93 e0       	ldi	r25, 0x03	; 3
    5e02:	9f 93       	push	r25
    5e04:	8f 93       	push	r24
    5e06:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					LCD.WriteStr(strBuff);
    5e0a:	6f ec       	ldi	r22, 0xCF	; 207
    5e0c:	73 e0       	ldi	r23, 0x03	; 3
    5e0e:	89 e0       	ldi	r24, 0x09	; 9
    5e10:	95 e0       	ldi	r25, 0x05	; 5
    5e12:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
					LCD.Cursor(12,1);
    5e16:	41 e0       	ldi	r20, 0x01	; 1
    5e18:	6c e0       	ldi	r22, 0x0C	; 12
    5e1a:	89 e0       	ldi	r24, 0x09	; 9
    5e1c:	95 e0       	ldi	r25, 0x05	; 5
    5e1e:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
					sprintf(strBuff, "P%d%c ", progSel+1, (progInv?'\'':' '));
    5e22:	0f b6       	in	r0, 0x3f	; 63
    5e24:	f8 94       	cli
    5e26:	de bf       	out	0x3e, r29	; 62
    5e28:	0f be       	out	0x3f, r0	; 63
    5e2a:	cd bf       	out	0x3d, r28	; 61
    5e2c:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <_ZL7progInv>
    5e30:	81 11       	cpse	r24, r1
    5e32:	03 c0       	rjmp	.+6      	; 0x5e3a <main+0x32c6>
    5e34:	80 e2       	ldi	r24, 0x20	; 32
    5e36:	90 e0       	ldi	r25, 0x00	; 0
    5e38:	02 c0       	rjmp	.+4      	; 0x5e3e <main+0x32ca>
    5e3a:	87 e2       	ldi	r24, 0x27	; 39
    5e3c:	90 e0       	ldi	r25, 0x00	; 0
    5e3e:	9f 93       	push	r25
    5e40:	8f 93       	push	r24
    5e42:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    5e46:	90 e0       	ldi	r25, 0x00	; 0
    5e48:	01 96       	adiw	r24, 0x01	; 1
    5e4a:	9f 93       	push	r25
    5e4c:	8f 93       	push	r24
    5e4e:	8d e0       	ldi	r24, 0x0D	; 13
    5e50:	91 e0       	ldi	r25, 0x01	; 1
    5e52:	9f 93       	push	r25
    5e54:	8f 93       	push	r24
    5e56:	8f ec       	ldi	r24, 0xCF	; 207
    5e58:	93 e0       	ldi	r25, 0x03	; 3
    5e5a:	9f 93       	push	r25
    5e5c:	8f 93       	push	r24
    5e5e:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					LCD.WriteStr(strBuff);
    5e62:	6f ec       	ldi	r22, 0xCF	; 207
    5e64:	73 e0       	ldi	r23, 0x03	; 3
    5e66:	89 e0       	ldi	r24, 0x09	; 9
    5e68:	95 e0       	ldi	r25, 0x05	; 5
    5e6a:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
    5e6e:	0f b6       	in	r0, 0x3f	; 63
    5e70:	f8 94       	cli
    5e72:	de bf       	out	0x3e, r29	; 62
    5e74:	0f be       	out	0x3f, r0	; 63
    5e76:	cd bf       	out	0x3d, r28	; 61
    5e78:	7d c7       	rjmp	.+3834   	; 0x6d74 <main+0x4200>
				}
				#endif
			break;
			//Program
			case 1:
				if(sidemenu > 0 && submenu == 0){
    5e7a:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    5e7e:	88 23       	and	r24, r24
    5e80:	09 f4       	brne	.+2      	; 0x5e84 <main+0x3310>
    5e82:	57 c0       	rjmp	.+174    	; 0x5f32 <main+0x33be>
    5e84:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5e88:	81 11       	cpse	r24, r1
    5e8a:	58 c0       	rjmp	.+176    	; 0x5f3c <main+0x33c8>
					sprintf(dspBuff[0], " Copy to P%d ", gpVar1+1);
    5e8c:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    5e90:	90 e0       	ldi	r25, 0x00	; 0
    5e92:	01 96       	adiw	r24, 0x01	; 1
    5e94:	9f 93       	push	r25
    5e96:	8f 93       	push	r24
    5e98:	8a e4       	ldi	r24, 0x4A	; 74
    5e9a:	91 e0       	ldi	r25, 0x01	; 1
    5e9c:	9f 93       	push	r25
    5e9e:	8f 93       	push	r24
    5ea0:	83 ee       	ldi	r24, 0xE3	; 227
    5ea2:	93 e0       	ldi	r25, 0x03	; 3
    5ea4:	9f 93       	push	r25
    5ea6:	8f 93       	push	r24
    5ea8:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					strcpy_P(strBuff, invNrmStr[progInv]);
    5eac:	60 91 c5 03 	lds	r22, 0x03C5	; 0x8003c5 <_ZL7progInv>
    5eb0:	70 e0       	ldi	r23, 0x00	; 0
    5eb2:	66 0f       	add	r22, r22
    5eb4:	77 1f       	adc	r23, r23
    5eb6:	66 0f       	add	r22, r22
    5eb8:	77 1f       	adc	r23, r23
    5eba:	67 56       	subi	r22, 0x67	; 103
    5ebc:	7e 4f       	sbci	r23, 0xFE	; 254
    5ebe:	8f ec       	ldi	r24, 0xCF	; 207
    5ec0:	93 e0       	ldi	r25, 0x03	; 3
    5ec2:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
					sprintf(dspBuff[1], " %s  Del  [P%d] ", strBuff, progSel+1);
    5ec6:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZL7progSel>
    5eca:	90 e0       	ldi	r25, 0x00	; 0
    5ecc:	01 96       	adiw	r24, 0x01	; 1
    5ece:	9f 93       	push	r25
    5ed0:	8f 93       	push	r24
    5ed2:	8f ec       	ldi	r24, 0xCF	; 207
    5ed4:	93 e0       	ldi	r25, 0x03	; 3
    5ed6:	9f 93       	push	r25
    5ed8:	8f 93       	push	r24
    5eda:	88 e5       	ldi	r24, 0x58	; 88
    5edc:	91 e0       	ldi	r25, 0x01	; 1
    5ede:	9f 93       	push	r25
    5ee0:	8f 93       	push	r24
    5ee2:	87 ef       	ldi	r24, 0xF7	; 247
    5ee4:	93 e0       	ldi	r25, 0x03	; 3
    5ee6:	9f 93       	push	r25
    5ee8:	8f 93       	push	r24
    5eea:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					switch(sidemenu){
    5eee:	0f b6       	in	r0, 0x3f	; 63
    5ef0:	f8 94       	cli
    5ef2:	de bf       	out	0x3e, r29	; 62
    5ef4:	0f be       	out	0x3f, r0	; 63
    5ef6:	cd bf       	out	0x3d, r28	; 61
    5ef8:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    5efc:	82 30       	cpi	r24, 0x02	; 2
    5efe:	59 f0       	breq	.+22     	; 0x5f16 <main+0x33a2>
    5f00:	83 30       	cpi	r24, 0x03	; 3
    5f02:	81 f0       	breq	.+32     	; 0x5f24 <main+0x33b0>
    5f04:	81 30       	cpi	r24, 0x01	; 1
    5f06:	09 f0       	breq	.+2      	; 0x5f0a <main+0x3396>
    5f08:	35 c7       	rjmp	.+3690   	; 0x6d74 <main+0x4200>
						case 1:dspCursor = 1; dspCursorChr = '>';break;
    5f0a:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    5f0e:	8e e3       	ldi	r24, 0x3E	; 62
    5f10:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    5f14:	2f c7       	rjmp	.+3678   	; 0x6d74 <main+0x4200>
						case 2:dspCursor = 17; dspCursorChr = '>';break;
    5f16:	81 e1       	ldi	r24, 0x11	; 17
    5f18:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    5f1c:	8e e3       	ldi	r24, 0x3E	; 62
    5f1e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    5f22:	28 c7       	rjmp	.+3664   	; 0x6d74 <main+0x4200>
						case 3:dspCursor = 22; dspCursorChr = '>';break;
    5f24:	86 e1       	ldi	r24, 0x16	; 22
    5f26:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    5f2a:	8e e3       	ldi	r24, 0x3E	; 62
    5f2c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    5f30:	21 c7       	rjmp	.+3650   	; 0x6d74 <main+0x4200>
					}
				}
				else if(submenu > 0){
    5f32:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    5f36:	88 23       	and	r24, r24
    5f38:	09 f4       	brne	.+2      	; 0x5f3c <main+0x33c8>
    5f3a:	1c c7       	rjmp	.+3640   	; 0x6d74 <main+0x4200>
					switch(submenu){
    5f3c:	89 30       	cpi	r24, 0x09	; 9
    5f3e:	30 f4       	brcc	.+12     	; 0x5f4c <main+0x33d8>
    5f40:	85 30       	cpi	r24, 0x05	; 5
    5f42:	08 f0       	brcs	.+2      	; 0x5f46 <main+0x33d2>
    5f44:	67 c1       	rjmp	.+718    	; 0x6214 <main+0x36a0>
    5f46:	81 30       	cpi	r24, 0x01	; 1
    5f48:	28 f4       	brcc	.+10     	; 0x5f54 <main+0x33e0>
    5f4a:	14 c7       	rjmp	.+3624   	; 0x6d74 <main+0x4200>
    5f4c:	8d 30       	cpi	r24, 0x0D	; 13
    5f4e:	08 f4       	brcc	.+2      	; 0x5f52 <main+0x33de>
    5f50:	5c c2       	rjmp	.+1208   	; 0x640a <main+0x3896>
    5f52:	10 c7       	rjmp	.+3616   	; 0x6d74 <main+0x4200>
						case 1 ... 4:
							if(idxSel == 0){
    5f54:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    5f58:	81 11       	cpse	r24, r1
    5f5a:	22 c0       	rjmp	.+68     	; 0x5fa0 <main+0x342c>
								strcpy_P(dspBuff[0], startIdxStr);
    5f5c:	6d e5       	ldi	r22, 0x5D	; 93
    5f5e:	71 e0       	ldi	r23, 0x01	; 1
    5f60:	83 ee       	ldi	r24, 0xE3	; 227
    5f62:	93 e0       	ldi	r25, 0x03	; 3
    5f64:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
								sprintf(dspBuff[1], " i%-3d T%-3d  V%-3d ", idxSel, indexBuff[5], indexBuff[6]);
    5f68:	eb e6       	ldi	r30, 0x6B	; 107
    5f6a:	f4 e0       	ldi	r31, 0x04	; 4
    5f6c:	86 81       	ldd	r24, Z+6	; 0x06
    5f6e:	1f 92       	push	r1
    5f70:	8f 93       	push	r24
    5f72:	85 81       	ldd	r24, Z+5	; 0x05
    5f74:	1f 92       	push	r1
    5f76:	8f 93       	push	r24
    5f78:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    5f7c:	1f 92       	push	r1
    5f7e:	8f 93       	push	r24
    5f80:	89 e6       	ldi	r24, 0x69	; 105
    5f82:	91 e0       	ldi	r25, 0x01	; 1
    5f84:	9f 93       	push	r25
    5f86:	8f 93       	push	r24
    5f88:	87 ef       	ldi	r24, 0xF7	; 247
    5f8a:	93 e0       	ldi	r25, 0x03	; 3
    5f8c:	9f 93       	push	r25
    5f8e:	8f 93       	push	r24
    5f90:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    5f94:	0f b6       	in	r0, 0x3f	; 63
    5f96:	f8 94       	cli
    5f98:	de bf       	out	0x3e, r29	; 62
    5f9a:	0f be       	out	0x3f, r0	; 63
    5f9c:	cd bf       	out	0x3d, r28	; 61
    5f9e:	68 c0       	rjmp	.+208    	; 0x6070 <main+0x34fc>
							}
							else{
								if(uppDsp == 0){
    5fa0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
    5fa4:	81 11       	cpse	r24, r1
    5fa6:	2b c0       	rjmp	.+86     	; 0x5ffe <main+0x348a>
									LCD.Cursor(0,0);
    5fa8:	40 e0       	ldi	r20, 0x00	; 0
    5faa:	60 e0       	ldi	r22, 0x00	; 0
    5fac:	89 e0       	ldi	r24, 0x09	; 9
    5fae:	95 e0       	ldi	r25, 0x05	; 5
    5fb0:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
									if(sidemenu == 0){LCD.WriteChr(pgm_read_byte(&lineColStr[((indexBuff[1]&0b1100000)>>5)]));}
    5fb4:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    5fb8:	81 11       	cpse	r24, r1
    5fba:	16 c0       	rjmp	.+44     	; 0x5fe8 <main+0x3474>
    5fbc:	e0 91 6c 04 	lds	r30, 0x046C	; 0x80046c <_ZL9indexBuff+0x1>
    5fc0:	e0 76       	andi	r30, 0x60	; 96
    5fc2:	f0 e0       	ldi	r31, 0x00	; 0
    5fc4:	f5 95       	asr	r31
    5fc6:	e7 95       	ror	r30
    5fc8:	f5 95       	asr	r31
    5fca:	e7 95       	ror	r30
    5fcc:	f5 95       	asr	r31
    5fce:	e7 95       	ror	r30
    5fd0:	f5 95       	asr	r31
    5fd2:	e7 95       	ror	r30
    5fd4:	f5 95       	asr	r31
    5fd6:	e7 95       	ror	r30
    5fd8:	e5 5b       	subi	r30, 0xB5	; 181
    5fda:	fd 4f       	sbci	r31, 0xFD	; 253
    5fdc:	64 91       	lpm	r22, Z
    5fde:	89 e0       	ldi	r24, 0x09	; 9
    5fe0:	95 e0       	ldi	r25, 0x05	; 5
    5fe2:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
    5fe6:	05 c0       	rjmp	.+10     	; 0x5ff2 <main+0x347e>
									else{LCD.WriteChr(' ');}
    5fe8:	60 e2       	ldi	r22, 0x20	; 32
    5fea:	89 e0       	ldi	r24, 0x09	; 9
    5fec:	95 e0       	ldi	r25, 0x05	; 5
    5fee:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
									sensDisp(sensMask);
    5ff2:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <_ZL8sensMask>
    5ff6:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    5ffa:	0e 94 66 06 	call	0xccc	; 0xccc <_ZL8sensDispj>
								}
								strcpy_P(strBuff, idxCmdStr[(indexBuff[0]&0b00001111)]);
    5ffe:	eb e6       	ldi	r30, 0x6B	; 107
    6000:	f4 e0       	ldi	r31, 0x04	; 4
    6002:	80 81       	ld	r24, Z
    6004:	8f 70       	andi	r24, 0x0F	; 15
    6006:	90 e0       	ldi	r25, 0x00	; 0
    6008:	bc 01       	movw	r22, r24
    600a:	66 0f       	add	r22, r22
    600c:	77 1f       	adc	r23, r23
    600e:	68 0f       	add	r22, r24
    6010:	79 1f       	adc	r23, r25
    6012:	66 0f       	add	r22, r22
    6014:	77 1f       	adc	r23, r23
    6016:	6b 5e       	subi	r22, 0xEB	; 235
    6018:	7d 4f       	sbci	r23, 0xFD	; 253
    601a:	8f ec       	ldi	r24, 0xCF	; 207
    601c:	93 e0       	ldi	r25, 0x03	; 3
    601e:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
								sprintf(dspBuff[1], " i%-3d%c %s S%d ", idxSel, (progInv?'\'':' '), strBuff, (indexBuff[1]&0b11111));
    6022:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <_ZL9indexBuff+0x1>
    6026:	8f 71       	andi	r24, 0x1F	; 31
    6028:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <_ZL7progInv>
    602c:	91 11       	cpse	r25, r1
    602e:	03 c0       	rjmp	.+6      	; 0x6036 <main+0x34c2>
    6030:	90 e2       	ldi	r25, 0x20	; 32
    6032:	20 e0       	ldi	r18, 0x00	; 0
    6034:	02 c0       	rjmp	.+4      	; 0x603a <main+0x34c6>
    6036:	97 e2       	ldi	r25, 0x27	; 39
    6038:	20 e0       	ldi	r18, 0x00	; 0
    603a:	1f 92       	push	r1
    603c:	8f 93       	push	r24
    603e:	4f ec       	ldi	r20, 0xCF	; 207
    6040:	53 e0       	ldi	r21, 0x03	; 3
    6042:	5f 93       	push	r21
    6044:	4f 93       	push	r20
    6046:	2f 93       	push	r18
    6048:	9f 93       	push	r25
    604a:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    604e:	1f 92       	push	r1
    6050:	8f 93       	push	r24
    6052:	8e e7       	ldi	r24, 0x7E	; 126
    6054:	91 e0       	ldi	r25, 0x01	; 1
    6056:	9f 93       	push	r25
    6058:	8f 93       	push	r24
    605a:	87 ef       	ldi	r24, 0xF7	; 247
    605c:	93 e0       	ldi	r25, 0x03	; 3
    605e:	9f 93       	push	r25
    6060:	8f 93       	push	r24
    6062:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6066:	0f b6       	in	r0, 0x3f	; 63
    6068:	f8 94       	cli
    606a:	de bf       	out	0x3e, r29	; 62
    606c:	0f be       	out	0x3f, r0	; 63
    606e:	cd bf       	out	0x3d, r28	; 61
							}
							switch(submenu){
    6070:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6074:	82 30       	cpi	r24, 0x02	; 2
    6076:	09 f4       	brne	.+2      	; 0x607a <main+0x3506>
    6078:	54 c0       	rjmp	.+168    	; 0x6122 <main+0x35ae>
    607a:	18 f4       	brcc	.+6      	; 0x6082 <main+0x350e>
    607c:	81 30       	cpi	r24, 0x01	; 1
    607e:	41 f0       	breq	.+16     	; 0x6090 <main+0x351c>
    6080:	79 c6       	rjmp	.+3314   	; 0x6d74 <main+0x4200>
    6082:	83 30       	cpi	r24, 0x03	; 3
    6084:	09 f4       	brne	.+2      	; 0x6088 <main+0x3514>
    6086:	5f c0       	rjmp	.+190    	; 0x6146 <main+0x35d2>
    6088:	84 30       	cpi	r24, 0x04	; 4
    608a:	09 f4       	brne	.+2      	; 0x608e <main+0x351a>
    608c:	bc c0       	rjmp	.+376    	; 0x6206 <main+0x3692>
    608e:	72 c6       	rjmp	.+3300   	; 0x6d74 <main+0x4200>
								case 1:
									if(sidemenu > 0){
    6090:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    6094:	88 23       	and	r24, r24
    6096:	f1 f1       	breq	.+124    	; 0x6114 <main+0x35a0>
										sprintf(dspBuff[0], " Copy to i%d ", gpVar1);
    6098:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    609c:	1f 92       	push	r1
    609e:	8f 93       	push	r24
    60a0:	8f e8       	ldi	r24, 0x8F	; 143
    60a2:	91 e0       	ldi	r25, 0x01	; 1
    60a4:	9f 93       	push	r25
    60a6:	8f 93       	push	r24
    60a8:	83 ee       	ldi	r24, 0xE3	; 227
    60aa:	93 e0       	ldi	r25, 0x03	; 3
    60ac:	9f 93       	push	r25
    60ae:	8f 93       	push	r24
    60b0:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
										sprintf(dspBuff[1], " Ins  Del [i%d] ", idxSel);
    60b4:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    60b8:	1f 92       	push	r1
    60ba:	8f 93       	push	r24
    60bc:	8d e9       	ldi	r24, 0x9D	; 157
    60be:	91 e0       	ldi	r25, 0x01	; 1
    60c0:	9f 93       	push	r25
    60c2:	8f 93       	push	r24
    60c4:	87 ef       	ldi	r24, 0xF7	; 247
    60c6:	93 e0       	ldi	r25, 0x03	; 3
    60c8:	9f 93       	push	r25
    60ca:	8f 93       	push	r24
    60cc:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
										switch(sidemenu){
    60d0:	0f b6       	in	r0, 0x3f	; 63
    60d2:	f8 94       	cli
    60d4:	de bf       	out	0x3e, r29	; 62
    60d6:	0f be       	out	0x3f, r0	; 63
    60d8:	cd bf       	out	0x3d, r28	; 61
    60da:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    60de:	82 30       	cpi	r24, 0x02	; 2
    60e0:	59 f0       	breq	.+22     	; 0x60f8 <main+0x3584>
    60e2:	83 30       	cpi	r24, 0x03	; 3
    60e4:	81 f0       	breq	.+32     	; 0x6106 <main+0x3592>
    60e6:	81 30       	cpi	r24, 0x01	; 1
    60e8:	09 f0       	breq	.+2      	; 0x60ec <main+0x3578>
    60ea:	44 c6       	rjmp	.+3208   	; 0x6d74 <main+0x4200>
											case 1:dspCursor = 1; dspCursorChr = '>';break;
    60ec:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    60f0:	8e e3       	ldi	r24, 0x3E	; 62
    60f2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    60f6:	3e c6       	rjmp	.+3196   	; 0x6d74 <main+0x4200>
											case 2:dspCursor = 17; dspCursorChr = '>';break;
    60f8:	81 e1       	ldi	r24, 0x11	; 17
    60fa:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    60fe:	8e e3       	ldi	r24, 0x3E	; 62
    6100:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6104:	37 c6       	rjmp	.+3182   	; 0x6d74 <main+0x4200>
											case 3:dspCursor = 22; dspCursorChr = '>';break;
    6106:	86 e1       	ldi	r24, 0x16	; 22
    6108:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    610c:	8e e3       	ldi	r24, 0x3E	; 62
    610e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6112:	30 c6       	rjmp	.+3168   	; 0x6d74 <main+0x4200>
										}
									}
									else{
										dspCursor = 17; dspCursorChr = '>';
    6114:	81 e1       	ldi	r24, 0x11	; 17
    6116:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    611a:	8e e3       	ldi	r24, 0x3E	; 62
    611c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6120:	29 c6       	rjmp	.+3154   	; 0x6d74 <main+0x4200>
									}
								break;
								case 2:
									if(idxSel > 0){
    6122:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    6126:	88 23       	and	r24, r24
    6128:	39 f0       	breq	.+14     	; 0x6138 <main+0x35c4>
										dspCursor = 23; dspCursorChr = '>';
    612a:	87 e1       	ldi	r24, 0x17	; 23
    612c:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6130:	8e e3       	ldi	r24, 0x3E	; 62
    6132:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6136:	1e c6       	rjmp	.+3132   	; 0x6d74 <main+0x4200>
									}
									else{
										dspCursor = 22; dspCursorChr = '>';
    6138:	86 e1       	ldi	r24, 0x16	; 22
    613a:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    613e:	8e e3       	ldi	r24, 0x3E	; 62
    6140:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6144:	17 c6       	rjmp	.+3118   	; 0x6d74 <main+0x4200>
									}
								break;
								case 3:
									if(sidemenu > 0){
    6146:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    614a:	88 23       	and	r24, r24
    614c:	09 f4       	brne	.+2      	; 0x6150 <main+0x35dc>
    614e:	49 c0       	rjmp	.+146    	; 0x61e2 <main+0x366e>
										LCD.Cursor(1,0);
    6150:	40 e0       	ldi	r20, 0x00	; 0
    6152:	61 e0       	ldi	r22, 0x01	; 1
    6154:	89 e0       	ldi	r24, 0x09	; 9
    6156:	95 e0       	ldi	r25, 0x05	; 5
    6158:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
										sensDisp(sensMask);
    615c:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <_ZL8sensMask>
    6160:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <_ZL8sensMask+0x1>
    6164:	0e 94 66 06 	call	0xccc	; 0xccc <_ZL8sensDispj>
										if(sidemenu < 7){sprintf(dspBuff[1], "        S%d      ", (indexBuff[1]&0b0011111));}
    6168:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    616c:	87 30       	cpi	r24, 0x07	; 7
    616e:	b0 f4       	brcc	.+44     	; 0x619c <main+0x3628>
    6170:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <_ZL9indexBuff+0x1>
    6174:	8f 71       	andi	r24, 0x1F	; 31
    6176:	1f 92       	push	r1
    6178:	8f 93       	push	r24
    617a:	8e ea       	ldi	r24, 0xAE	; 174
    617c:	91 e0       	ldi	r25, 0x01	; 1
    617e:	9f 93       	push	r25
    6180:	8f 93       	push	r24
    6182:	87 ef       	ldi	r24, 0xF7	; 247
    6184:	93 e0       	ldi	r25, 0x03	; 3
    6186:	9f 93       	push	r25
    6188:	8f 93       	push	r24
    618a:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    618e:	0f 90       	pop	r0
    6190:	0f 90       	pop	r0
    6192:	0f 90       	pop	r0
    6194:	0f 90       	pop	r0
    6196:	0f 90       	pop	r0
    6198:	0f 90       	pop	r0
    619a:	15 c0       	rjmp	.+42     	; 0x61c6 <main+0x3652>
										else{sprintf(dspBuff[1], " S%d             ", (indexBuff[1]&0b0011111));}
    619c:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <_ZL9indexBuff+0x1>
    61a0:	8f 71       	andi	r24, 0x1F	; 31
    61a2:	1f 92       	push	r1
    61a4:	8f 93       	push	r24
    61a6:	80 ec       	ldi	r24, 0xC0	; 192
    61a8:	91 e0       	ldi	r25, 0x01	; 1
    61aa:	9f 93       	push	r25
    61ac:	8f 93       	push	r24
    61ae:	87 ef       	ldi	r24, 0xF7	; 247
    61b0:	93 e0       	ldi	r25, 0x03	; 3
    61b2:	9f 93       	push	r25
    61b4:	8f 93       	push	r24
    61b6:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    61ba:	0f 90       	pop	r0
    61bc:	0f 90       	pop	r0
    61be:	0f 90       	pop	r0
    61c0:	0f 90       	pop	r0
    61c2:	0f 90       	pop	r0
    61c4:	0f 90       	pop	r0
										switch(sidemenu){
    61c6:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZL8sidemenu>
    61ca:	9f ef       	ldi	r25, 0xFF	; 255
    61cc:	98 0f       	add	r25, r24
    61ce:	9f 30       	cpi	r25, 0x0F	; 15
    61d0:	08 f0       	brcs	.+2      	; 0x61d4 <main+0x3660>
    61d2:	d0 c5       	rjmp	.+2976   	; 0x6d74 <main+0x4200>
											case 1 ... 15:
												dspCursor = 17 + sidemenu; dspCursorChr = '^';
    61d4:	8f 5e       	subi	r24, 0xEF	; 239
    61d6:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    61da:	8e e5       	ldi	r24, 0x5E	; 94
    61dc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    61e0:	c9 c5       	rjmp	.+2962   	; 0x6d74 <main+0x4200>
											break;
										}
									}
									else if(idxSel > 0){
    61e2:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZL6idxSel>
    61e6:	88 23       	and	r24, r24
    61e8:	39 f0       	breq	.+14     	; 0x61f8 <main+0x3684>
										dspCursor = 29; dspCursorChr = '>';
    61ea:	8d e1       	ldi	r24, 0x1D	; 29
    61ec:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    61f0:	8e e3       	ldi	r24, 0x3E	; 62
    61f2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    61f6:	be c5       	rjmp	.+2940   	; 0x6d74 <main+0x4200>
									}
									else{
										dspCursor = 28; dspCursorChr = '>';
    61f8:	8c e1       	ldi	r24, 0x1C	; 28
    61fa:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    61fe:	8e e3       	ldi	r24, 0x3E	; 62
    6200:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6204:	b7 c5       	rjmp	.+2926   	; 0x6d74 <main+0x4200>
									}
								break;
								case 4:dspCursor = 17; dspCursorChr = '^';break;
    6206:	81 e1       	ldi	r24, 0x11	; 17
    6208:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    620c:	8e e5       	ldi	r24, 0x5E	; 94
    620e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6212:	b0 c5       	rjmp	.+2912   	; 0x6d74 <main+0x4200>
							}
						break;
						case 5 ... 8:
							switch(indexBuff[0]&0b00001111){
    6214:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <_ZL9indexBuff>
    6218:	8f 70       	andi	r24, 0x0F	; 15
    621a:	86 30       	cpi	r24, 0x06	; 6
    621c:	21 f0       	breq	.+8      	; 0x6226 <main+0x36b2>
    621e:	87 30       	cpi	r24, 0x07	; 7
    6220:	09 f4       	brne	.+2      	; 0x6224 <main+0x36b0>
    6222:	44 c0       	rjmp	.+136    	; 0x62ac <main+0x3738>
    6224:	7a c0       	rjmp	.+244    	; 0x631a <main+0x37a6>
								//Servo
								case 6:
									sprintf(dspBuff[0], " S1 %-3d   S2 %d ", indexBuff[2], indexBuff[3]);
    6226:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <_ZL9indexBuff+0x3>
    622a:	1f 92       	push	r1
    622c:	8f 93       	push	r24
    622e:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <_ZL9indexBuff+0x2>
    6232:	1f 92       	push	r1
    6234:	8f 93       	push	r24
    6236:	82 ed       	ldi	r24, 0xD2	; 210
    6238:	91 e0       	ldi	r25, 0x01	; 1
    623a:	9f 93       	push	r25
    623c:	8f 93       	push	r24
    623e:	83 ee       	ldi	r24, 0xE3	; 227
    6240:	93 e0       	ldi	r25, 0x03	; 3
    6242:	9f 93       	push	r25
    6244:	8f 93       	push	r24
    6246:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
									sprintf(dspBuff[1], " [1]      S3 %d ", indexBuff[4]);
    624a:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZL9indexBuff+0x4>
    624e:	1f 92       	push	r1
    6250:	8f 93       	push	r24
    6252:	84 ee       	ldi	r24, 0xE4	; 228
    6254:	91 e0       	ldi	r25, 0x01	; 1
    6256:	9f 93       	push	r25
    6258:	8f 93       	push	r24
    625a:	87 ef       	ldi	r24, 0xF7	; 247
    625c:	93 e0       	ldi	r25, 0x03	; 3
    625e:	9f 93       	push	r25
    6260:	8f 93       	push	r24
    6262:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
									switch(submenu){
    6266:	0f b6       	in	r0, 0x3f	; 63
    6268:	f8 94       	cli
    626a:	de bf       	out	0x3e, r29	; 62
    626c:	0f be       	out	0x3f, r0	; 63
    626e:	cd bf       	out	0x3d, r28	; 61
    6270:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6274:	86 30       	cpi	r24, 0x06	; 6
    6276:	61 f0       	breq	.+24     	; 0x6290 <main+0x371c>
    6278:	87 30       	cpi	r24, 0x07	; 7
    627a:	89 f0       	breq	.+34     	; 0x629e <main+0x372a>
    627c:	85 30       	cpi	r24, 0x05	; 5
    627e:	09 f0       	breq	.+2      	; 0x6282 <main+0x370e>
    6280:	4c c0       	rjmp	.+152    	; 0x631a <main+0x37a6>
										case 5:dspCursor = 1; dspCursorChr = '>';break;
    6282:	81 e0       	ldi	r24, 0x01	; 1
    6284:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6288:	8e e3       	ldi	r24, 0x3E	; 62
    628a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    628e:	45 c0       	rjmp	.+138    	; 0x631a <main+0x37a6>
										case 6:dspCursor = 10; dspCursorChr = '>';break;
    6290:	8a e0       	ldi	r24, 0x0A	; 10
    6292:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6296:	8e e3       	ldi	r24, 0x3E	; 62
    6298:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    629c:	3e c0       	rjmp	.+124    	; 0x631a <main+0x37a6>
										case 7:dspCursor = 26; dspCursorChr = '>';break;
    629e:	8a e1       	ldi	r24, 0x1A	; 26
    62a0:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    62a4:	8e e3       	ldi	r24, 0x3E	; 62
    62a6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    62aa:	37 c0       	rjmp	.+110    	; 0x631a <main+0x37a6>
									}
								break;
								//GoTo
								case 7:
									sprintf(dspBuff[0], " Prog: %-3d  ", indexBuff[2]+1);
    62ac:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <_ZL9indexBuff+0x2>
    62b0:	90 e0       	ldi	r25, 0x00	; 0
    62b2:	01 96       	adiw	r24, 0x01	; 1
    62b4:	9f 93       	push	r25
    62b6:	8f 93       	push	r24
    62b8:	85 ef       	ldi	r24, 0xF5	; 245
    62ba:	91 e0       	ldi	r25, 0x01	; 1
    62bc:	9f 93       	push	r25
    62be:	8f 93       	push	r24
    62c0:	83 ee       	ldi	r24, 0xE3	; 227
    62c2:	93 e0       	ldi	r25, 0x03	; 3
    62c4:	9f 93       	push	r25
    62c6:	8f 93       	push	r24
    62c8:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
									sprintf(dspBuff[1], " Index: %-3d ", indexBuff[3]);
    62cc:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <_ZL9indexBuff+0x3>
    62d0:	1f 92       	push	r1
    62d2:	8f 93       	push	r24
    62d4:	83 e0       	ldi	r24, 0x03	; 3
    62d6:	92 e0       	ldi	r25, 0x02	; 2
    62d8:	9f 93       	push	r25
    62da:	8f 93       	push	r24
    62dc:	87 ef       	ldi	r24, 0xF7	; 247
    62de:	93 e0       	ldi	r25, 0x03	; 3
    62e0:	9f 93       	push	r25
    62e2:	8f 93       	push	r24
    62e4:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
									switch(submenu){
    62e8:	0f b6       	in	r0, 0x3f	; 63
    62ea:	f8 94       	cli
    62ec:	de bf       	out	0x3e, r29	; 62
    62ee:	0f be       	out	0x3f, r0	; 63
    62f0:	cd bf       	out	0x3d, r28	; 61
    62f2:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    62f6:	85 30       	cpi	r24, 0x05	; 5
    62f8:	19 f0       	breq	.+6      	; 0x6300 <main+0x378c>
    62fa:	86 30       	cpi	r24, 0x06	; 6
    62fc:	41 f0       	breq	.+16     	; 0x630e <main+0x379a>
    62fe:	0d c0       	rjmp	.+26     	; 0x631a <main+0x37a6>
										case 5:dspCursor = 1; dspCursorChr = '>';break;
    6300:	81 e0       	ldi	r24, 0x01	; 1
    6302:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6306:	8e e3       	ldi	r24, 0x3E	; 62
    6308:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    630c:	06 c0       	rjmp	.+12     	; 0x631a <main+0x37a6>
										case 6:dspCursor = 17; dspCursorChr = '>';break;
    630e:	81 e1       	ldi	r24, 0x11	; 17
    6310:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6314:	8e e3       	ldi	r24, 0x3E	; 62
    6316:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
									}
								break;
							}
							if((indexBuff[0]&0b00001111) < 6){
    631a:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <_ZL9indexBuff>
    631e:	28 2f       	mov	r18, r24
    6320:	2f 70       	andi	r18, 0x0F	; 15
    6322:	30 e0       	ldi	r19, 0x00	; 0
    6324:	26 30       	cpi	r18, 0x06	; 6
    6326:	31 05       	cpc	r19, r1
    6328:	0c f0       	brlt	.+2      	; 0x632c <main+0x37b8>
    632a:	24 c5       	rjmp	.+2632   	; 0x6d74 <main+0x4200>
								strcpy_P(strBuff, dlySensStr[(indexBuff[0]>>4)]);
    632c:	90 e0       	ldi	r25, 0x00	; 0
    632e:	95 95       	asr	r25
    6330:	87 95       	ror	r24
    6332:	95 95       	asr	r25
    6334:	87 95       	ror	r24
    6336:	95 95       	asr	r25
    6338:	87 95       	ror	r24
    633a:	95 95       	asr	r25
    633c:	87 95       	ror	r24
    633e:	bc 01       	movw	r22, r24
    6340:	66 0f       	add	r22, r22
    6342:	77 1f       	adc	r23, r23
    6344:	86 0f       	add	r24, r22
    6346:	97 1f       	adc	r25, r23
    6348:	bc 01       	movw	r22, r24
    634a:	60 5d       	subi	r22, 0xD0	; 208
    634c:	7e 4f       	sbci	r23, 0xFE	; 254
    634e:	8f ec       	ldi	r24, 0xCF	; 207
    6350:	93 e0       	ldi	r25, 0x03	; 3
    6352:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
								sprintf(dspBuff[0], " D%-3d     s%s ", indexBuff[2], strBuff);
    6356:	8f ec       	ldi	r24, 0xCF	; 207
    6358:	93 e0       	ldi	r25, 0x03	; 3
    635a:	9f 93       	push	r25
    635c:	8f 93       	push	r24
    635e:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <_ZL9indexBuff+0x2>
    6362:	1f 92       	push	r1
    6364:	8f 93       	push	r24
    6366:	81 e1       	ldi	r24, 0x11	; 17
    6368:	92 e0       	ldi	r25, 0x02	; 2
    636a:	9f 93       	push	r25
    636c:	8f 93       	push	r24
    636e:	83 ee       	ldi	r24, 0xE3	; 227
    6370:	93 e0       	ldi	r25, 0x03	; 3
    6372:	9f 93       	push	r25
    6374:	8f 93       	push	r24
    6376:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
								sprintf(dspBuff[1], " L%-4i    R%i ", (int8_t)indexBuff[4], (int8_t)indexBuff[3]);
    637a:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <_ZL9indexBuff+0x3>
    637e:	28 2f       	mov	r18, r24
    6380:	08 2e       	mov	r0, r24
    6382:	00 0c       	add	r0, r0
    6384:	33 0b       	sbc	r19, r19
    6386:	3f 93       	push	r19
    6388:	8f 93       	push	r24
    638a:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZL9indexBuff+0x4>
    638e:	28 2f       	mov	r18, r24
    6390:	08 2e       	mov	r0, r24
    6392:	00 0c       	add	r0, r0
    6394:	33 0b       	sbc	r19, r19
    6396:	3f 93       	push	r19
    6398:	8f 93       	push	r24
    639a:	81 e2       	ldi	r24, 0x21	; 33
    639c:	92 e0       	ldi	r25, 0x02	; 2
    639e:	9f 93       	push	r25
    63a0:	8f 93       	push	r24
    63a2:	87 ef       	ldi	r24, 0xF7	; 247
    63a4:	93 e0       	ldi	r25, 0x03	; 3
    63a6:	9f 93       	push	r25
    63a8:	8f 93       	push	r24
    63aa:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
								switch(submenu){
    63ae:	0f b6       	in	r0, 0x3f	; 63
    63b0:	f8 94       	cli
    63b2:	de bf       	out	0x3e, r29	; 62
    63b4:	0f be       	out	0x3f, r0	; 63
    63b6:	cd bf       	out	0x3d, r28	; 61
    63b8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    63bc:	86 30       	cpi	r24, 0x06	; 6
    63be:	81 f0       	breq	.+32     	; 0x63e0 <main+0x386c>
    63c0:	18 f4       	brcc	.+6      	; 0x63c8 <main+0x3854>
    63c2:	85 30       	cpi	r24, 0x05	; 5
    63c4:	31 f0       	breq	.+12     	; 0x63d2 <main+0x385e>
    63c6:	d6 c4       	rjmp	.+2476   	; 0x6d74 <main+0x4200>
    63c8:	87 30       	cpi	r24, 0x07	; 7
    63ca:	89 f0       	breq	.+34     	; 0x63ee <main+0x387a>
    63cc:	88 30       	cpi	r24, 0x08	; 8
    63ce:	b1 f0       	breq	.+44     	; 0x63fc <main+0x3888>
    63d0:	d1 c4       	rjmp	.+2466   	; 0x6d74 <main+0x4200>
									case 5:dspCursor = 1; dspCursorChr = '>';break;
    63d2:	81 e0       	ldi	r24, 0x01	; 1
    63d4:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    63d8:	8e e3       	ldi	r24, 0x3E	; 62
    63da:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    63de:	ca c4       	rjmp	.+2452   	; 0x6d74 <main+0x4200>
									case 6:dspCursor = 10; dspCursorChr = '>';break;
    63e0:	8a e0       	ldi	r24, 0x0A	; 10
    63e2:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    63e6:	8e e3       	ldi	r24, 0x3E	; 62
    63e8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    63ec:	c3 c4       	rjmp	.+2438   	; 0x6d74 <main+0x4200>
									case 7:dspCursor = 26; dspCursorChr = '>';break;
    63ee:	8a e1       	ldi	r24, 0x1A	; 26
    63f0:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    63f4:	8e e3       	ldi	r24, 0x3E	; 62
    63f6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    63fa:	bc c4       	rjmp	.+2424   	; 0x6d74 <main+0x4200>
									case 8:dspCursor = 17; dspCursorChr = '>';break;
    63fc:	81 e1       	ldi	r24, 0x11	; 17
    63fe:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6402:	8e e3       	ldi	r24, 0x3E	; 62
    6404:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6408:	b5 c4       	rjmp	.+2410   	; 0x6d74 <main+0x4200>
								}
							}
						break;
						case 9 ... 12:
							if((indexBuff[0]&0b00001111) == 6){
    640a:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <_ZL9indexBuff>
    640e:	8f 70       	andi	r24, 0x0F	; 15
    6410:	86 30       	cpi	r24, 0x06	; 6
    6412:	09 f0       	breq	.+2      	; 0x6416 <main+0x38a2>
    6414:	43 c0       	rjmp	.+134    	; 0x649c <main+0x3928>
								sprintf(dspBuff[0], " S1 %-3d   S2 %d ", indexBuff[5], indexBuff[6]);
    6416:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <_ZL9indexBuff+0x6>
    641a:	1f 92       	push	r1
    641c:	8f 93       	push	r24
    641e:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <_ZL9indexBuff+0x5>
    6422:	1f 92       	push	r1
    6424:	8f 93       	push	r24
    6426:	82 ed       	ldi	r24, 0xD2	; 210
    6428:	91 e0       	ldi	r25, 0x01	; 1
    642a:	9f 93       	push	r25
    642c:	8f 93       	push	r24
    642e:	83 ee       	ldi	r24, 0xE3	; 227
    6430:	93 e0       	ldi	r25, 0x03	; 3
    6432:	9f 93       	push	r25
    6434:	8f 93       	push	r24
    6436:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
								sprintf(dspBuff[1], " [2]      S3 %d ", indexBuff[7]);
    643a:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZL9indexBuff+0x7>
    643e:	1f 92       	push	r1
    6440:	8f 93       	push	r24
    6442:	80 e3       	ldi	r24, 0x30	; 48
    6444:	92 e0       	ldi	r25, 0x02	; 2
    6446:	9f 93       	push	r25
    6448:	8f 93       	push	r24
    644a:	87 ef       	ldi	r24, 0xF7	; 247
    644c:	93 e0       	ldi	r25, 0x03	; 3
    644e:	9f 93       	push	r25
    6450:	8f 93       	push	r24
    6452:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
								switch(submenu){
    6456:	0f b6       	in	r0, 0x3f	; 63
    6458:	f8 94       	cli
    645a:	de bf       	out	0x3e, r29	; 62
    645c:	0f be       	out	0x3f, r0	; 63
    645e:	cd bf       	out	0x3d, r28	; 61
    6460:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6464:	8a 30       	cpi	r24, 0x0A	; 10
    6466:	61 f0       	breq	.+24     	; 0x6480 <main+0x390c>
    6468:	8b 30       	cpi	r24, 0x0B	; 11
    646a:	89 f0       	breq	.+34     	; 0x648e <main+0x391a>
    646c:	89 30       	cpi	r24, 0x09	; 9
    646e:	09 f0       	breq	.+2      	; 0x6472 <main+0x38fe>
    6470:	81 c4       	rjmp	.+2306   	; 0x6d74 <main+0x4200>
									case 9:dspCursor = 1; dspCursorChr = '>';break;
    6472:	81 e0       	ldi	r24, 0x01	; 1
    6474:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6478:	8e e3       	ldi	r24, 0x3E	; 62
    647a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    647e:	7a c4       	rjmp	.+2292   	; 0x6d74 <main+0x4200>
									case 10:dspCursor = 10; dspCursorChr = '>';break;
    6480:	8a e0       	ldi	r24, 0x0A	; 10
    6482:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6486:	8e e3       	ldi	r24, 0x3E	; 62
    6488:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    648c:	73 c4       	rjmp	.+2278   	; 0x6d74 <main+0x4200>
									case 11:dspCursor = 26; dspCursorChr = '>';break;
    648e:	8a e1       	ldi	r24, 0x1A	; 26
    6490:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6494:	8e e3       	ldi	r24, 0x3E	; 62
    6496:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    649a:	6c c4       	rjmp	.+2264   	; 0x6d74 <main+0x4200>
								}
							}
							else{
								strcpy_P(strBuff, lineModeStr[indexBuff[7]>>4]);
    649c:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZL9indexBuff+0x7>
    64a0:	90 e0       	ldi	r25, 0x00	; 0
    64a2:	95 95       	asr	r25
    64a4:	87 95       	ror	r24
    64a6:	95 95       	asr	r25
    64a8:	87 95       	ror	r24
    64aa:	95 95       	asr	r25
    64ac:	87 95       	ror	r24
    64ae:	95 95       	asr	r25
    64b0:	87 95       	ror	r24
    64b2:	bc 01       	movw	r22, r24
    64b4:	66 0f       	add	r22, r22
    64b6:	77 1f       	adc	r23, r23
    64b8:	68 0f       	add	r22, r24
    64ba:	79 1f       	adc	r23, r25
    64bc:	66 0f       	add	r22, r22
    64be:	77 1f       	adc	r23, r23
    64c0:	67 55       	subi	r22, 0x57	; 87
    64c2:	7e 4f       	sbci	r23, 0xFE	; 254
    64c4:	8f ec       	ldi	r24, 0xCF	; 207
    64c6:	93 e0       	ldi	r25, 0x03	; 3
    64c8:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
								sprintf(dspBuff[0], " T%-3d     PD%d ", indexBuff[5], (indexBuff[7]&0b00001111)+1);
    64cc:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZL9indexBuff+0x7>
    64d0:	8f 70       	andi	r24, 0x0F	; 15
    64d2:	90 e0       	ldi	r25, 0x00	; 0
    64d4:	01 96       	adiw	r24, 0x01	; 1
    64d6:	9f 93       	push	r25
    64d8:	8f 93       	push	r24
    64da:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <_ZL9indexBuff+0x5>
    64de:	1f 92       	push	r1
    64e0:	8f 93       	push	r24
    64e2:	81 e4       	ldi	r24, 0x41	; 65
    64e4:	92 e0       	ldi	r25, 0x02	; 2
    64e6:	9f 93       	push	r25
    64e8:	8f 93       	push	r24
    64ea:	83 ee       	ldi	r24, 0xE3	; 227
    64ec:	93 e0       	ldi	r25, 0x03	; 3
    64ee:	9f 93       	push	r25
    64f0:	8f 93       	push	r24
    64f2:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
								sprintf(dspBuff[1], " V%-3d     %s ", indexBuff[6], strBuff);
    64f6:	8f ec       	ldi	r24, 0xCF	; 207
    64f8:	93 e0       	ldi	r25, 0x03	; 3
    64fa:	9f 93       	push	r25
    64fc:	8f 93       	push	r24
    64fe:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <_ZL9indexBuff+0x6>
    6502:	1f 92       	push	r1
    6504:	8f 93       	push	r24
    6506:	82 e5       	ldi	r24, 0x52	; 82
    6508:	92 e0       	ldi	r25, 0x02	; 2
    650a:	9f 93       	push	r25
    650c:	8f 93       	push	r24
    650e:	87 ef       	ldi	r24, 0xF7	; 247
    6510:	93 e0       	ldi	r25, 0x03	; 3
    6512:	9f 93       	push	r25
    6514:	8f 93       	push	r24
    6516:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
								switch(submenu){
    651a:	0f b6       	in	r0, 0x3f	; 63
    651c:	f8 94       	cli
    651e:	de bf       	out	0x3e, r29	; 62
    6520:	0f be       	out	0x3f, r0	; 63
    6522:	cd bf       	out	0x3d, r28	; 61
    6524:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6528:	8a 30       	cpi	r24, 0x0A	; 10
    652a:	81 f0       	breq	.+32     	; 0x654c <main+0x39d8>
    652c:	18 f4       	brcc	.+6      	; 0x6534 <main+0x39c0>
    652e:	89 30       	cpi	r24, 0x09	; 9
    6530:	31 f0       	breq	.+12     	; 0x653e <main+0x39ca>
    6532:	20 c4       	rjmp	.+2112   	; 0x6d74 <main+0x4200>
    6534:	8b 30       	cpi	r24, 0x0B	; 11
    6536:	89 f0       	breq	.+34     	; 0x655a <main+0x39e6>
    6538:	8c 30       	cpi	r24, 0x0C	; 12
    653a:	b1 f0       	breq	.+44     	; 0x6568 <main+0x39f4>
    653c:	1b c4       	rjmp	.+2102   	; 0x6d74 <main+0x4200>
									case 9:dspCursor = 1; dspCursorChr = '>';break;
    653e:	81 e0       	ldi	r24, 0x01	; 1
    6540:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6544:	8e e3       	ldi	r24, 0x3E	; 62
    6546:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    654a:	14 c4       	rjmp	.+2088   	; 0x6d74 <main+0x4200>
									case 10:dspCursor = 10; dspCursorChr = '>';break;
    654c:	8a e0       	ldi	r24, 0x0A	; 10
    654e:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6552:	8e e3       	ldi	r24, 0x3E	; 62
    6554:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6558:	0d c4       	rjmp	.+2074   	; 0x6d74 <main+0x4200>
									case 11:dspCursor = 26; dspCursorChr = '>';break;
    655a:	8a e1       	ldi	r24, 0x1A	; 26
    655c:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6560:	8e e3       	ldi	r24, 0x3E	; 62
    6562:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6566:	06 c4       	rjmp	.+2060   	; 0x6d74 <main+0x4200>
									case 12:dspCursor = 17; dspCursorChr = '>';break;
    6568:	81 e1       	ldi	r24, 0x11	; 17
    656a:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    656e:	8e e3       	ldi	r24, 0x3E	; 62
    6570:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6574:	ff c3       	rjmp	.+2046   	; 0x6d74 <main+0x4200>
			//Stop at
			case 2:
			break;
			//CheckPoint
			case 3:
				if(submenu > 0){
    6576:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    657a:	88 23       	and	r24, r24
    657c:	09 f4       	brne	.+2      	; 0x6580 <main+0x3a0c>
    657e:	fa c3       	rjmp	.+2036   	; 0x6d74 <main+0x4200>
					sprintf(dspBuff[0], " CheckPoint: %d ", gpVar1);
    6580:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    6584:	1f 92       	push	r1
    6586:	8f 93       	push	r24
    6588:	81 e6       	ldi	r24, 0x61	; 97
    658a:	92 e0       	ldi	r25, 0x02	; 2
    658c:	9f 93       	push	r25
    658e:	8f 93       	push	r24
    6590:	83 ee       	ldi	r24, 0xE3	; 227
    6592:	93 e0       	ldi	r25, 0x03	; 3
    6594:	9f 93       	push	r25
    6596:	8f 93       	push	r24
    6598:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					sprintf(dspBuff[1], " Index: %d ", checkPoint[gpVar1]);
    659c:	e0 91 78 04 	lds	r30, 0x0478	; 0x800478 <_ZL6gpVar1>
    65a0:	f0 e0       	ldi	r31, 0x00	; 0
    65a2:	ea 5a       	subi	r30, 0xAA	; 170
    65a4:	fb 4f       	sbci	r31, 0xFB	; 251
    65a6:	80 81       	ld	r24, Z
    65a8:	1f 92       	push	r1
    65aa:	8f 93       	push	r24
    65ac:	82 e7       	ldi	r24, 0x72	; 114
    65ae:	92 e0       	ldi	r25, 0x02	; 2
    65b0:	9f 93       	push	r25
    65b2:	8f 93       	push	r24
    65b4:	87 ef       	ldi	r24, 0xF7	; 247
    65b6:	93 e0       	ldi	r25, 0x03	; 3
    65b8:	9f 93       	push	r25
    65ba:	8f 93       	push	r24
    65bc:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					switch(submenu){
    65c0:	0f b6       	in	r0, 0x3f	; 63
    65c2:	f8 94       	cli
    65c4:	de bf       	out	0x3e, r29	; 62
    65c6:	0f be       	out	0x3f, r0	; 63
    65c8:	cd bf       	out	0x3d, r28	; 61
    65ca:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    65ce:	81 30       	cpi	r24, 0x01	; 1
    65d0:	19 f0       	breq	.+6      	; 0x65d8 <main+0x3a64>
    65d2:	82 30       	cpi	r24, 0x02	; 2
    65d4:	41 f0       	breq	.+16     	; 0x65e6 <main+0x3a72>
    65d6:	ce c3       	rjmp	.+1948   	; 0x6d74 <main+0x4200>
						case 1:dspCursor = 1; dspCursorChr = '>';break;
    65d8:	81 e0       	ldi	r24, 0x01	; 1
    65da:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    65de:	8e e3       	ldi	r24, 0x3E	; 62
    65e0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    65e4:	c7 c3       	rjmp	.+1934   	; 0x6d74 <main+0x4200>
						case 2:dspCursor = 17; dspCursorChr = '>';break;
    65e6:	81 e1       	ldi	r24, 0x11	; 17
    65e8:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    65ec:	8e e3       	ldi	r24, 0x3E	; 62
    65ee:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    65f2:	c0 c3       	rjmp	.+1920   	; 0x6d74 <main+0x4200>
					}
				}
			break;
			//PD
			case 4:
				if(submenu > 0){
    65f4:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    65f8:	88 23       	and	r24, r24
    65fa:	09 f4       	brne	.+2      	; 0x65fe <main+0x3a8a>
    65fc:	bb c3       	rjmp	.+1910   	; 0x6d74 <main+0x4200>
					strcpy_P(strBuff, pidModeStr[PDMnow[2]]);
    65fe:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <_ZL6PDMnow+0x2>
    6602:	70 e0       	ldi	r23, 0x00	; 0
    6604:	66 0f       	add	r22, r22
    6606:	77 1f       	adc	r23, r23
    6608:	66 0f       	add	r22, r22
    660a:	77 1f       	adc	r23, r23
    660c:	69 53       	subi	r22, 0x39	; 57
    660e:	7e 4f       	sbci	r23, 0xFE	; 254
    6610:	8f ec       	ldi	r24, 0xCF	; 207
    6612:	93 e0       	ldi	r25, 0x03	; 3
    6614:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
					sprintf(dspBuff[0], " Kp%-3d    Kd%d ", PDMnow[0], PDMnow[1]);
    6618:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <_ZL6PDMnow+0x1>
    661c:	1f 92       	push	r1
    661e:	8f 93       	push	r24
    6620:	e1 e5       	ldi	r30, 0x51	; 81
    6622:	f4 e0       	ldi	r31, 0x04	; 4
    6624:	80 81       	ld	r24, Z
    6626:	1f 92       	push	r1
    6628:	8f 93       	push	r24
    662a:	8e e7       	ldi	r24, 0x7E	; 126
    662c:	92 e0       	ldi	r25, 0x02	; 2
    662e:	9f 93       	push	r25
    6630:	8f 93       	push	r24
    6632:	83 ee       	ldi	r24, 0xE3	; 227
    6634:	93 e0       	ldi	r25, 0x03	; 3
    6636:	9f 93       	push	r25
    6638:	8f 93       	push	r24
    663a:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					if(PDMsel == 0){sprintf(dspBuff[1], " V%-3d     %s ", scanVel, strBuff);}
    663e:	0f b6       	in	r0, 0x3f	; 63
    6640:	f8 94       	cli
    6642:	de bf       	out	0x3e, r29	; 62
    6644:	0f be       	out	0x3f, r0	; 63
    6646:	cd bf       	out	0x3d, r28	; 61
    6648:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <_ZL6PDMsel>
    664c:	81 11       	cpse	r24, r1
    664e:	18 c0       	rjmp	.+48     	; 0x6680 <main+0x3b0c>
    6650:	8f ec       	ldi	r24, 0xCF	; 207
    6652:	93 e0       	ldi	r25, 0x03	; 3
    6654:	9f 93       	push	r25
    6656:	8f 93       	push	r24
    6658:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <_ZL7scanVel>
    665c:	1f 92       	push	r1
    665e:	8f 93       	push	r24
    6660:	82 e5       	ldi	r24, 0x52	; 82
    6662:	92 e0       	ldi	r25, 0x02	; 2
    6664:	9f 93       	push	r25
    6666:	8f 93       	push	r24
    6668:	87 ef       	ldi	r24, 0xF7	; 247
    666a:	93 e0       	ldi	r25, 0x03	; 3
    666c:	9f 93       	push	r25
    666e:	8f 93       	push	r24
    6670:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6674:	0f b6       	in	r0, 0x3f	; 63
    6676:	f8 94       	cli
    6678:	de bf       	out	0x3e, r29	; 62
    667a:	0f be       	out	0x3f, r0	; 63
    667c:	cd bf       	out	0x3d, r28	; 61
    667e:	14 c0       	rjmp	.+40     	; 0x66a8 <main+0x3b34>
					else{sprintf(dspBuff[1], "          %s ", strBuff);}
    6680:	8f ec       	ldi	r24, 0xCF	; 207
    6682:	93 e0       	ldi	r25, 0x03	; 3
    6684:	9f 93       	push	r25
    6686:	8f 93       	push	r24
    6688:	8f e8       	ldi	r24, 0x8F	; 143
    668a:	92 e0       	ldi	r25, 0x02	; 2
    668c:	9f 93       	push	r25
    668e:	8f 93       	push	r24
    6690:	87 ef       	ldi	r24, 0xF7	; 247
    6692:	93 e0       	ldi	r25, 0x03	; 3
    6694:	9f 93       	push	r25
    6696:	8f 93       	push	r24
    6698:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    669c:	0f 90       	pop	r0
    669e:	0f 90       	pop	r0
    66a0:	0f 90       	pop	r0
    66a2:	0f 90       	pop	r0
    66a4:	0f 90       	pop	r0
    66a6:	0f 90       	pop	r0
					switch(submenu){
    66a8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    66ac:	82 30       	cpi	r24, 0x02	; 2
    66ae:	81 f0       	breq	.+32     	; 0x66d0 <main+0x3b5c>
    66b0:	18 f4       	brcc	.+6      	; 0x66b8 <main+0x3b44>
    66b2:	81 30       	cpi	r24, 0x01	; 1
    66b4:	31 f0       	breq	.+12     	; 0x66c2 <main+0x3b4e>
    66b6:	5e c3       	rjmp	.+1724   	; 0x6d74 <main+0x4200>
    66b8:	83 30       	cpi	r24, 0x03	; 3
    66ba:	89 f0       	breq	.+34     	; 0x66de <main+0x3b6a>
    66bc:	84 30       	cpi	r24, 0x04	; 4
    66be:	b1 f0       	breq	.+44     	; 0x66ec <main+0x3b78>
    66c0:	59 c3       	rjmp	.+1714   	; 0x6d74 <main+0x4200>
						case 1:dspCursor = 1; dspCursorChr = '>';break;
    66c2:	81 e0       	ldi	r24, 0x01	; 1
    66c4:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    66c8:	8e e3       	ldi	r24, 0x3E	; 62
    66ca:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    66ce:	52 c3       	rjmp	.+1700   	; 0x6d74 <main+0x4200>
						case 2:dspCursor = 10; dspCursorChr = '>';break;
    66d0:	8a e0       	ldi	r24, 0x0A	; 10
    66d2:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    66d6:	8e e3       	ldi	r24, 0x3E	; 62
    66d8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    66dc:	4b c3       	rjmp	.+1686   	; 0x6d74 <main+0x4200>
						case 3:dspCursor = 26; dspCursorChr = '>';break;
    66de:	8a e1       	ldi	r24, 0x1A	; 26
    66e0:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    66e4:	8e e3       	ldi	r24, 0x3E	; 62
    66e6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    66ea:	44 c3       	rjmp	.+1672   	; 0x6d74 <main+0x4200>
						case 4:dspCursor = 17; dspCursorChr = '>';break;
    66ec:	81 e1       	ldi	r24, 0x11	; 17
    66ee:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    66f2:	8e e3       	ldi	r24, 0x3E	; 62
    66f4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    66f8:	3d c3       	rjmp	.+1658   	; 0x6d74 <main+0x4200>
					}
				}
			break;
			//Sensor
			case 5:
				if(submenu > 0){
    66fa:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    66fe:	88 23       	and	r24, r24
    6700:	09 f4       	brne	.+2      	; 0x6704 <main+0x3b90>
    6702:	38 c3       	rjmp	.+1648   	; 0x6d74 <main+0x4200>
					if(cal > 0){
    6704:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    6708:	88 23       	and	r24, r24
    670a:	09 f4       	brne	.+2      	; 0x670e <main+0x3b9a>
    670c:	73 c0       	rjmp	.+230    	; 0x67f4 <main+0x3c80>
    670e:	6a ea       	ldi	r22, 0xAA	; 170
    6710:	74 e0       	ldi	r23, 0x04	; 4
    6712:	d1 2c       	mov	r13, r1
						for(uint8_t i=0;i<14;i++){
							LCD.Cursor(1+i,0);
							BarGraph((Sens.ResultRaw[i]-Sens.ResultLow)*9/(Line.Threshold*1.7));
    6714:	7b 01       	movw	r14, r22
    6716:	0d e8       	ldi	r16, 0x8D	; 141
    6718:	14 e0       	ldi	r17, 0x04	; 4
    671a:	7d 83       	std	Y+5, r23	; 0x05
    671c:	6c 83       	std	Y+4, r22	; 0x04
			//Sensor
			case 5:
				if(submenu > 0){
					if(cal > 0){
						for(uint8_t i=0;i<14;i++){
							LCD.Cursor(1+i,0);
    671e:	d3 94       	inc	r13
    6720:	40 e0       	ldi	r20, 0x00	; 0
    6722:	6d 2d       	mov	r22, r13
    6724:	89 e0       	ldi	r24, 0x09	; 9
    6726:	95 e0       	ldi	r25, 0x05	; 5
    6728:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
							BarGraph((Sens.ResultRaw[i]-Sens.ResultLow)*9/(Line.Threshold*1.7));
    672c:	ec 81       	ldd	r30, Y+4	; 0x04
    672e:	fd 81       	ldd	r31, Y+5	; 0x05
    6730:	81 91       	ld	r24, Z+
    6732:	91 91       	ld	r25, Z+
    6734:	fd 83       	std	Y+5, r31	; 0x05
    6736:	ec 83       	std	Y+4, r30	; 0x04
    6738:	f7 01       	movw	r30, r14
    673a:	24 8d       	ldd	r18, Z+28	; 0x1c
    673c:	35 8d       	ldd	r19, Z+29	; 0x1d
    673e:	82 1b       	sub	r24, r18
    6740:	93 0b       	sbc	r25, r19
    6742:	bc 01       	movw	r22, r24
    6744:	66 0f       	add	r22, r22
    6746:	77 1f       	adc	r23, r23
    6748:	66 0f       	add	r22, r22
    674a:	77 1f       	adc	r23, r23
    674c:	66 0f       	add	r22, r22
    674e:	77 1f       	adc	r23, r23
    6750:	68 0f       	add	r22, r24
    6752:	79 1f       	adc	r23, r25
    6754:	80 e0       	ldi	r24, 0x00	; 0
    6756:	90 e0       	ldi	r25, 0x00	; 0
    6758:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
    675c:	4b 01       	movw	r8, r22
    675e:	5c 01       	movw	r10, r24
    6760:	f8 01       	movw	r30, r16
    6762:	62 81       	ldd	r22, Z+2	; 0x02
    6764:	73 81       	ldd	r23, Z+3	; 0x03
    6766:	80 e0       	ldi	r24, 0x00	; 0
    6768:	90 e0       	ldi	r25, 0x00	; 0
    676a:	0e 94 bf 39 	call	0x737e	; 0x737e <__floatunsisf>
    676e:	2a e9       	ldi	r18, 0x9A	; 154
    6770:	39 e9       	ldi	r19, 0x99	; 153
    6772:	49 ed       	ldi	r20, 0xD9	; 217
    6774:	5f e3       	ldi	r21, 0x3F	; 63
    6776:	0e 94 4d 3a 	call	0x749a	; 0x749a <__mulsf3>
    677a:	9b 01       	movw	r18, r22
    677c:	ac 01       	movw	r20, r24
    677e:	c5 01       	movw	r24, r10
    6780:	b4 01       	movw	r22, r8
    6782:	0e 94 17 39 	call	0x722e	; 0x722e <__divsf3>
    6786:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
    678a:	86 2f       	mov	r24, r22
    678c:	0e 94 b0 05 	call	0xb60	; 0xb60 <_ZL8BarGraphh>
			break;
			//Sensor
			case 5:
				if(submenu > 0){
					if(cal > 0){
						for(uint8_t i=0;i<14;i++){
    6790:	fe e0       	ldi	r31, 0x0E	; 14
    6792:	df 12       	cpse	r13, r31
    6794:	c4 cf       	rjmp	.-120    	; 0x671e <main+0x3baa>
							LCD.Cursor(1+i,0);
							BarGraph((Sens.ResultRaw[i]-Sens.ResultLow)*9/(Line.Threshold*1.7));
						}
						switch(cal){
    6796:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    679a:	81 30       	cpi	r24, 0x01	; 1
    679c:	19 f0       	breq	.+6      	; 0x67a4 <main+0x3c30>
    679e:	82 30       	cpi	r24, 0x02	; 2
    67a0:	e9 f0       	breq	.+58     	; 0x67dc <main+0x3c68>
    67a2:	25 c0       	rjmp	.+74     	; 0x67ee <main+0x3c7a>
							case 1:sprintf(dspBuff[1], "Cal  L%-4d H%d  ", sensLo, sensHi);break;
    67a4:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    67a8:	8f 93       	push	r24
    67aa:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <_ZL6sensHi>
    67ae:	8f 93       	push	r24
    67b0:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
    67b4:	8f 93       	push	r24
    67b6:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <_ZL6sensLo>
    67ba:	8f 93       	push	r24
    67bc:	8d e9       	ldi	r24, 0x9D	; 157
    67be:	92 e0       	ldi	r25, 0x02	; 2
    67c0:	9f 93       	push	r25
    67c2:	8f 93       	push	r24
    67c4:	87 ef       	ldi	r24, 0xF7	; 247
    67c6:	93 e0       	ldi	r25, 0x03	; 3
    67c8:	9f 93       	push	r25
    67ca:	8f 93       	push	r24
    67cc:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    67d0:	0f b6       	in	r0, 0x3f	; 63
    67d2:	f8 94       	cli
    67d4:	de bf       	out	0x3e, r29	; 62
    67d6:	0f be       	out	0x3f, r0	; 63
    67d8:	cd bf       	out	0x3d, r28	; 61
    67da:	09 c0       	rjmp	.+18     	; 0x67ee <main+0x3c7a>
							case 2:sprintf(dspBuff[1], "Offs. White     ");break;
    67dc:	81 e1       	ldi	r24, 0x11	; 17
    67de:	ee ea       	ldi	r30, 0xAE	; 174
    67e0:	f2 e0       	ldi	r31, 0x02	; 2
    67e2:	a7 ef       	ldi	r26, 0xF7	; 247
    67e4:	b3 e0       	ldi	r27, 0x03	; 3
    67e6:	01 90       	ld	r0, Z+
    67e8:	0d 92       	st	X+, r0
    67ea:	8a 95       	dec	r24
    67ec:	e1 f7       	brne	.-8      	; 0x67e6 <main+0x3c72>
						}
						dspCursor = 0;
    67ee:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <_ZL9dspCursor>
    67f2:	c0 c2       	rjmp	.+1408   	; 0x6d74 <main+0x4200>
					}
					else{
						strcpy_P(strBuff, offOnStr[useATC]);
    67f4:	60 91 ca 03 	lds	r22, 0x03CA	; 0x8003ca <_ZL6useATC>
    67f8:	70 e0       	ldi	r23, 0x00	; 0
    67fa:	66 0f       	add	r22, r22
    67fc:	77 1f       	adc	r23, r23
    67fe:	66 0f       	add	r22, r22
    6800:	77 1f       	adc	r23, r23
    6802:	6f 55       	subi	r22, 0x5F	; 95
    6804:	7e 4f       	sbci	r23, 0xFE	; 254
    6806:	8f ec       	ldi	r24, 0xCF	; 207
    6808:	93 e0       	ldi	r25, 0x03	; 3
    680a:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
						sprintf(dspBuff[0], " ATC %s ", strBuff);
    680e:	8f ec       	ldi	r24, 0xCF	; 207
    6810:	93 e0       	ldi	r25, 0x03	; 3
    6812:	9f 93       	push	r25
    6814:	8f 93       	push	r24
    6816:	8f eb       	ldi	r24, 0xBF	; 191
    6818:	92 e0       	ldi	r25, 0x02	; 2
    681a:	9f 93       	push	r25
    681c:	8f 93       	push	r24
    681e:	83 ee       	ldi	r24, 0xE3	; 227
    6820:	93 e0       	ldi	r25, 0x03	; 3
    6822:	9f 93       	push	r25
    6824:	8f 93       	push	r24
    6826:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
						if(useATC){sprintf(dspBuff[1], " DM:%-4d TH:%d ", sensLo, sensHi);}
    682a:	0f 90       	pop	r0
    682c:	0f 90       	pop	r0
    682e:	0f 90       	pop	r0
    6830:	0f 90       	pop	r0
    6832:	0f 90       	pop	r0
    6834:	0f 90       	pop	r0
    6836:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ZL6useATC>
    683a:	88 23       	and	r24, r24
    683c:	e1 f0       	breq	.+56     	; 0x6876 <main+0x3d02>
    683e:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <_ZL6sensHi+0x1>
    6842:	8f 93       	push	r24
    6844:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <_ZL6sensHi>
    6848:	8f 93       	push	r24
    684a:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <_ZL6sensLo+0x1>
    684e:	8f 93       	push	r24
    6850:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <_ZL6sensLo>
    6854:	8f 93       	push	r24
    6856:	88 ec       	ldi	r24, 0xC8	; 200
    6858:	92 e0       	ldi	r25, 0x02	; 2
    685a:	9f 93       	push	r25
    685c:	8f 93       	push	r24
    685e:	87 ef       	ldi	r24, 0xF7	; 247
    6860:	93 e0       	ldi	r25, 0x03	; 3
    6862:	9f 93       	push	r25
    6864:	8f 93       	push	r24
    6866:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    686a:	0f b6       	in	r0, 0x3f	; 63
    686c:	f8 94       	cli
    686e:	de bf       	out	0x3e, r29	; 62
    6870:	0f be       	out	0x3f, r0	; 63
    6872:	cd bf       	out	0x3d, r28	; 61
    6874:	09 c0       	rjmp	.+18     	; 0x6888 <main+0x3d14>
						else{sprintf(dspBuff[1], " Calibrate      ");}
    6876:	81 e1       	ldi	r24, 0x11	; 17
    6878:	e8 ed       	ldi	r30, 0xD8	; 216
    687a:	f2 e0       	ldi	r31, 0x02	; 2
    687c:	a7 ef       	ldi	r26, 0xF7	; 247
    687e:	b3 e0       	ldi	r27, 0x03	; 3
    6880:	01 90       	ld	r0, Z+
    6882:	0d 92       	st	X+, r0
    6884:	8a 95       	dec	r24
    6886:	e1 f7       	brne	.-8      	; 0x6880 <main+0x3d0c>
						switch(submenu){
    6888:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    688c:	82 30       	cpi	r24, 0x02	; 2
    688e:	59 f0       	breq	.+22     	; 0x68a6 <main+0x3d32>
    6890:	83 30       	cpi	r24, 0x03	; 3
    6892:	81 f0       	breq	.+32     	; 0x68b4 <main+0x3d40>
    6894:	81 30       	cpi	r24, 0x01	; 1
    6896:	09 f0       	breq	.+2      	; 0x689a <main+0x3d26>
    6898:	6d c2       	rjmp	.+1242   	; 0x6d74 <main+0x4200>
							case 1:dspCursor = 1; dspCursorChr = '>';break;
    689a:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    689e:	8e e3       	ldi	r24, 0x3E	; 62
    68a0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    68a4:	67 c2       	rjmp	.+1230   	; 0x6d74 <main+0x4200>
							case 2:dspCursor = 17; dspCursorChr = '>';break;
    68a6:	81 e1       	ldi	r24, 0x11	; 17
    68a8:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    68ac:	8e e3       	ldi	r24, 0x3E	; 62
    68ae:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    68b2:	60 c2       	rjmp	.+1216   	; 0x6d74 <main+0x4200>
							case 3:dspCursor = 25; dspCursorChr = '>';break;
    68b4:	89 e1       	ldi	r24, 0x19	; 25
    68b6:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    68ba:	8e e3       	ldi	r24, 0x3E	; 62
    68bc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    68c0:	59 c2       	rjmp	.+1202   	; 0x6d74 <main+0x4200>
					}
				}
			break;
			//Motor Offset
			case 6:
				if(submenu > 0){
    68c2:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    68c6:	88 23       	and	r24, r24
    68c8:	09 f4       	brne	.+2      	; 0x68cc <main+0x3d58>
    68ca:	54 c2       	rjmp	.+1192   	; 0x6d74 <main+0x4200>
					sprintf(dspBuff[0], " Offs.L: %d.%d%d ", mtrOffsL/100, mtrOffsL/10%10, mtrOffsL%10);
    68cc:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <_ZL8mtrOffsL>
    68d0:	5d ec       	ldi	r21, 0xCD	; 205
    68d2:	85 9f       	mul	r24, r21
    68d4:	91 2d       	mov	r25, r1
    68d6:	11 24       	eor	r1, r1
    68d8:	96 95       	lsr	r25
    68da:	96 95       	lsr	r25
    68dc:	96 95       	lsr	r25
    68de:	39 2f       	mov	r19, r25
    68e0:	33 0f       	add	r19, r19
    68e2:	23 2f       	mov	r18, r19
    68e4:	22 0f       	add	r18, r18
    68e6:	22 0f       	add	r18, r18
    68e8:	23 0f       	add	r18, r19
    68ea:	68 2f       	mov	r22, r24
    68ec:	62 1b       	sub	r22, r18
    68ee:	1f 92       	push	r1
    68f0:	6f 93       	push	r22
    68f2:	95 9f       	mul	r25, r21
    68f4:	21 2d       	mov	r18, r1
    68f6:	11 24       	eor	r1, r1
    68f8:	26 95       	lsr	r18
    68fa:	26 95       	lsr	r18
    68fc:	26 95       	lsr	r18
    68fe:	22 0f       	add	r18, r18
    6900:	32 2f       	mov	r19, r18
    6902:	33 0f       	add	r19, r19
    6904:	33 0f       	add	r19, r19
    6906:	23 0f       	add	r18, r19
    6908:	92 1b       	sub	r25, r18
    690a:	1f 92       	push	r1
    690c:	9f 93       	push	r25
    690e:	79 e2       	ldi	r23, 0x29	; 41
    6910:	87 9f       	mul	r24, r23
    6912:	81 2d       	mov	r24, r1
    6914:	11 24       	eor	r1, r1
    6916:	82 95       	swap	r24
    6918:	8f 70       	andi	r24, 0x0F	; 15
    691a:	1f 92       	push	r1
    691c:	8f 93       	push	r24
    691e:	89 ee       	ldi	r24, 0xE9	; 233
    6920:	92 e0       	ldi	r25, 0x02	; 2
    6922:	9f 93       	push	r25
    6924:	8f 93       	push	r24
    6926:	83 ee       	ldi	r24, 0xE3	; 227
    6928:	93 e0       	ldi	r25, 0x03	; 3
    692a:	9f 93       	push	r25
    692c:	8f 93       	push	r24
    692e:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					sprintf(dspBuff[1], " Offs.R: %d.%d%d ", mtrOffsR/100, mtrOffsR/10%10, mtrOffsR%10);
    6932:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <_ZL8mtrOffsR>
    6936:	8d ec       	ldi	r24, 0xCD	; 205
    6938:	98 9f       	mul	r25, r24
    693a:	21 2d       	mov	r18, r1
    693c:	11 24       	eor	r1, r1
    693e:	26 95       	lsr	r18
    6940:	26 95       	lsr	r18
    6942:	26 95       	lsr	r18
    6944:	32 2f       	mov	r19, r18
    6946:	33 0f       	add	r19, r19
    6948:	83 2f       	mov	r24, r19
    694a:	88 0f       	add	r24, r24
    694c:	88 0f       	add	r24, r24
    694e:	83 0f       	add	r24, r19
    6950:	e9 2f       	mov	r30, r25
    6952:	e8 1b       	sub	r30, r24
    6954:	1f 92       	push	r1
    6956:	ef 93       	push	r30
    6958:	fd ec       	ldi	r31, 0xCD	; 205
    695a:	2f 9f       	mul	r18, r31
    695c:	81 2d       	mov	r24, r1
    695e:	11 24       	eor	r1, r1
    6960:	86 95       	lsr	r24
    6962:	86 95       	lsr	r24
    6964:	86 95       	lsr	r24
    6966:	88 0f       	add	r24, r24
    6968:	38 2f       	mov	r19, r24
    696a:	33 0f       	add	r19, r19
    696c:	33 0f       	add	r19, r19
    696e:	83 0f       	add	r24, r19
    6970:	28 1b       	sub	r18, r24
    6972:	1f 92       	push	r1
    6974:	2f 93       	push	r18
    6976:	29 e2       	ldi	r18, 0x29	; 41
    6978:	92 9f       	mul	r25, r18
    697a:	91 2d       	mov	r25, r1
    697c:	11 24       	eor	r1, r1
    697e:	92 95       	swap	r25
    6980:	9f 70       	andi	r25, 0x0F	; 15
    6982:	1f 92       	push	r1
    6984:	9f 93       	push	r25
    6986:	8b ef       	ldi	r24, 0xFB	; 251
    6988:	92 e0       	ldi	r25, 0x02	; 2
    698a:	9f 93       	push	r25
    698c:	8f 93       	push	r24
    698e:	87 ef       	ldi	r24, 0xF7	; 247
    6990:	93 e0       	ldi	r25, 0x03	; 3
    6992:	9f 93       	push	r25
    6994:	8f 93       	push	r24
    6996:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					switch(submenu){
    699a:	0f b6       	in	r0, 0x3f	; 63
    699c:	f8 94       	cli
    699e:	de bf       	out	0x3e, r29	; 62
    69a0:	0f be       	out	0x3f, r0	; 63
    69a2:	cd bf       	out	0x3d, r28	; 61
    69a4:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    69a8:	81 30       	cpi	r24, 0x01	; 1
    69aa:	19 f0       	breq	.+6      	; 0x69b2 <main+0x3e3e>
    69ac:	82 30       	cpi	r24, 0x02	; 2
    69ae:	41 f0       	breq	.+16     	; 0x69c0 <main+0x3e4c>
    69b0:	e1 c1       	rjmp	.+962    	; 0x6d74 <main+0x4200>
						case 1:dspCursor = 1; dspCursorChr = '>';break;
    69b2:	81 e0       	ldi	r24, 0x01	; 1
    69b4:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    69b8:	8e e3       	ldi	r24, 0x3E	; 62
    69ba:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    69be:	da c1       	rjmp	.+948    	; 0x6d74 <main+0x4200>
						case 2:dspCursor = 17; dspCursorChr = '>';break;
    69c0:	81 e1       	ldi	r24, 0x11	; 17
    69c2:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    69c6:	8e e3       	ldi	r24, 0x3E	; 62
    69c8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    69cc:	d3 c1       	rjmp	.+934    	; 0x6d74 <main+0x4200>
					}
				}
			break;
			//Selftest
			case 7:
				if(submenu > 0){
    69ce:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    69d2:	88 23       	and	r24, r24
    69d4:	09 f4       	brne	.+2      	; 0x69d8 <main+0x3e64>
    69d6:	ce c1       	rjmp	.+924    	; 0x6d74 <main+0x4200>
					strcpy_P(strBuff, stopRunStr[testPD]);
    69d8:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_ZL6testPD>
    69dc:	90 e0       	ldi	r25, 0x00	; 0
    69de:	bc 01       	movw	r22, r24
    69e0:	66 0f       	add	r22, r22
    69e2:	77 1f       	adc	r23, r23
    69e4:	66 0f       	add	r22, r22
    69e6:	77 1f       	adc	r23, r23
    69e8:	86 0f       	add	r24, r22
    69ea:	97 1f       	adc	r25, r23
    69ec:	bc 01       	movw	r22, r24
    69ee:	61 57       	subi	r22, 0x71	; 113
    69f0:	7e 4f       	sbci	r23, 0xFE	; 254
    69f2:	8f ec       	ldi	r24, 0xCF	; 207
    69f4:	93 e0       	ldi	r25, 0x03	; 3
    69f6:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
					sprintf(dspBuff[0], " Test PD %s ", strBuff);
    69fa:	6f ec       	ldi	r22, 0xCF	; 207
    69fc:	73 e0       	ldi	r23, 0x03	; 3
    69fe:	7f 93       	push	r23
    6a00:	6f 93       	push	r22
    6a02:	8d e0       	ldi	r24, 0x0D	; 13
    6a04:	93 e0       	ldi	r25, 0x03	; 3
    6a06:	9f 93       	push	r25
    6a08:	8f 93       	push	r24
    6a0a:	83 ee       	ldi	r24, 0xE3	; 227
    6a0c:	93 e0       	ldi	r25, 0x03	; 3
    6a0e:	9f 93       	push	r25
    6a10:	8f 93       	push	r24
    6a12:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					strcpy_P(strBuff, idxCmdStr[5-gpVar1]);
    6a16:	20 91 78 04 	lds	r18, 0x0478	; 0x800478 <_ZL6gpVar1>
    6a1a:	85 e0       	ldi	r24, 0x05	; 5
    6a1c:	90 e0       	ldi	r25, 0x00	; 0
    6a1e:	82 1b       	sub	r24, r18
    6a20:	91 09       	sbc	r25, r1
    6a22:	bc 01       	movw	r22, r24
    6a24:	66 0f       	add	r22, r22
    6a26:	77 1f       	adc	r23, r23
    6a28:	68 0f       	add	r22, r24
    6a2a:	79 1f       	adc	r23, r25
    6a2c:	66 0f       	add	r22, r22
    6a2e:	77 1f       	adc	r23, r23
    6a30:	6b 5e       	subi	r22, 0xEB	; 235
    6a32:	7d 4f       	sbci	r23, 0xFD	; 253
    6a34:	8f ec       	ldi	r24, 0xCF	; 207
    6a36:	93 e0       	ldi	r25, 0x03	; 3
    6a38:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
					sprintf(dspBuff[1], " Motor: %s ", strBuff);
    6a3c:	ef ec       	ldi	r30, 0xCF	; 207
    6a3e:	f3 e0       	ldi	r31, 0x03	; 3
    6a40:	ff 93       	push	r31
    6a42:	ef 93       	push	r30
    6a44:	8a e1       	ldi	r24, 0x1A	; 26
    6a46:	93 e0       	ldi	r25, 0x03	; 3
    6a48:	9f 93       	push	r25
    6a4a:	8f 93       	push	r24
    6a4c:	87 ef       	ldi	r24, 0xF7	; 247
    6a4e:	93 e0       	ldi	r25, 0x03	; 3
    6a50:	9f 93       	push	r25
    6a52:	8f 93       	push	r24
    6a54:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					switch(submenu){
    6a58:	0f b6       	in	r0, 0x3f	; 63
    6a5a:	f8 94       	cli
    6a5c:	de bf       	out	0x3e, r29	; 62
    6a5e:	0f be       	out	0x3f, r0	; 63
    6a60:	cd bf       	out	0x3d, r28	; 61
    6a62:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6a66:	81 30       	cpi	r24, 0x01	; 1
    6a68:	19 f0       	breq	.+6      	; 0x6a70 <main+0x3efc>
    6a6a:	82 30       	cpi	r24, 0x02	; 2
    6a6c:	41 f0       	breq	.+16     	; 0x6a7e <main+0x3f0a>
    6a6e:	82 c1       	rjmp	.+772    	; 0x6d74 <main+0x4200>
						case 1:dspCursor = 1; dspCursorChr = '>';break;
    6a70:	81 e0       	ldi	r24, 0x01	; 1
    6a72:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6a76:	8e e3       	ldi	r24, 0x3E	; 62
    6a78:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6a7c:	7b c1       	rjmp	.+758    	; 0x6d74 <main+0x4200>
						case 2:dspCursor = 17; dspCursorChr = '>';break;
    6a7e:	81 e1       	ldi	r24, 0x11	; 17
    6a80:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6a84:	8e e3       	ldi	r24, 0x3E	; 62
    6a86:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6a8a:	74 c1       	rjmp	.+744    	; 0x6d74 <main+0x4200>
					}
				}
			break;
			//Prescalers
			case 8:
				if(submenu > 0){
    6a8c:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6a90:	88 23       	and	r24, r24
    6a92:	09 f4       	brne	.+2      	; 0x6a96 <main+0x3f22>
    6a94:	6f c1       	rjmp	.+734    	; 0x6d74 <main+0x4200>
					sprintf(dspBuff[0], " T/Div: %dms ", prescT);
    6a96:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <_ZL6prescT>
    6a9a:	1f 92       	push	r1
    6a9c:	8f 93       	push	r24
    6a9e:	86 e2       	ldi	r24, 0x26	; 38
    6aa0:	93 e0       	ldi	r25, 0x03	; 3
    6aa2:	9f 93       	push	r25
    6aa4:	8f 93       	push	r24
    6aa6:	83 ee       	ldi	r24, 0xE3	; 227
    6aa8:	93 e0       	ldi	r25, 0x03	; 3
    6aaa:	9f 93       	push	r25
    6aac:	8f 93       	push	r24
    6aae:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					sprintf(dspBuff[1], " D/Div: %dms ", prescD);
    6ab2:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <_ZL6prescD>
    6ab6:	1f 92       	push	r1
    6ab8:	8f 93       	push	r24
    6aba:	84 e3       	ldi	r24, 0x34	; 52
    6abc:	93 e0       	ldi	r25, 0x03	; 3
    6abe:	9f 93       	push	r25
    6ac0:	8f 93       	push	r24
    6ac2:	87 ef       	ldi	r24, 0xF7	; 247
    6ac4:	93 e0       	ldi	r25, 0x03	; 3
    6ac6:	9f 93       	push	r25
    6ac8:	8f 93       	push	r24
    6aca:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
					switch(submenu){
    6ace:	0f b6       	in	r0, 0x3f	; 63
    6ad0:	f8 94       	cli
    6ad2:	de bf       	out	0x3e, r29	; 62
    6ad4:	0f be       	out	0x3f, r0	; 63
    6ad6:	cd bf       	out	0x3d, r28	; 61
    6ad8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6adc:	81 30       	cpi	r24, 0x01	; 1
    6ade:	19 f0       	breq	.+6      	; 0x6ae6 <main+0x3f72>
    6ae0:	82 30       	cpi	r24, 0x02	; 2
    6ae2:	41 f0       	breq	.+16     	; 0x6af4 <main+0x3f80>
    6ae4:	47 c1       	rjmp	.+654    	; 0x6d74 <main+0x4200>
						case 1:dspCursor = 1; dspCursorChr = '>';break;
    6ae6:	81 e0       	ldi	r24, 0x01	; 1
    6ae8:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6aec:	8e e3       	ldi	r24, 0x3E	; 62
    6aee:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6af2:	40 c1       	rjmp	.+640    	; 0x6d74 <main+0x4200>
						case 2:dspCursor = 17; dspCursorChr = '>';break;
    6af4:	81 e1       	ldi	r24, 0x11	; 17
    6af6:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
    6afa:	8e e3       	ldi	r24, 0x3E	; 62
    6afc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
    6b00:	39 c1       	rjmp	.+626    	; 0x6d74 <main+0x4200>
					}
				}
			break;
			//Vbat
			case 9:
				if(submenu > 0){
    6b02:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6b06:	88 23       	and	r24, r24
    6b08:	09 f4       	brne	.+2      	; 0x6b0c <main+0x3f98>
    6b0a:	34 c1       	rjmp	.+616    	; 0x6d74 <main+0x4200>
					strcpy_P(dspBuff[0], aboutDisp[0]);
    6b0c:	68 ef       	ldi	r22, 0xF8	; 248
    6b0e:	72 e0       	ldi	r23, 0x02	; 2
    6b10:	83 ee       	ldi	r24, 0xE3	; 227
    6b12:	93 e0       	ldi	r25, 0x03	; 3
    6b14:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
					strcpy_P(dspBuff[1], aboutDisp[1]);
    6b18:	69 e0       	ldi	r22, 0x09	; 9
    6b1a:	73 e0       	ldi	r23, 0x03	; 3
    6b1c:	87 ef       	ldi	r24, 0xF7	; 247
    6b1e:	93 e0       	ldi	r25, 0x03	; 3
    6b20:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
					dspCursor = 0;
    6b24:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <_ZL9dspCursor>
    6b28:	25 c1       	rjmp	.+586    	; 0x6d74 <main+0x4200>
				}
			break;
			//Settings
			case 10:
				if(submenu > 0){
    6b2a:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6b2e:	88 23       	and	r24, r24
    6b30:	09 f4       	brne	.+2      	; 0x6b34 <main+0x3fc0>
    6b32:	20 c1       	rjmp	.+576    	; 0x6d74 <main+0x4200>
    6b34:	83 ee       	ldi	r24, 0xE3	; 227
    6b36:	93 e0       	ldi	r25, 0x03	; 3
				}
			break;
			//Sensor
			case 5:
				if(submenu > 0){
					if(cal > 0){
    6b38:	41 2c       	mov	r4, r1
						strcpy_P(strBuff, settStr[tmp]);
						switch(tmp){
							case 0:sprintf(dspBuff[i], "%s%dms ", strBuff, runDly*10);break;
							case 1:
								if(toutTime > 0){sprintf(dspBuff[i], "%s%d.%ds ", strBuff, toutTime/10, toutTime%10);}
								else{sprintf(dspBuff[i], "%sOFF ", strBuff);}		
    6b3a:	0f 2e       	mov	r0, r31
    6b3c:	f4 e5       	ldi	r31, 0x54	; 84
    6b3e:	af 2e       	mov	r10, r31
    6b40:	f3 e0       	ldi	r31, 0x03	; 3
    6b42:	bf 2e       	mov	r11, r31
    6b44:	f0 2d       	mov	r31, r0
						uint8_t tmp = submenu - (1 - i);
						strcpy_P(strBuff, settStr[tmp]);
						switch(tmp){
							case 0:sprintf(dspBuff[i], "%s%dms ", strBuff, runDly*10);break;
							case 1:
								if(toutTime > 0){sprintf(dspBuff[i], "%s%d.%ds ", strBuff, toutTime/10, toutTime%10);}
    6b46:	0f 2e       	mov	r0, r31
    6b48:	fd ec       	ldi	r31, 0xCD	; 205
    6b4a:	3f 2e       	mov	r3, r31
    6b4c:	f0 2d       	mov	r31, r0
    6b4e:	0f 2e       	mov	r0, r31
    6b50:	fa e4       	ldi	r31, 0x4A	; 74
    6b52:	cf 2e       	mov	r12, r31
    6b54:	f3 e0       	ldi	r31, 0x03	; 3
    6b56:	df 2e       	mov	r13, r31
    6b58:	f0 2d       	mov	r31, r0
							case 2:sprintf(dspBuff[i], "%s%dms ", strBuff, brakeTime);break;
							case 3:
								if(vVbatComp > 0){sprintf(dspBuff[i], "%s%d.%d ", strBuff, vVbatComp/10, vVbatComp%10);}
								else{sprintf(dspBuff[i], "%sOFF  ", strBuff);}	
							break;
							default:sprintf(dspBuff[i], "%s ", strBuff);break;
    6b5a:	0f 2e       	mov	r0, r31
    6b5c:	f9 e9       	ldi	r31, 0x99	; 153
    6b5e:	ef 2e       	mov	r14, r31
    6b60:	f2 e0       	ldi	r31, 0x02	; 2
    6b62:	ff 2e       	mov	r15, r31
    6b64:	f0 2d       	mov	r31, r0
								else{sprintf(dspBuff[i], "%sOFF ", strBuff);}		
							break;
							case 2:sprintf(dspBuff[i], "%s%dms ", strBuff, brakeTime);break;
							case 3:
								if(vVbatComp > 0){sprintf(dspBuff[i], "%s%d.%d ", strBuff, vVbatComp/10, vVbatComp%10);}
								else{sprintf(dspBuff[i], "%sOFF  ", strBuff);}	
    6b66:	0f 2e       	mov	r0, r31
    6b68:	f4 e6       	ldi	r31, 0x64	; 100
    6b6a:	8f 2e       	mov	r8, r31
    6b6c:	f3 e0       	ldi	r31, 0x03	; 3
    6b6e:	9f 2e       	mov	r9, r31
    6b70:	f0 2d       	mov	r31, r0
								if(toutTime > 0){sprintf(dspBuff[i], "%s%d.%ds ", strBuff, toutTime/10, toutTime%10);}
								else{sprintf(dspBuff[i], "%sOFF ", strBuff);}		
							break;
							case 2:sprintf(dspBuff[i], "%s%dms ", strBuff, brakeTime);break;
							case 3:
								if(vVbatComp > 0){sprintf(dspBuff[i], "%s%d.%d ", strBuff, vVbatComp/10, vVbatComp%10);}
    6b72:	0f 2e       	mov	r0, r31
    6b74:	fb e5       	ldi	r31, 0x5B	; 91
    6b76:	6f 2e       	mov	r6, r31
    6b78:	f3 e0       	ldi	r31, 0x03	; 3
    6b7a:	7f 2e       	mov	r7, r31
    6b7c:	f0 2d       	mov	r31, r0
    6b7e:	04 2d       	mov	r16, r4
    6b80:	9d 83       	std	Y+5, r25	; 0x05
    6b82:	8c 83       	std	Y+4, r24	; 0x04
			break;
			//Settings
			case 10:
				if(submenu > 0){
					for(uint8_t i = 0;i < 2;i ++){
						uint8_t tmp = submenu - (1 - i);
    6b84:	10 91 84 04 	lds	r17, 0x0484	; 0x800484 <_ZL7submenu>
    6b88:	11 50       	subi	r17, 0x01	; 1
    6b8a:	10 0f       	add	r17, r16
						strcpy_P(strBuff, settStr[tmp]);
    6b8c:	81 2f       	mov	r24, r17
    6b8e:	90 e0       	ldi	r25, 0x00	; 0
    6b90:	88 0f       	add	r24, r24
    6b92:	99 1f       	adc	r25, r25
    6b94:	bc 01       	movw	r22, r24
    6b96:	66 0f       	add	r22, r22
    6b98:	77 1f       	adc	r23, r23
    6b9a:	66 0f       	add	r22, r22
    6b9c:	77 1f       	adc	r23, r23
    6b9e:	66 0f       	add	r22, r22
    6ba0:	77 1f       	adc	r23, r23
    6ba2:	68 1b       	sub	r22, r24
    6ba4:	79 0b       	sbc	r23, r25
    6ba6:	61 53       	subi	r22, 0x31	; 49
    6ba8:	7e 4f       	sbci	r23, 0xFE	; 254
    6baa:	8f ec       	ldi	r24, 0xCF	; 207
    6bac:	93 e0       	ldi	r25, 0x03	; 3
    6bae:	0e 94 03 3b 	call	0x7606	; 0x7606 <strcpy_P>
						switch(tmp){
    6bb2:	11 30       	cpi	r17, 0x01	; 1
    6bb4:	61 f1       	breq	.+88     	; 0x6c0e <main+0x409a>
    6bb6:	38 f0       	brcs	.+14     	; 0x6bc6 <main+0x4052>
    6bb8:	12 30       	cpi	r17, 0x02	; 2
    6bba:	09 f4       	brne	.+2      	; 0x6bbe <main+0x404a>
    6bbc:	62 c0       	rjmp	.+196    	; 0x6c82 <main+0x410e>
    6bbe:	13 30       	cpi	r17, 0x03	; 3
    6bc0:	09 f4       	brne	.+2      	; 0x6bc4 <main+0x4050>
    6bc2:	77 c0       	rjmp	.+238    	; 0x6cb2 <main+0x413e>
    6bc4:	b0 c0       	rjmp	.+352    	; 0x6d26 <main+0x41b2>
							case 0:sprintf(dspBuff[i], "%s%dms ", strBuff, runDly*10);break;
    6bc6:	20 91 4c 04 	lds	r18, 0x044C	; 0x80044c <_ZL6runDly>
    6bca:	30 e0       	ldi	r19, 0x00	; 0
    6bcc:	c9 01       	movw	r24, r18
    6bce:	88 0f       	add	r24, r24
    6bd0:	99 1f       	adc	r25, r25
    6bd2:	22 0f       	add	r18, r18
    6bd4:	33 1f       	adc	r19, r19
    6bd6:	22 0f       	add	r18, r18
    6bd8:	33 1f       	adc	r19, r19
    6bda:	22 0f       	add	r18, r18
    6bdc:	33 1f       	adc	r19, r19
    6bde:	82 0f       	add	r24, r18
    6be0:	93 1f       	adc	r25, r19
    6be2:	9f 93       	push	r25
    6be4:	8f 93       	push	r24
    6be6:	8f ec       	ldi	r24, 0xCF	; 207
    6be8:	93 e0       	ldi	r25, 0x03	; 3
    6bea:	9f 93       	push	r25
    6bec:	8f 93       	push	r24
    6bee:	e2 e4       	ldi	r30, 0x42	; 66
    6bf0:	f3 e0       	ldi	r31, 0x03	; 3
    6bf2:	ff 93       	push	r31
    6bf4:	ef 93       	push	r30
    6bf6:	3d 81       	ldd	r19, Y+5	; 0x05
    6bf8:	3f 93       	push	r19
    6bfa:	4c 81       	ldd	r20, Y+4	; 0x04
    6bfc:	4f 93       	push	r20
    6bfe:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6c02:	0f b6       	in	r0, 0x3f	; 63
    6c04:	f8 94       	cli
    6c06:	de bf       	out	0x3e, r29	; 62
    6c08:	0f be       	out	0x3f, r0	; 63
    6c0a:	cd bf       	out	0x3d, r28	; 61
    6c0c:	9e c0       	rjmp	.+316    	; 0x6d4a <main+0x41d6>
							case 1:
								if(toutTime > 0){sprintf(dspBuff[i], "%s%d.%ds ", strBuff, toutTime/10, toutTime%10);}
    6c0e:	80 91 4b 04 	lds	r24, 0x044B	; 0x80044b <_ZL8toutTime>
    6c12:	88 23       	and	r24, r24
    6c14:	19 f1       	breq	.+70     	; 0x6c5c <main+0x40e8>
    6c16:	83 9d       	mul	r24, r3
    6c18:	91 2d       	mov	r25, r1
    6c1a:	11 24       	eor	r1, r1
    6c1c:	96 95       	lsr	r25
    6c1e:	96 95       	lsr	r25
    6c20:	96 95       	lsr	r25
    6c22:	39 2f       	mov	r19, r25
    6c24:	33 0f       	add	r19, r19
    6c26:	23 2f       	mov	r18, r19
    6c28:	22 0f       	add	r18, r18
    6c2a:	22 0f       	add	r18, r18
    6c2c:	23 0f       	add	r18, r19
    6c2e:	82 1b       	sub	r24, r18
    6c30:	1f 92       	push	r1
    6c32:	8f 93       	push	r24
    6c34:	1f 92       	push	r1
    6c36:	9f 93       	push	r25
    6c38:	8f ec       	ldi	r24, 0xCF	; 207
    6c3a:	93 e0       	ldi	r25, 0x03	; 3
    6c3c:	9f 93       	push	r25
    6c3e:	8f 93       	push	r24
    6c40:	df 92       	push	r13
    6c42:	cf 92       	push	r12
    6c44:	7d 81       	ldd	r23, Y+5	; 0x05
    6c46:	7f 93       	push	r23
    6c48:	8c 81       	ldd	r24, Y+4	; 0x04
    6c4a:	8f 93       	push	r24
    6c4c:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6c50:	0f b6       	in	r0, 0x3f	; 63
    6c52:	f8 94       	cli
    6c54:	de bf       	out	0x3e, r29	; 62
    6c56:	0f be       	out	0x3f, r0	; 63
    6c58:	cd bf       	out	0x3d, r28	; 61
    6c5a:	77 c0       	rjmp	.+238    	; 0x6d4a <main+0x41d6>
								else{sprintf(dspBuff[i], "%sOFF ", strBuff);}		
    6c5c:	8f ec       	ldi	r24, 0xCF	; 207
    6c5e:	93 e0       	ldi	r25, 0x03	; 3
    6c60:	9f 93       	push	r25
    6c62:	8f 93       	push	r24
    6c64:	bf 92       	push	r11
    6c66:	af 92       	push	r10
    6c68:	fd 81       	ldd	r31, Y+5	; 0x05
    6c6a:	ff 93       	push	r31
    6c6c:	2c 81       	ldd	r18, Y+4	; 0x04
    6c6e:	2f 93       	push	r18
    6c70:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6c74:	0f 90       	pop	r0
    6c76:	0f 90       	pop	r0
    6c78:	0f 90       	pop	r0
    6c7a:	0f 90       	pop	r0
    6c7c:	0f 90       	pop	r0
    6c7e:	0f 90       	pop	r0
    6c80:	64 c0       	rjmp	.+200    	; 0x6d4a <main+0x41d6>
							break;
							case 2:sprintf(dspBuff[i], "%s%dms ", strBuff, brakeTime);break;
    6c82:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <_ZL9brakeTime>
    6c86:	1f 92       	push	r1
    6c88:	8f 93       	push	r24
    6c8a:	8f ec       	ldi	r24, 0xCF	; 207
    6c8c:	93 e0       	ldi	r25, 0x03	; 3
    6c8e:	9f 93       	push	r25
    6c90:	8f 93       	push	r24
    6c92:	42 e4       	ldi	r20, 0x42	; 66
    6c94:	53 e0       	ldi	r21, 0x03	; 3
    6c96:	5f 93       	push	r21
    6c98:	4f 93       	push	r20
    6c9a:	7d 81       	ldd	r23, Y+5	; 0x05
    6c9c:	7f 93       	push	r23
    6c9e:	8c 81       	ldd	r24, Y+4	; 0x04
    6ca0:	8f 93       	push	r24
    6ca2:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6ca6:	0f b6       	in	r0, 0x3f	; 63
    6ca8:	f8 94       	cli
    6caa:	de bf       	out	0x3e, r29	; 62
    6cac:	0f be       	out	0x3f, r0	; 63
    6cae:	cd bf       	out	0x3d, r28	; 61
    6cb0:	4c c0       	rjmp	.+152    	; 0x6d4a <main+0x41d6>
							case 3:
								if(vVbatComp > 0){sprintf(dspBuff[i], "%s%d.%d ", strBuff, vVbatComp/10, vVbatComp%10);}
    6cb2:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <_ZL9vVbatComp>
    6cb6:	88 23       	and	r24, r24
    6cb8:	19 f1       	breq	.+70     	; 0x6d00 <main+0x418c>
    6cba:	83 9d       	mul	r24, r3
    6cbc:	91 2d       	mov	r25, r1
    6cbe:	11 24       	eor	r1, r1
    6cc0:	96 95       	lsr	r25
    6cc2:	96 95       	lsr	r25
    6cc4:	96 95       	lsr	r25
    6cc6:	39 2f       	mov	r19, r25
    6cc8:	33 0f       	add	r19, r19
    6cca:	23 2f       	mov	r18, r19
    6ccc:	22 0f       	add	r18, r18
    6cce:	22 0f       	add	r18, r18
    6cd0:	23 0f       	add	r18, r19
    6cd2:	82 1b       	sub	r24, r18
    6cd4:	1f 92       	push	r1
    6cd6:	8f 93       	push	r24
    6cd8:	1f 92       	push	r1
    6cda:	9f 93       	push	r25
    6cdc:	8f ec       	ldi	r24, 0xCF	; 207
    6cde:	93 e0       	ldi	r25, 0x03	; 3
    6ce0:	9f 93       	push	r25
    6ce2:	8f 93       	push	r24
    6ce4:	7f 92       	push	r7
    6ce6:	6f 92       	push	r6
    6ce8:	fd 81       	ldd	r31, Y+5	; 0x05
    6cea:	ff 93       	push	r31
    6cec:	2c 81       	ldd	r18, Y+4	; 0x04
    6cee:	2f 93       	push	r18
    6cf0:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6cf4:	0f b6       	in	r0, 0x3f	; 63
    6cf6:	f8 94       	cli
    6cf8:	de bf       	out	0x3e, r29	; 62
    6cfa:	0f be       	out	0x3f, r0	; 63
    6cfc:	cd bf       	out	0x3d, r28	; 61
    6cfe:	25 c0       	rjmp	.+74     	; 0x6d4a <main+0x41d6>
								else{sprintf(dspBuff[i], "%sOFF  ", strBuff);}	
    6d00:	8f ec       	ldi	r24, 0xCF	; 207
    6d02:	93 e0       	ldi	r25, 0x03	; 3
    6d04:	9f 93       	push	r25
    6d06:	8f 93       	push	r24
    6d08:	9f 92       	push	r9
    6d0a:	8f 92       	push	r8
    6d0c:	5d 81       	ldd	r21, Y+5	; 0x05
    6d0e:	5f 93       	push	r21
    6d10:	6c 81       	ldd	r22, Y+4	; 0x04
    6d12:	6f 93       	push	r22
    6d14:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6d18:	0f 90       	pop	r0
    6d1a:	0f 90       	pop	r0
    6d1c:	0f 90       	pop	r0
    6d1e:	0f 90       	pop	r0
    6d20:	0f 90       	pop	r0
    6d22:	0f 90       	pop	r0
    6d24:	12 c0       	rjmp	.+36     	; 0x6d4a <main+0x41d6>
							break;
							default:sprintf(dspBuff[i], "%s ", strBuff);break;
    6d26:	8f ec       	ldi	r24, 0xCF	; 207
    6d28:	93 e0       	ldi	r25, 0x03	; 3
    6d2a:	9f 93       	push	r25
    6d2c:	8f 93       	push	r24
    6d2e:	ff 92       	push	r15
    6d30:	ef 92       	push	r14
    6d32:	7d 81       	ldd	r23, Y+5	; 0x05
    6d34:	7f 93       	push	r23
    6d36:	8c 81       	ldd	r24, Y+4	; 0x04
    6d38:	8f 93       	push	r24
    6d3a:	0e 94 0a 3b 	call	0x7614	; 0x7614 <sprintf>
    6d3e:	0f 90       	pop	r0
    6d40:	0f 90       	pop	r0
    6d42:	0f 90       	pop	r0
    6d44:	0f 90       	pop	r0
    6d46:	0f 90       	pop	r0
    6d48:	0f 90       	pop	r0
				}
			break;
			//Settings
			case 10:
				if(submenu > 0){
					for(uint8_t i = 0;i < 2;i ++){
    6d4a:	0f 5f       	subi	r16, 0xFF	; 255
    6d4c:	ec 81       	ldd	r30, Y+4	; 0x04
    6d4e:	fd 81       	ldd	r31, Y+5	; 0x05
    6d50:	74 96       	adiw	r30, 0x14	; 20
    6d52:	fd 83       	std	Y+5, r31	; 0x05
    6d54:	ec 83       	std	Y+4, r30	; 0x04
    6d56:	02 30       	cpi	r16, 0x02	; 2
    6d58:	09 f0       	breq	.+2      	; 0x6d5c <main+0x41e8>
    6d5a:	14 cf       	rjmp	.-472    	; 0x6b84 <main+0x4010>
								else{sprintf(dspBuff[i], "%sOFF  ", strBuff);}	
							break;
							default:sprintf(dspBuff[i], "%s ", strBuff);break;
						}
					}
					dspCursor = (gpVar1?17:1);
    6d5c:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <_ZL6gpVar1>
    6d60:	81 11       	cpse	r24, r1
    6d62:	02 c0       	rjmp	.+4      	; 0x6d68 <main+0x41f4>
    6d64:	81 e0       	ldi	r24, 0x01	; 1
    6d66:	01 c0       	rjmp	.+2      	; 0x6d6a <main+0x41f6>
    6d68:	81 e1       	ldi	r24, 0x11	; 17
    6d6a:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZL9dspCursor>
					dspCursorChr = '>';
    6d6e:	8e e3       	ldi	r24, 0x3E	; 62
    6d70:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_ZL12dspCursorChr>
				}
			break;
		}
		if(menu != 0){
    6d74:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    6d78:	88 23       	and	r24, r24
    6d7a:	11 f4       	brne	.+4      	; 0x6d80 <main+0x420c>
    6d7c:	0c 94 ec 18 	jmp	0x31d8	; 0x31d8 <main+0x664>
			if(uppDsp == 1){
    6d80:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
    6d84:	88 23       	and	r24, r24
    6d86:	61 f0       	breq	.+24     	; 0x6da0 <main+0x422c>
				LCD.Cursor(0,0);
    6d88:	40 e0       	ldi	r20, 0x00	; 0
    6d8a:	60 e0       	ldi	r22, 0x00	; 0
    6d8c:	89 e0       	ldi	r24, 0x09	; 9
    6d8e:	95 e0       	ldi	r25, 0x05	; 5
    6d90:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
				LCD.WriteStr(dspBuff[0]);
    6d94:	63 ee       	ldi	r22, 0xE3	; 227
    6d96:	73 e0       	ldi	r23, 0x03	; 3
    6d98:	89 e0       	ldi	r24, 0x09	; 9
    6d9a:	95 e0       	ldi	r25, 0x05	; 5
    6d9c:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
			}
			LCD.Cursor(0,1);
    6da0:	41 e0       	ldi	r20, 0x01	; 1
    6da2:	60 e0       	ldi	r22, 0x00	; 0
    6da4:	89 e0       	ldi	r24, 0x09	; 9
    6da6:	95 e0       	ldi	r25, 0x05	; 5
    6da8:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
			LCD.WriteStr(dspBuff[1]);
    6dac:	67 ef       	ldi	r22, 0xF7	; 247
    6dae:	73 e0       	ldi	r23, 0x03	; 3
    6db0:	89 e0       	ldi	r24, 0x09	; 9
    6db2:	95 e0       	ldi	r25, 0x05	; 5
    6db4:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4PLCD8WriteStrEPKc>
			if(dspCursor > 0){
    6db8:	60 91 79 04 	lds	r22, 0x0479	; 0x800479 <_ZL9dspCursor>
    6dbc:	66 23       	and	r22, r22
    6dbe:	11 f4       	brne	.+4      	; 0x6dc4 <main+0x4250>
    6dc0:	0c 94 ec 18 	jmp	0x31d8	; 0x31d8 <main+0x664>
				LCD.Cursor((dspCursor>16?dspCursor-17:dspCursor-1), dspCursor > 16);
    6dc4:	41 e0       	ldi	r20, 0x01	; 1
    6dc6:	61 31       	cpi	r22, 0x11	; 17
    6dc8:	08 f4       	brcc	.+2      	; 0x6dcc <main+0x4258>
    6dca:	40 e0       	ldi	r20, 0x00	; 0
    6dcc:	61 31       	cpi	r22, 0x11	; 17
    6dce:	10 f0       	brcs	.+4      	; 0x6dd4 <main+0x4260>
    6dd0:	61 51       	subi	r22, 0x11	; 17
    6dd2:	01 c0       	rjmp	.+2      	; 0x6dd6 <main+0x4262>
    6dd4:	61 50       	subi	r22, 0x01	; 1
    6dd6:	89 e0       	ldi	r24, 0x09	; 9
    6dd8:	95 e0       	ldi	r25, 0x05	; 5
    6dda:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN4PLCD6CursorEhh>
				LCD.WriteChr(dspCursorChr);
    6dde:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <_ZL12dspCursorChr>
    6de2:	89 e0       	ldi	r24, 0x09	; 9
    6de4:	95 e0       	ldi	r25, 0x05	; 5
    6de6:	0e 94 ab 05 	call	0xb56	; 0xb56 <_ZN4PLCD8WriteChrEc>
    6dea:	0c 94 ec 18 	jmp	0x31d8	; 0x31d8 <main+0x664>
		_delay_ms(20);
		while(1){
			if(!reset_enter){
				BTNCOM(0);_delay_us(10);
				if(BTN2&&reset_mode<4){
					reset_mode++;
    6dee:	1a 81       	ldd	r17, Y+2	; 0x02
    6df0:	1f 5f       	subi	r17, 0xFF	; 255
				goto reset_prg;}
    6df2:	0c 94 7f 16 	jmp	0x2cfe	; 0x2cfe <main+0x18a>
				if(BTN1&&reset_mode>1){
    6df6:	9d 99       	sbic	0x13, 5	; 19
    6df8:	02 c0       	rjmp	.+4      	; 0x6dfe <main+0x428a>
    6dfa:	0c 94 2c 17 	jmp	0x2e58	; 0x2e58 <main+0x2e4>
					reset_mode--;
				goto reset_prg;}
				BTNCOM(1);_delay_us(10);
    6dfe:	c6 9a       	sbi	0x18, 6	; 24
    6e00:	be 98       	cbi	0x17, 6	; 23
    6e02:	ab 98       	cbi	0x15, 3	; 21
    6e04:	a3 9a       	sbi	0x14, 3	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    6e06:	f5 e3       	ldi	r31, 0x35	; 53
    6e08:	fa 95       	dec	r31
    6e0a:	f1 f7       	brne	.-4      	; 0x6e08 <main+0x4294>
    6e0c:	00 00       	nop
				if(BTN4){
    6e0e:	9c 9b       	sbis	0x13, 4	; 19
    6e10:	02 c0       	rjmp	.+4      	; 0x6e16 <main+0x42a2>
    6e12:	0c 94 37 17 	jmp	0x2e6e	; 0x2e6e <main+0x2fa>
    6e16:	0c 94 32 17 	jmp	0x2e64	; 0x2e64 <main+0x2f0>
						eeprom_update_word(&sensLLo_eep, 400);
						eeprom_update_word(&sensLHi_eep, 180);
						eeprom_update_word(&sensLo_eep, 1023);
						eeprom_update_word(&sensHi_eep, 0);
					}
					if(reset_mode==2||reset_mode==4){
    6e1a:	2a 81       	ldd	r18, Y+2	; 0x02
    6e1c:	22 30       	cpi	r18, 0x02	; 2
    6e1e:	11 f0       	breq	.+4      	; 0x6e24 <main+0x42b0>
    6e20:	0c 94 36 18 	jmp	0x306c	; 0x306c <main+0x4f8>
    6e24:	0c 94 d8 17 	jmp	0x2fb0	; 0x2fb0 <main+0x43c>
						//PID
						PDMnow[0] = 3;
    6e28:	01 e5       	ldi	r16, 0x51	; 81
    6e2a:	14 e0       	ldi	r17, 0x04	; 4
    6e2c:	83 e0       	ldi	r24, 0x03	; 3
    6e2e:	f8 01       	movw	r30, r16
    6e30:	80 83       	st	Z, r24
						PDMnow[1] = 10;
    6e32:	8a e0       	ldi	r24, 0x0A	; 10
    6e34:	81 83       	std	Z+1, r24	; 0x01
						PDMnow[2] = 0;
    6e36:	12 82       	std	Z+2, r1	; 0x02
						updatePDMmem(0);
    6e38:	43 e0       	ldi	r20, 0x03	; 3
    6e3a:	50 e0       	ldi	r21, 0x00	; 0
    6e3c:	63 e3       	ldi	r22, 0x33	; 51
    6e3e:	70 e0       	ldi	r23, 0x00	; 0
    6e40:	c8 01       	movw	r24, r16
    6e42:	0e 94 db 3d 	call	0x7bb6	; 0x7bb6 <eeprom_update_block>
						PDMnow[0] = 17;
    6e46:	81 e1       	ldi	r24, 0x11	; 17
    6e48:	f8 01       	movw	r30, r16
    6e4a:	80 83       	st	Z, r24
						PDMnow[1] = 30;
    6e4c:	8e e1       	ldi	r24, 0x1E	; 30
    6e4e:	81 83       	std	Z+1, r24	; 0x01
						PDMnow[2] = 0;
    6e50:	12 82       	std	Z+2, r1	; 0x02
						for(gpVar1 = 1;gpVar1 < 5;gpVar1 ++){
    6e52:	81 e0       	ldi	r24, 0x01	; 1
    6e54:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <_ZL6gpVar1>
    6e58:	0c 94 f0 17 	jmp	0x2fe0	; 0x2fe0 <main+0x46c>
		Sens.Read();
		Sens.Ctrl(1);
		#ifndef DBG
		if(Sens.Ctrl(1) && !sysRun){
			//Servo PWM
			if(servoTmr >= 15){
    6e5c:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <_ZL8servoTmr>
    6e60:	8f 30       	cpi	r24, 0x0F	; 15
    6e62:	10 f0       	brcs	.+4      	; 0x6e68 <main+0x42f4>
    6e64:	0c 94 bb 19 	jmp	0x3376	; 0x3376 <main+0x802>
    6e68:	0c 94 ee 19 	jmp	0x33dc	; 0x33dc <main+0x868>
			dspRfs = 1;
			#endif
			sensNewData = 1;
		}
	}
	else if(sampleTmr >= 200 && !sample){
    6e6c:	88 3c       	cpi	r24, 0xC8	; 200
    6e6e:	10 f4       	brcc	.+4      	; 0x6e74 <main+0x4300>
    6e70:	0c 94 97 1a 	jmp	0x352e	; 0x352e <main+0x9ba>
    6e74:	0c 94 69 1a 	jmp	0x34d2	; 0x34d2 <main+0x95e>
	BTNCOM(1);BTNCOM(1);
	pb[3] = BTN4;
	pb[4] = BTN5;
	pb[5] = BTN6;
	if(!(pb[0] | pb[1] | pb[2] | pb[3] | pb[4] | pb[5])){pbTimer = 0;if(pbLast == 1 || pbLast == 4){pbLast = 0;}}
	if(pbTimer >= 5){
    6e78:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <_ZL7pbTimer>
    6e7c:	85 30       	cpi	r24, 0x05	; 5
    6e7e:	10 f0       	brcs	.+4      	; 0x6e84 <main+0x4310>
    6e80:	0c 94 fd 1a 	jmp	0x35fa	; 0x35fa <main+0xa86>
    6e84:	0c 94 4a 1b 	jmp	0x3694	; 0x3694 <main+0xb20>
	else{
		for(uint8_t i = 0;i < 6;i ++){
			pb[i] = 0;
		}
	}
	if(!pb[2] && pbLast == 2){pb[2] = 3;pbLast = 0;}
    6e88:	88 23       	and	r24, r24
    6e8a:	09 f4       	brne	.+2      	; 0x6e8e <main+0x431a>
    6e8c:	05 c1       	rjmp	.+522    	; 0x7098 <main+0x4524>
    6e8e:	0c 94 6a 1b 	jmp	0x36d4	; 0x36d4 <main+0xb60>
			if(pb[2] == 3){
				menu = 0;pointer = 0;
				pb[2] = 0;
				LCD.Clear();}
		}
		switch(menu+pointer){
    6e92:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    6e96:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <_ZL7pointer>
    6e9a:	f0 e0       	ldi	r31, 0x00	; 0
    6e9c:	e8 0f       	add	r30, r24
    6e9e:	f1 1d       	adc	r31, r1
    6ea0:	eb 30       	cpi	r30, 0x0B	; 11
    6ea2:	f1 05       	cpc	r31, r1
    6ea4:	10 f0       	brcs	.+4      	; 0x6eaa <main+0x4336>
    6ea6:	0c 94 42 2b 	jmp	0x5684	; 0x5684 <main+0x2b10>
    6eaa:	ea 5a       	subi	r30, 0xAA	; 170
    6eac:	ff 4f       	sbci	r31, 0xFF	; 255
    6eae:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
	eeprom_update_byte(&brakeTime_eep, brakeTime);
	sysConfigs = (useATC<<1);
	eeprom_update_byte(&sysConfigs_eep, sysConfigs);
}
static void copyProg(uint8_t dst){
	uint8_t srcProg = progSel;
    6eb2:	f0 90 77 04 	lds	r15, 0x0477	; 0x800477 <_ZL7progSel>
	uint8_t srcIdx = idxSel;
    6eb6:	10 91 76 04 	lds	r17, 0x0476	; 0x800476 <_ZL6idxSel>
	for(idxSel = 1;idxSel <= 100;idxSel ++){
    6eba:	d0 92 76 04 	sts	0x0476, r13	; 0x800476 <_ZL6idxSel>
    6ebe:	0c 94 18 1d 	jmp	0x3a30	; 0x3a30 <main+0xebc>
			case 1:
				if(sidemenu > 0 && submenu == 0){
					sidemenu = _lim(sidemenu+pb[0]-pb[1], 1, 3);
					if(pb[2] == 3){sidemenu = 0;LCD.Clear();}
					if(sidemenu == 1){
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 9);
    6ec2:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
						if(pb[3] == 3){copyProg(gpVar1);sidemenu = 0;LCD.Clear();}
    6ec6:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    6eca:	83 30       	cpi	r24, 0x03	; 3
    6ecc:	11 f0       	breq	.+4      	; 0x6ed2 <main+0x435e>
    6ece:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    6ed2:	ef cf       	rjmp	.-34     	; 0x6eb2 <main+0x433e>
						}
						
							
					}
					else{
						switch(submenu){
    6ed4:	01 30       	cpi	r16, 0x01	; 1
    6ed6:	11 f4       	brne	.+4      	; 0x6edc <main+0x4368>
    6ed8:	0c 94 fe 22 	jmp	0x45fc	; 0x45fc <main+0x1a88>
    6edc:	03 30       	cpi	r16, 0x03	; 3
    6ede:	11 f4       	brne	.+4      	; 0x6ee4 <main+0x4370>
    6ee0:	0c 94 d4 23 	jmp	0x47a8	; 0x47a8 <main+0x1c34>
    6ee4:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
					else if(sidemenu == 2){
						if(pb[3] == 3){invProg();sidemenu = 0;LCD.Clear();}
					}
					else{if(pb[3] == 3){deleteProg();sidemenu = 0;LCD.Clear();}}
				}
				else if(submenu > 0){
    6ee8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6eec:	88 23       	and	r24, r24
    6eee:	11 f4       	brne	.+4      	; 0x6ef4 <main+0x4380>
    6ef0:	0c 94 d2 24 	jmp	0x49a4	; 0x49a4 <main+0x1e30>
    6ef4:	0c 94 5b 1e 	jmp	0x3cb6	; 0x3cb6 <main+0x1142>
									if(pb[3] == 3){
										uppDsp = 1;
										if(idxSel > 0){submenu = 5;LCD.Clear();}
									}
								}
								switch(submenu){
    6ef8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6efc:	82 30       	cpi	r24, 0x02	; 2
    6efe:	11 f4       	brne	.+4      	; 0x6f04 <main+0x4390>
    6f00:	0c 94 3a 1f 	jmp	0x3e74	; 0x3e74 <main+0x1300>
    6f04:	30 f4       	brcc	.+12     	; 0x6f12 <main+0x439e>
    6f06:	81 30       	cpi	r24, 0x01	; 1
    6f08:	11 f4       	brne	.+4      	; 0x6f0e <main+0x439a>
    6f0a:	0c 94 de 1e 	jmp	0x3dbc	; 0x3dbc <main+0x1248>
    6f0e:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    6f12:	83 30       	cpi	r24, 0x03	; 3
    6f14:	11 f4       	brne	.+4      	; 0x6f1a <main+0x43a6>
    6f16:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <main+0x146e>
    6f1a:	84 30       	cpi	r24, 0x04	; 4
    6f1c:	11 f4       	brne	.+4      	; 0x6f22 <main+0x43ae>
    6f1e:	0c 94 3a 20 	jmp	0x4074	; 0x4074 <main+0x1500>
    6f22:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
											readProgMem(progSel);
											readStartIdx();
											readSensMem();
											if(idxSel == 0){uppDsp = 1;}
										}
										if(pb[3] == 2 && idxSel > 0){uppDsp = 1;sidemenu = 1;gpVar1 = idxSel;shortDisp_P(3, idxMenuStr);}
    6f26:	90 91 7e 04 	lds	r25, 0x047E	; 0x80047e <_ZL2pb+0x3>
    6f2a:	92 30       	cpi	r25, 0x02	; 2
    6f2c:	11 f0       	breq	.+4      	; 0x6f32 <main+0x43be>
    6f2e:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    6f32:	0c 94 29 1f 	jmp	0x3e52	; 0x3e52 <main+0x12de>
										}
									break;
									case 3:
										if(idxSel == 0){indexBuff[6] = _lim(indexBuff[6]+pb[4]-pb[5], 0, 100);}
										else{
											setMaskByte(&indexBuff[1], 0b0011111, _lim((indexBuff[1]&0b0011111)+pb[4]-pb[5], 0, 30));
    6f36:	41 2f       	mov	r20, r17
    6f38:	6f e1       	ldi	r22, 0x1F	; 31
    6f3a:	8c e6       	ldi	r24, 0x6C	; 108
    6f3c:	94 e0       	ldi	r25, 0x04	; 4
    6f3e:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11setMaskBytePhhh>
											if(pb[3] == 2 && idxSel > 0){uppDsp = 0;sidemenu = 1;gpVar1 = 20;shortDisp_P(2, editSensStr);}
    6f42:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    6f46:	82 30       	cpi	r24, 0x02	; 2
    6f48:	11 f0       	breq	.+4      	; 0x6f4e <main+0x43da>
    6f4a:	0c 94 2e 20 	jmp	0x405c	; 0x405c <main+0x14e8>
    6f4e:	0c 94 22 20 	jmp	0x4044	; 0x4044 <main+0x14d0>
							case 5 ... 8:
								uppDsp = 1;
								switch(indexBuff[0]&0b00001111){
									//Servo
									case 6:
										submenu = _loop(submenu+pb[1]-pb[0], 5, 7);
    6f52:	87 e0       	ldi	r24, 0x07	; 7
    6f54:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f58:	0c 94 bc 20 	jmp	0x4178	; 0x4178 <main+0x1604>
    6f5c:	85 e0       	ldi	r24, 0x05	; 5
    6f5e:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f62:	0c 94 8c 20 	jmp	0x4118	; 0x4118 <main+0x15a4>
										}
										if(pb[3] == 3){submenu = 9;LCD.Clear();}
									break;
									//GoTo
									case 7:
										submenu = _loop(submenu+pb[1]-pb[0], 5, 6);
    6f66:	85 e0       	ldi	r24, 0x05	; 5
    6f68:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f6c:	0c 94 fb 20 	jmp	0x41f6	; 0x41f6 <main+0x1682>
    6f70:	86 e0       	ldi	r24, 0x06	; 6
    6f72:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f76:	0c 94 11 21 	jmp	0x4222	; 0x4222 <main+0x16ae>
								}
								if(pb[2] == 3){submenu = 1;LCD.Clear();uppDsp = 0;}
							break;
							case 9 ... 12:
								if((indexBuff[0]&0b00001111) == 6){
									submenu = _loop(submenu+pb[1]-pb[0], 9, 11);
    6f7a:	8b e0       	ldi	r24, 0x0B	; 11
    6f7c:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f80:	0c 94 3f 22 	jmp	0x447e	; 0x447e <main+0x190a>
    6f84:	89 e0       	ldi	r24, 0x09	; 9
    6f86:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f8a:	0c 94 0f 22 	jmp	0x441e	; 0x441e <main+0x18aa>
										case 10:indexBuff[6] = _lim(indexBuff[6]+pb[4]-pb[5], 1, 254);break;
										case 11:indexBuff[7] = _lim(indexBuff[7]+pb[4]-pb[5], 1, 254);break;
									}
								}
								else{
									submenu = _loop(submenu+pb[1]-pb[0], 9, 12);
    6f8e:	8c e0       	ldi	r24, 0x0C	; 12
    6f90:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f94:	0c 94 cf 22 	jmp	0x459e	; 0x459e <main+0x1a2a>
    6f98:	89 e0       	ldi	r24, 0x09	; 9
    6f9a:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZL7submenu>
    6f9e:	0c 94 7d 22 	jmp	0x44fa	; 0x44fa <main+0x1986>
									break;
								}
							break;
							case 3:
								sidemenu = _loop(sidemenu+pb[1]-pb[0], 1, 15);
								if(pb[2] == 3 || pb[3] == 3){sidemenu = 0;updateSensMem();LCD.Clear();uppDsp = 0;}
    6fa2:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <_ZL8sidemenu>
		eeprom_update_word(&sensOffs_eep[gpVar2], Sens.SensOffs[gpVar2]);
	}
}
static void updateSensMem(){
	uint16_t tmp = 0;
	if(progInv){
    6fa6:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <_ZL7progInv>
    6faa:	81 11       	cpse	r24, r1
    6fac:	0c 94 fe 23 	jmp	0x47fc	; 0x47fc <main+0x1c88>
    6fb0:	0c 94 3c 24 	jmp	0x4878	; 0x4878 <main+0x1d04>
						case 4:scanVel = _lim(scanVel+pb[4]-pb[5], 0, 100);break;
					}
				}
				else{
					PDMsel = _lim(PDMsel+pb[4]-pb[5], 0 , 10);
					if(pb[3] == 3){submenu = 1;
    6fb4:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    6fb8:	0c 94 fc 26 	jmp	0x4df8	; 0x4df8 <main+0x2284>
						case 3:PDMnow[2] = _lim(PDMnow[2]+pb[4]-pb[5], 0, 1);break;
						case 4:scanVel = _lim(scanVel+pb[4]-pb[5], 0, 100);break;
					}
				}
				else{
					PDMsel = _lim(PDMsel+pb[4]-pb[5], 0 , 10);
    6fbc:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <_ZL6PDMsel>
					if(pb[3] == 3){submenu = 1;
    6fc0:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    6fc4:	83 30       	cpi	r24, 0x03	; 3
    6fc6:	11 f0       	breq	.+4      	; 0x6fcc <main+0x4458>
    6fc8:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    6fcc:	f3 cf       	rjmp	.-26     	; 0x6fb4 <main+0x4440>
							updateConfMem();
							readSensCfg();
						}
					}
					if(useATC && cal == 0){
						submenu = _lim(submenu+pb[0]-pb[1], 1 ,3);
    6fce:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
						if(pb[1] && submenu == 1){updateSensCfg();}
    6fd2:	22 23       	and	r18, r18
    6fd4:	11 f4       	brne	.+4      	; 0x6fda <main+0x4466>
    6fd6:	0c 94 89 28 	jmp	0x5112	; 0x5112 <main+0x259e>
    6fda:	0c 94 63 27 	jmp	0x4ec6	; 0x4ec6 <main+0x2352>
							case 3:sensHi = _lim(sensHi+pb[4]-pb[5], 0, 300);break;
						}
					}
					else{
						if(cal == 0){submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);}
						if(submenu == 2){
    6fde:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6fe2:	82 30       	cpi	r24, 0x02	; 2
    6fe4:	11 f0       	breq	.+4      	; 0x6fea <main+0x4476>
    6fe6:	0c 94 89 28 	jmp	0x5112	; 0x5112 <main+0x259e>
    6fea:	0c 94 d4 27 	jmp	0x4fa8	; 0x4fa8 <main+0x2434>
    6fee:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZL7submenu>
    6ff2:	82 30       	cpi	r24, 0x02	; 2
    6ff4:	11 f0       	breq	.+4      	; 0x6ffa <main+0x4486>
    6ff6:	0c 94 89 28 	jmp	0x5112	; 0x5112 <main+0x259e>
    6ffa:	0c 94 d4 27 	jmp	0x4fa8	; 0x4fa8 <main+0x2434>
    6ffe:	8e e0       	ldi	r24, 0x0E	; 14
    7000:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <_ZL6gpVar2>
								}
								if(cal == 1){
									if(Sens.ResultLow < sensLo && Sens.ResultHigh != 1023){sensLo = Sens.ResultLow;}
									if(Sens.ResultHigh > sensHi && Sens.ResultHigh != 1023){sensHi = Sens.ResultHigh;}
								}
								if(pb[3] == 3){
    7004:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    7008:	83 30       	cpi	r24, 0x03	; 3
    700a:	11 f0       	breq	.+4      	; 0x7010 <main+0x449c>
    700c:	0c 94 59 28 	jmp	0x50b2	; 0x50b2 <main+0x253e>
    7010:	0c 94 34 28 	jmp	0x5068	; 0x5068 <main+0x24f4>
    7014:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    7018:	83 30       	cpi	r24, 0x03	; 3
    701a:	09 f0       	breq	.+2      	; 0x701e <main+0x44aa>
    701c:	63 c0       	rjmp	.+198    	; 0x70e4 <main+0x4570>
    701e:	0c 94 31 28 	jmp	0x5062	; 0x5062 <main+0x24ee>
    7022:	90 91 7e 04 	lds	r25, 0x047E	; 0x80047e <_ZL2pb+0x3>
    7026:	93 30       	cpi	r25, 0x03	; 3
    7028:	09 f0       	breq	.+2      	; 0x702c <main+0x44b8>
    702a:	55 c0       	rjmp	.+170    	; 0x70d6 <main+0x4562>
    702c:	0c 94 35 28 	jmp	0x506a	; 0x506a <main+0x24f6>
				}
			break;
			//Selftest
			case 7:
				if(submenu > 0){
					submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);
    7030:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    7034:	0c 94 38 29 	jmp	0x5270	; 0x5270 <main+0x26fc>
						gpVar1 = 0;
					}
					else{testPD = 0; sysRun = 0;}
					if(pb[2] == 3){submenu = 0;testPD = 0;sysRun = 0;readConfMem(); LCD.Clear();}
					if(submenu == 2){
						gpVar1 = _lim(gpVar1+pb[4]-pb[5], 0, 4);
    7038:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZL6gpVar1>
    703c:	0c 94 c0 29 	jmp	0x5380	; 0x5380 <main+0x280c>
				}
			break;
			//Prescalers
			case 8:
				if(submenu > 0){
					submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);
    7040:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    7044:	0c 94 23 2a 	jmp	0x5446	; 0x5446 <main+0x28d2>
				}
			}
			dspCursor = (pointer?17:1);
			dspCursorChr = '>';
		}
		switch(menu+pointer){
    7048:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_ZL7pointer>
    704c:	f0 e0       	ldi	r31, 0x00	; 0
    704e:	e8 0f       	add	r30, r24
    7050:	f1 1d       	adc	r31, r1
    7052:	eb 30       	cpi	r30, 0x0B	; 11
    7054:	f1 05       	cpc	r31, r1
    7056:	08 f0       	brcs	.+2      	; 0x705a <main+0x44e6>
    7058:	93 ce       	rjmp	.-730    	; 0x6d80 <main+0x420c>
    705a:	ef 59       	subi	r30, 0x9F	; 159
    705c:	ff 4f       	sbci	r31, 0xFF	; 255
    705e:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
    7062:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <_ZL7pointer>
    7066:	f0 e0       	ldi	r31, 0x00	; 0
    7068:	eb 30       	cpi	r30, 0x0B	; 11
    706a:	f1 05       	cpc	r31, r1
    706c:	10 f0       	brcs	.+4      	; 0x7072 <main+0x44fe>
    706e:	0c 94 ec 18 	jmp	0x31d8	; 0x31d8 <main+0x664>
    7072:	e4 59       	subi	r30, 0x94	; 148
    7074:	ff 4f       	sbci	r31, 0xFF	; 255
    7076:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
    707a:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZL4menu>
    707e:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <_ZL7pointer>
    7082:	f0 e0       	ldi	r31, 0x00	; 0
    7084:	e8 0f       	add	r30, r24
    7086:	f1 1d       	adc	r31, r1
    7088:	eb 30       	cpi	r30, 0x0B	; 11
    708a:	f1 05       	cpc	r31, r1
    708c:	08 f0       	brcs	.+2      	; 0x7090 <main+0x451c>
    708e:	72 ce       	rjmp	.-796    	; 0x6d74 <main+0x4200>
    7090:	e9 58       	subi	r30, 0x89	; 137
    7092:	ff 4f       	sbci	r31, 0xFF	; 255
    7094:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>
	else{
		for(uint8_t i = 0;i < 6;i ++){
			pb[i] = 0;
		}
	}
	if(!pb[2] && pbLast == 2){pb[2] = 3;pbLast = 0;}
    7098:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <_ZL6pbLast>
    709c:	82 30       	cpi	r24, 0x02	; 2
    709e:	11 f0       	breq	.+4      	; 0x70a4 <main+0x4530>
    70a0:	0c 94 6a 1b 	jmp	0x36d4	; 0x36d4 <main+0xb60>
    70a4:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <main+0xb4c>
		progSel = tmp2;
	}
}

void Interface(){
	if((menu == 0 || cal > 0 || testPD == 1) && !pbPress && !lowBatt && !sensOff){sample = 1;}
    70a8:	90 91 38 04 	lds	r25, 0x0438	; 0x800438 <_ZL3cal>
    70ac:	91 11       	cpse	r25, r1
    70ae:	0c 94 9f 1b 	jmp	0x373e	; 0x373e <main+0xbca>
    70b2:	0c 94 97 1b 	jmp	0x372e	; 0x372e <main+0xbba>
							case 2:sensLo = _lim(sensLo+pb[4]-pb[5], 0, 1023);break;
							case 3:sensHi = _lim(sensHi+pb[4]-pb[5], 0, 300);break;
						}
					}
					else{
						if(cal == 0){submenu = _lim(submenu+pb[0]-pb[1], 1 ,2);}
    70b6:	d0 92 84 04 	sts	0x0484, r13	; 0x800484 <_ZL7submenu>
    70ba:	0c 94 89 28 	jmp	0x5112	; 0x5112 <main+0x259e>
								}
								if(cal == 1){
									if(Sens.ResultLow < sensLo && Sens.ResultHigh != 1023){sensLo = Sens.ResultLow;}
									if(Sens.ResultHigh > sensHi && Sens.ResultHigh != 1023){sensHi = Sens.ResultHigh;}
								}
								if(pb[3] == 3){
    70be:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZL2pb+0x3>
    70c2:	83 30       	cpi	r24, 0x03	; 3
    70c4:	11 f0       	breq	.+4      	; 0x70ca <main+0x4556>
    70c6:	0c 94 59 28 	jmp	0x50b2	; 0x50b2 <main+0x253e>
    70ca:	0c 94 31 28 	jmp	0x5062	; 0x5062 <main+0x24ee>
									pb[3] = 0;
									cal = 0;
									LCD.Clear();
								}
								if(pb[2] == 3){
									if(cal == 1){updateSensCfg();}
    70ce:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <_ZL3cal>
    70d2:	0c 94 65 28 	jmp	0x50ca	; 0x50ca <main+0x2556>
									uppDsp = 1;
									pb[3] = 0;
									cal = 0;
									LCD.Clear();
								}
								if(pb[2] == 3){
    70d6:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    70da:	83 30       	cpi	r24, 0x03	; 3
    70dc:	11 f0       	breq	.+4      	; 0x70e2 <main+0x456e>
    70de:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    70e2:	f5 cf       	rjmp	.-22     	; 0x70ce <main+0x455a>
    70e4:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <_ZL2pb+0x2>
    70e8:	83 30       	cpi	r24, 0x03	; 3
    70ea:	11 f0       	breq	.+4      	; 0x70f0 <main+0x457c>
    70ec:	0c 94 3c 2b 	jmp	0x5678	; 0x5678 <main+0x2b04>
    70f0:	0c 94 62 28 	jmp	0x50c4	; 0x50c4 <main+0x2550>
					}
				}
			break;
			//Program
			case 1:
				if(sidemenu > 0 && submenu == 0){
    70f4:	10 91 83 04 	lds	r17, 0x0483	; 0x800483 <_ZL8sidemenu>
    70f8:	0c 94 cb 1c 	jmp	0x3996	; 0x3996 <main+0xe22>
			if(pb[2] == 3){
				menu = 0;pointer = 0;
				pb[2] = 0;
				LCD.Clear();}
		}
		switch(menu+pointer){
    70fc:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_ZL7pointer>
    7100:	e0 91 85 04 	lds	r30, 0x0485	; 0x800485 <_ZL4menu>
    7104:	f0 e0       	ldi	r31, 0x00	; 0
    7106:	e8 0f       	add	r30, r24
    7108:	f1 1d       	adc	r31, r1
    710a:	eb 30       	cpi	r30, 0x0B	; 11
    710c:	f1 05       	cpc	r31, r1
    710e:	10 f0       	brcs	.+4      	; 0x7114 <main+0x45a0>
    7110:	0c 94 42 2b 	jmp	0x5684	; 0x5684 <main+0x2b10>
    7114:	ee 57       	subi	r30, 0x7E	; 126
    7116:	ff 4f       	sbci	r31, 0xFF	; 255
    7118:	0c 94 da 3a 	jmp	0x75b4	; 0x75b4 <__tablejump2__>

0000711c <_GLOBAL__sub_I__ZN8MotorLib4InitEv>:
};

#define sym_degrees 0b11011111

PLCD::PLCD(volatile uint8_t *EN_DDR, volatile uint8_t *EN_PORT, uint8_t EN_Bit){
	_plcd_en_ddr = EN_DDR;
    711c:	e9 e0       	ldi	r30, 0x09	; 9
    711e:	f5 e0       	ldi	r31, 0x05	; 5
    7120:	87 e3       	ldi	r24, 0x37	; 55
    7122:	90 e0       	ldi	r25, 0x00	; 0
    7124:	92 83       	std	Z+2, r25	; 0x02
    7126:	81 83       	std	Z+1, r24	; 0x01
	_plcd_en_port = EN_PORT;
    7128:	88 e3       	ldi	r24, 0x38	; 56
    712a:	90 e0       	ldi	r25, 0x00	; 0
    712c:	94 83       	std	Z+4, r25	; 0x04
    712e:	83 83       	std	Z+3, r24	; 0x03
	_plcd_en_bit = EN_Bit;
    7130:	81 e0       	ldi	r24, 0x01	; 1
    7132:	85 83       	std	Z+5, r24	; 0x05

#include "bytecon.h"
#include "I2Cbase.h"
#include <compat/twi.h>

class hI2C : public I2C{
    7134:	ab e8       	ldi	r26, 0x8B	; 139
    7136:	b4 e0       	ldi	r27, 0x04	; 4
    7138:	80 eb       	ldi	r24, 0xB0	; 176
    713a:	93 e0       	ldi	r25, 0x03	; 3
    713c:	11 96       	adiw	r26, 0x01	; 1
    713e:	9c 93       	st	X, r25
    7140:	8e 93       	st	-X, r24
		uint8_t _i2ceeprom_i2caddress;
		I2C *_i2ceeprom_iic;
};

I2CEEPROM::I2CEEPROM(uint8_t DevAddr, I2C *Device){
	_i2ceeprom_i2caddress = DevAddr<<1;
    7142:	e6 e8       	ldi	r30, 0x86	; 134
    7144:	f4 e0       	ldi	r31, 0x04	; 4
    7146:	80 ea       	ldi	r24, 0xA0	; 160
    7148:	82 83       	std	Z+2, r24	; 0x02
	_i2ceeprom_iic = Device;
    714a:	b4 83       	std	Z+4, r27	; 0x04
    714c:	a3 83       	std	Z+3, r26	; 0x03
	_i2ceeprom_alloc_address = 0;
    714e:	11 82       	std	Z+1, r1	; 0x01
    7150:	10 82       	st	Z, r1
    7152:	08 95       	ret

00007154 <__subsf3>:
    7154:	50 58       	subi	r21, 0x80	; 128

00007156 <__addsf3>:
    7156:	bb 27       	eor	r27, r27
    7158:	aa 27       	eor	r26, r26
    715a:	0e 94 c2 38 	call	0x7184	; 0x7184 <__addsf3x>
    715e:	0c 94 13 3a 	jmp	0x7426	; 0x7426 <__fp_round>
    7162:	0e 94 05 3a 	call	0x740a	; 0x740a <__fp_pscA>
    7166:	38 f0       	brcs	.+14     	; 0x7176 <__addsf3+0x20>
    7168:	0e 94 0c 3a 	call	0x7418	; 0x7418 <__fp_pscB>
    716c:	20 f0       	brcs	.+8      	; 0x7176 <__addsf3+0x20>
    716e:	39 f4       	brne	.+14     	; 0x717e <__addsf3+0x28>
    7170:	9f 3f       	cpi	r25, 0xFF	; 255
    7172:	19 f4       	brne	.+6      	; 0x717a <__addsf3+0x24>
    7174:	26 f4       	brtc	.+8      	; 0x717e <__addsf3+0x28>
    7176:	0c 94 02 3a 	jmp	0x7404	; 0x7404 <__fp_nan>
    717a:	0e f4       	brtc	.+2      	; 0x717e <__addsf3+0x28>
    717c:	e0 95       	com	r30
    717e:	e7 fb       	bst	r30, 7
    7180:	0c 94 fc 39 	jmp	0x73f8	; 0x73f8 <__fp_inf>

00007184 <__addsf3x>:
    7184:	e9 2f       	mov	r30, r25
    7186:	0e 94 24 3a 	call	0x7448	; 0x7448 <__fp_split3>
    718a:	58 f3       	brcs	.-42     	; 0x7162 <__addsf3+0xc>
    718c:	ba 17       	cp	r27, r26
    718e:	62 07       	cpc	r22, r18
    7190:	73 07       	cpc	r23, r19
    7192:	84 07       	cpc	r24, r20
    7194:	95 07       	cpc	r25, r21
    7196:	20 f0       	brcs	.+8      	; 0x71a0 <__addsf3x+0x1c>
    7198:	79 f4       	brne	.+30     	; 0x71b8 <__addsf3x+0x34>
    719a:	a6 f5       	brtc	.+104    	; 0x7204 <__addsf3x+0x80>
    719c:	0c 94 46 3a 	jmp	0x748c	; 0x748c <__fp_zero>
    71a0:	0e f4       	brtc	.+2      	; 0x71a4 <__addsf3x+0x20>
    71a2:	e0 95       	com	r30
    71a4:	0b 2e       	mov	r0, r27
    71a6:	ba 2f       	mov	r27, r26
    71a8:	a0 2d       	mov	r26, r0
    71aa:	0b 01       	movw	r0, r22
    71ac:	b9 01       	movw	r22, r18
    71ae:	90 01       	movw	r18, r0
    71b0:	0c 01       	movw	r0, r24
    71b2:	ca 01       	movw	r24, r20
    71b4:	a0 01       	movw	r20, r0
    71b6:	11 24       	eor	r1, r1
    71b8:	ff 27       	eor	r31, r31
    71ba:	59 1b       	sub	r21, r25
    71bc:	99 f0       	breq	.+38     	; 0x71e4 <__addsf3x+0x60>
    71be:	59 3f       	cpi	r21, 0xF9	; 249
    71c0:	50 f4       	brcc	.+20     	; 0x71d6 <__addsf3x+0x52>
    71c2:	50 3e       	cpi	r21, 0xE0	; 224
    71c4:	68 f1       	brcs	.+90     	; 0x7220 <__addsf3x+0x9c>
    71c6:	1a 16       	cp	r1, r26
    71c8:	f0 40       	sbci	r31, 0x00	; 0
    71ca:	a2 2f       	mov	r26, r18
    71cc:	23 2f       	mov	r18, r19
    71ce:	34 2f       	mov	r19, r20
    71d0:	44 27       	eor	r20, r20
    71d2:	58 5f       	subi	r21, 0xF8	; 248
    71d4:	f3 cf       	rjmp	.-26     	; 0x71bc <__addsf3x+0x38>
    71d6:	46 95       	lsr	r20
    71d8:	37 95       	ror	r19
    71da:	27 95       	ror	r18
    71dc:	a7 95       	ror	r26
    71de:	f0 40       	sbci	r31, 0x00	; 0
    71e0:	53 95       	inc	r21
    71e2:	c9 f7       	brne	.-14     	; 0x71d6 <__addsf3x+0x52>
    71e4:	7e f4       	brtc	.+30     	; 0x7204 <__addsf3x+0x80>
    71e6:	1f 16       	cp	r1, r31
    71e8:	ba 0b       	sbc	r27, r26
    71ea:	62 0b       	sbc	r22, r18
    71ec:	73 0b       	sbc	r23, r19
    71ee:	84 0b       	sbc	r24, r20
    71f0:	ba f0       	brmi	.+46     	; 0x7220 <__addsf3x+0x9c>
    71f2:	91 50       	subi	r25, 0x01	; 1
    71f4:	a1 f0       	breq	.+40     	; 0x721e <__addsf3x+0x9a>
    71f6:	ff 0f       	add	r31, r31
    71f8:	bb 1f       	adc	r27, r27
    71fa:	66 1f       	adc	r22, r22
    71fc:	77 1f       	adc	r23, r23
    71fe:	88 1f       	adc	r24, r24
    7200:	c2 f7       	brpl	.-16     	; 0x71f2 <__addsf3x+0x6e>
    7202:	0e c0       	rjmp	.+28     	; 0x7220 <__addsf3x+0x9c>
    7204:	ba 0f       	add	r27, r26
    7206:	62 1f       	adc	r22, r18
    7208:	73 1f       	adc	r23, r19
    720a:	84 1f       	adc	r24, r20
    720c:	48 f4       	brcc	.+18     	; 0x7220 <__addsf3x+0x9c>
    720e:	87 95       	ror	r24
    7210:	77 95       	ror	r23
    7212:	67 95       	ror	r22
    7214:	b7 95       	ror	r27
    7216:	f7 95       	ror	r31
    7218:	9e 3f       	cpi	r25, 0xFE	; 254
    721a:	08 f0       	brcs	.+2      	; 0x721e <__addsf3x+0x9a>
    721c:	b0 cf       	rjmp	.-160    	; 0x717e <__addsf3+0x28>
    721e:	93 95       	inc	r25
    7220:	88 0f       	add	r24, r24
    7222:	08 f0       	brcs	.+2      	; 0x7226 <__addsf3x+0xa2>
    7224:	99 27       	eor	r25, r25
    7226:	ee 0f       	add	r30, r30
    7228:	97 95       	ror	r25
    722a:	87 95       	ror	r24
    722c:	08 95       	ret

0000722e <__divsf3>:
    722e:	0e 94 2b 39 	call	0x7256	; 0x7256 <__divsf3x>
    7232:	0c 94 13 3a 	jmp	0x7426	; 0x7426 <__fp_round>
    7236:	0e 94 0c 3a 	call	0x7418	; 0x7418 <__fp_pscB>
    723a:	58 f0       	brcs	.+22     	; 0x7252 <__divsf3+0x24>
    723c:	0e 94 05 3a 	call	0x740a	; 0x740a <__fp_pscA>
    7240:	40 f0       	brcs	.+16     	; 0x7252 <__divsf3+0x24>
    7242:	29 f4       	brne	.+10     	; 0x724e <__divsf3+0x20>
    7244:	5f 3f       	cpi	r21, 0xFF	; 255
    7246:	29 f0       	breq	.+10     	; 0x7252 <__divsf3+0x24>
    7248:	0c 94 fc 39 	jmp	0x73f8	; 0x73f8 <__fp_inf>
    724c:	51 11       	cpse	r21, r1
    724e:	0c 94 47 3a 	jmp	0x748e	; 0x748e <__fp_szero>
    7252:	0c 94 02 3a 	jmp	0x7404	; 0x7404 <__fp_nan>

00007256 <__divsf3x>:
    7256:	0e 94 24 3a 	call	0x7448	; 0x7448 <__fp_split3>
    725a:	68 f3       	brcs	.-38     	; 0x7236 <__divsf3+0x8>

0000725c <__divsf3_pse>:
    725c:	99 23       	and	r25, r25
    725e:	b1 f3       	breq	.-20     	; 0x724c <__divsf3+0x1e>
    7260:	55 23       	and	r21, r21
    7262:	91 f3       	breq	.-28     	; 0x7248 <__divsf3+0x1a>
    7264:	95 1b       	sub	r25, r21
    7266:	55 0b       	sbc	r21, r21
    7268:	bb 27       	eor	r27, r27
    726a:	aa 27       	eor	r26, r26
    726c:	62 17       	cp	r22, r18
    726e:	73 07       	cpc	r23, r19
    7270:	84 07       	cpc	r24, r20
    7272:	38 f0       	brcs	.+14     	; 0x7282 <__divsf3_pse+0x26>
    7274:	9f 5f       	subi	r25, 0xFF	; 255
    7276:	5f 4f       	sbci	r21, 0xFF	; 255
    7278:	22 0f       	add	r18, r18
    727a:	33 1f       	adc	r19, r19
    727c:	44 1f       	adc	r20, r20
    727e:	aa 1f       	adc	r26, r26
    7280:	a9 f3       	breq	.-22     	; 0x726c <__divsf3_pse+0x10>
    7282:	35 d0       	rcall	.+106    	; 0x72ee <__divsf3_pse+0x92>
    7284:	0e 2e       	mov	r0, r30
    7286:	3a f0       	brmi	.+14     	; 0x7296 <__divsf3_pse+0x3a>
    7288:	e0 e8       	ldi	r30, 0x80	; 128
    728a:	32 d0       	rcall	.+100    	; 0x72f0 <__divsf3_pse+0x94>
    728c:	91 50       	subi	r25, 0x01	; 1
    728e:	50 40       	sbci	r21, 0x00	; 0
    7290:	e6 95       	lsr	r30
    7292:	00 1c       	adc	r0, r0
    7294:	ca f7       	brpl	.-14     	; 0x7288 <__divsf3_pse+0x2c>
    7296:	2b d0       	rcall	.+86     	; 0x72ee <__divsf3_pse+0x92>
    7298:	fe 2f       	mov	r31, r30
    729a:	29 d0       	rcall	.+82     	; 0x72ee <__divsf3_pse+0x92>
    729c:	66 0f       	add	r22, r22
    729e:	77 1f       	adc	r23, r23
    72a0:	88 1f       	adc	r24, r24
    72a2:	bb 1f       	adc	r27, r27
    72a4:	26 17       	cp	r18, r22
    72a6:	37 07       	cpc	r19, r23
    72a8:	48 07       	cpc	r20, r24
    72aa:	ab 07       	cpc	r26, r27
    72ac:	b0 e8       	ldi	r27, 0x80	; 128
    72ae:	09 f0       	breq	.+2      	; 0x72b2 <__divsf3_pse+0x56>
    72b0:	bb 0b       	sbc	r27, r27
    72b2:	80 2d       	mov	r24, r0
    72b4:	bf 01       	movw	r22, r30
    72b6:	ff 27       	eor	r31, r31
    72b8:	93 58       	subi	r25, 0x83	; 131
    72ba:	5f 4f       	sbci	r21, 0xFF	; 255
    72bc:	3a f0       	brmi	.+14     	; 0x72cc <__divsf3_pse+0x70>
    72be:	9e 3f       	cpi	r25, 0xFE	; 254
    72c0:	51 05       	cpc	r21, r1
    72c2:	78 f0       	brcs	.+30     	; 0x72e2 <__divsf3_pse+0x86>
    72c4:	0c 94 fc 39 	jmp	0x73f8	; 0x73f8 <__fp_inf>
    72c8:	0c 94 47 3a 	jmp	0x748e	; 0x748e <__fp_szero>
    72cc:	5f 3f       	cpi	r21, 0xFF	; 255
    72ce:	e4 f3       	brlt	.-8      	; 0x72c8 <__divsf3_pse+0x6c>
    72d0:	98 3e       	cpi	r25, 0xE8	; 232
    72d2:	d4 f3       	brlt	.-12     	; 0x72c8 <__divsf3_pse+0x6c>
    72d4:	86 95       	lsr	r24
    72d6:	77 95       	ror	r23
    72d8:	67 95       	ror	r22
    72da:	b7 95       	ror	r27
    72dc:	f7 95       	ror	r31
    72de:	9f 5f       	subi	r25, 0xFF	; 255
    72e0:	c9 f7       	brne	.-14     	; 0x72d4 <__divsf3_pse+0x78>
    72e2:	88 0f       	add	r24, r24
    72e4:	91 1d       	adc	r25, r1
    72e6:	96 95       	lsr	r25
    72e8:	87 95       	ror	r24
    72ea:	97 f9       	bld	r25, 7
    72ec:	08 95       	ret
    72ee:	e1 e0       	ldi	r30, 0x01	; 1
    72f0:	66 0f       	add	r22, r22
    72f2:	77 1f       	adc	r23, r23
    72f4:	88 1f       	adc	r24, r24
    72f6:	bb 1f       	adc	r27, r27
    72f8:	62 17       	cp	r22, r18
    72fa:	73 07       	cpc	r23, r19
    72fc:	84 07       	cpc	r24, r20
    72fe:	ba 07       	cpc	r27, r26
    7300:	20 f0       	brcs	.+8      	; 0x730a <__divsf3_pse+0xae>
    7302:	62 1b       	sub	r22, r18
    7304:	73 0b       	sbc	r23, r19
    7306:	84 0b       	sbc	r24, r20
    7308:	ba 0b       	sbc	r27, r26
    730a:	ee 1f       	adc	r30, r30
    730c:	88 f7       	brcc	.-30     	; 0x72f0 <__divsf3_pse+0x94>
    730e:	e0 95       	com	r30
    7310:	08 95       	ret

00007312 <__fixsfsi>:
    7312:	0e 94 90 39 	call	0x7320	; 0x7320 <__fixunssfsi>
    7316:	68 94       	set
    7318:	b1 11       	cpse	r27, r1
    731a:	0c 94 47 3a 	jmp	0x748e	; 0x748e <__fp_szero>
    731e:	08 95       	ret

00007320 <__fixunssfsi>:
    7320:	0e 94 2c 3a 	call	0x7458	; 0x7458 <__fp_splitA>
    7324:	88 f0       	brcs	.+34     	; 0x7348 <__fixunssfsi+0x28>
    7326:	9f 57       	subi	r25, 0x7F	; 127
    7328:	98 f0       	brcs	.+38     	; 0x7350 <__fixunssfsi+0x30>
    732a:	b9 2f       	mov	r27, r25
    732c:	99 27       	eor	r25, r25
    732e:	b7 51       	subi	r27, 0x17	; 23
    7330:	b0 f0       	brcs	.+44     	; 0x735e <__fixunssfsi+0x3e>
    7332:	e1 f0       	breq	.+56     	; 0x736c <__fixunssfsi+0x4c>
    7334:	66 0f       	add	r22, r22
    7336:	77 1f       	adc	r23, r23
    7338:	88 1f       	adc	r24, r24
    733a:	99 1f       	adc	r25, r25
    733c:	1a f0       	brmi	.+6      	; 0x7344 <__fixunssfsi+0x24>
    733e:	ba 95       	dec	r27
    7340:	c9 f7       	brne	.-14     	; 0x7334 <__fixunssfsi+0x14>
    7342:	14 c0       	rjmp	.+40     	; 0x736c <__fixunssfsi+0x4c>
    7344:	b1 30       	cpi	r27, 0x01	; 1
    7346:	91 f0       	breq	.+36     	; 0x736c <__fixunssfsi+0x4c>
    7348:	0e 94 46 3a 	call	0x748c	; 0x748c <__fp_zero>
    734c:	b1 e0       	ldi	r27, 0x01	; 1
    734e:	08 95       	ret
    7350:	0c 94 46 3a 	jmp	0x748c	; 0x748c <__fp_zero>
    7354:	67 2f       	mov	r22, r23
    7356:	78 2f       	mov	r23, r24
    7358:	88 27       	eor	r24, r24
    735a:	b8 5f       	subi	r27, 0xF8	; 248
    735c:	39 f0       	breq	.+14     	; 0x736c <__fixunssfsi+0x4c>
    735e:	b9 3f       	cpi	r27, 0xF9	; 249
    7360:	cc f3       	brlt	.-14     	; 0x7354 <__fixunssfsi+0x34>
    7362:	86 95       	lsr	r24
    7364:	77 95       	ror	r23
    7366:	67 95       	ror	r22
    7368:	b3 95       	inc	r27
    736a:	d9 f7       	brne	.-10     	; 0x7362 <__fixunssfsi+0x42>
    736c:	3e f4       	brtc	.+14     	; 0x737c <__fixunssfsi+0x5c>
    736e:	90 95       	com	r25
    7370:	80 95       	com	r24
    7372:	70 95       	com	r23
    7374:	61 95       	neg	r22
    7376:	7f 4f       	sbci	r23, 0xFF	; 255
    7378:	8f 4f       	sbci	r24, 0xFF	; 255
    737a:	9f 4f       	sbci	r25, 0xFF	; 255
    737c:	08 95       	ret

0000737e <__floatunsisf>:
    737e:	e8 94       	clt
    7380:	09 c0       	rjmp	.+18     	; 0x7394 <__floatsisf+0x12>

00007382 <__floatsisf>:
    7382:	97 fb       	bst	r25, 7
    7384:	3e f4       	brtc	.+14     	; 0x7394 <__floatsisf+0x12>
    7386:	90 95       	com	r25
    7388:	80 95       	com	r24
    738a:	70 95       	com	r23
    738c:	61 95       	neg	r22
    738e:	7f 4f       	sbci	r23, 0xFF	; 255
    7390:	8f 4f       	sbci	r24, 0xFF	; 255
    7392:	9f 4f       	sbci	r25, 0xFF	; 255
    7394:	99 23       	and	r25, r25
    7396:	a9 f0       	breq	.+42     	; 0x73c2 <__floatsisf+0x40>
    7398:	f9 2f       	mov	r31, r25
    739a:	96 e9       	ldi	r25, 0x96	; 150
    739c:	bb 27       	eor	r27, r27
    739e:	93 95       	inc	r25
    73a0:	f6 95       	lsr	r31
    73a2:	87 95       	ror	r24
    73a4:	77 95       	ror	r23
    73a6:	67 95       	ror	r22
    73a8:	b7 95       	ror	r27
    73aa:	f1 11       	cpse	r31, r1
    73ac:	f8 cf       	rjmp	.-16     	; 0x739e <__floatsisf+0x1c>
    73ae:	fa f4       	brpl	.+62     	; 0x73ee <__floatsisf+0x6c>
    73b0:	bb 0f       	add	r27, r27
    73b2:	11 f4       	brne	.+4      	; 0x73b8 <__floatsisf+0x36>
    73b4:	60 ff       	sbrs	r22, 0
    73b6:	1b c0       	rjmp	.+54     	; 0x73ee <__floatsisf+0x6c>
    73b8:	6f 5f       	subi	r22, 0xFF	; 255
    73ba:	7f 4f       	sbci	r23, 0xFF	; 255
    73bc:	8f 4f       	sbci	r24, 0xFF	; 255
    73be:	9f 4f       	sbci	r25, 0xFF	; 255
    73c0:	16 c0       	rjmp	.+44     	; 0x73ee <__floatsisf+0x6c>
    73c2:	88 23       	and	r24, r24
    73c4:	11 f0       	breq	.+4      	; 0x73ca <__floatsisf+0x48>
    73c6:	96 e9       	ldi	r25, 0x96	; 150
    73c8:	11 c0       	rjmp	.+34     	; 0x73ec <__floatsisf+0x6a>
    73ca:	77 23       	and	r23, r23
    73cc:	21 f0       	breq	.+8      	; 0x73d6 <__floatsisf+0x54>
    73ce:	9e e8       	ldi	r25, 0x8E	; 142
    73d0:	87 2f       	mov	r24, r23
    73d2:	76 2f       	mov	r23, r22
    73d4:	05 c0       	rjmp	.+10     	; 0x73e0 <__floatsisf+0x5e>
    73d6:	66 23       	and	r22, r22
    73d8:	71 f0       	breq	.+28     	; 0x73f6 <__floatsisf+0x74>
    73da:	96 e8       	ldi	r25, 0x86	; 134
    73dc:	86 2f       	mov	r24, r22
    73de:	70 e0       	ldi	r23, 0x00	; 0
    73e0:	60 e0       	ldi	r22, 0x00	; 0
    73e2:	2a f0       	brmi	.+10     	; 0x73ee <__floatsisf+0x6c>
    73e4:	9a 95       	dec	r25
    73e6:	66 0f       	add	r22, r22
    73e8:	77 1f       	adc	r23, r23
    73ea:	88 1f       	adc	r24, r24
    73ec:	da f7       	brpl	.-10     	; 0x73e4 <__floatsisf+0x62>
    73ee:	88 0f       	add	r24, r24
    73f0:	96 95       	lsr	r25
    73f2:	87 95       	ror	r24
    73f4:	97 f9       	bld	r25, 7
    73f6:	08 95       	ret

000073f8 <__fp_inf>:
    73f8:	97 f9       	bld	r25, 7
    73fa:	9f 67       	ori	r25, 0x7F	; 127
    73fc:	80 e8       	ldi	r24, 0x80	; 128
    73fe:	70 e0       	ldi	r23, 0x00	; 0
    7400:	60 e0       	ldi	r22, 0x00	; 0
    7402:	08 95       	ret

00007404 <__fp_nan>:
    7404:	9f ef       	ldi	r25, 0xFF	; 255
    7406:	80 ec       	ldi	r24, 0xC0	; 192
    7408:	08 95       	ret

0000740a <__fp_pscA>:
    740a:	00 24       	eor	r0, r0
    740c:	0a 94       	dec	r0
    740e:	16 16       	cp	r1, r22
    7410:	17 06       	cpc	r1, r23
    7412:	18 06       	cpc	r1, r24
    7414:	09 06       	cpc	r0, r25
    7416:	08 95       	ret

00007418 <__fp_pscB>:
    7418:	00 24       	eor	r0, r0
    741a:	0a 94       	dec	r0
    741c:	12 16       	cp	r1, r18
    741e:	13 06       	cpc	r1, r19
    7420:	14 06       	cpc	r1, r20
    7422:	05 06       	cpc	r0, r21
    7424:	08 95       	ret

00007426 <__fp_round>:
    7426:	09 2e       	mov	r0, r25
    7428:	03 94       	inc	r0
    742a:	00 0c       	add	r0, r0
    742c:	11 f4       	brne	.+4      	; 0x7432 <__fp_round+0xc>
    742e:	88 23       	and	r24, r24
    7430:	52 f0       	brmi	.+20     	; 0x7446 <__fp_round+0x20>
    7432:	bb 0f       	add	r27, r27
    7434:	40 f4       	brcc	.+16     	; 0x7446 <__fp_round+0x20>
    7436:	bf 2b       	or	r27, r31
    7438:	11 f4       	brne	.+4      	; 0x743e <__fp_round+0x18>
    743a:	60 ff       	sbrs	r22, 0
    743c:	04 c0       	rjmp	.+8      	; 0x7446 <__fp_round+0x20>
    743e:	6f 5f       	subi	r22, 0xFF	; 255
    7440:	7f 4f       	sbci	r23, 0xFF	; 255
    7442:	8f 4f       	sbci	r24, 0xFF	; 255
    7444:	9f 4f       	sbci	r25, 0xFF	; 255
    7446:	08 95       	ret

00007448 <__fp_split3>:
    7448:	57 fd       	sbrc	r21, 7
    744a:	90 58       	subi	r25, 0x80	; 128
    744c:	44 0f       	add	r20, r20
    744e:	55 1f       	adc	r21, r21
    7450:	59 f0       	breq	.+22     	; 0x7468 <__fp_splitA+0x10>
    7452:	5f 3f       	cpi	r21, 0xFF	; 255
    7454:	71 f0       	breq	.+28     	; 0x7472 <__fp_splitA+0x1a>
    7456:	47 95       	ror	r20

00007458 <__fp_splitA>:
    7458:	88 0f       	add	r24, r24
    745a:	97 fb       	bst	r25, 7
    745c:	99 1f       	adc	r25, r25
    745e:	61 f0       	breq	.+24     	; 0x7478 <__fp_splitA+0x20>
    7460:	9f 3f       	cpi	r25, 0xFF	; 255
    7462:	79 f0       	breq	.+30     	; 0x7482 <__fp_splitA+0x2a>
    7464:	87 95       	ror	r24
    7466:	08 95       	ret
    7468:	12 16       	cp	r1, r18
    746a:	13 06       	cpc	r1, r19
    746c:	14 06       	cpc	r1, r20
    746e:	55 1f       	adc	r21, r21
    7470:	f2 cf       	rjmp	.-28     	; 0x7456 <__fp_split3+0xe>
    7472:	46 95       	lsr	r20
    7474:	f1 df       	rcall	.-30     	; 0x7458 <__fp_splitA>
    7476:	08 c0       	rjmp	.+16     	; 0x7488 <__fp_splitA+0x30>
    7478:	16 16       	cp	r1, r22
    747a:	17 06       	cpc	r1, r23
    747c:	18 06       	cpc	r1, r24
    747e:	99 1f       	adc	r25, r25
    7480:	f1 cf       	rjmp	.-30     	; 0x7464 <__fp_splitA+0xc>
    7482:	86 95       	lsr	r24
    7484:	71 05       	cpc	r23, r1
    7486:	61 05       	cpc	r22, r1
    7488:	08 94       	sec
    748a:	08 95       	ret

0000748c <__fp_zero>:
    748c:	e8 94       	clt

0000748e <__fp_szero>:
    748e:	bb 27       	eor	r27, r27
    7490:	66 27       	eor	r22, r22
    7492:	77 27       	eor	r23, r23
    7494:	cb 01       	movw	r24, r22
    7496:	97 f9       	bld	r25, 7
    7498:	08 95       	ret

0000749a <__mulsf3>:
    749a:	0e 94 60 3a 	call	0x74c0	; 0x74c0 <__mulsf3x>
    749e:	0c 94 13 3a 	jmp	0x7426	; 0x7426 <__fp_round>
    74a2:	0e 94 05 3a 	call	0x740a	; 0x740a <__fp_pscA>
    74a6:	38 f0       	brcs	.+14     	; 0x74b6 <__mulsf3+0x1c>
    74a8:	0e 94 0c 3a 	call	0x7418	; 0x7418 <__fp_pscB>
    74ac:	20 f0       	brcs	.+8      	; 0x74b6 <__mulsf3+0x1c>
    74ae:	95 23       	and	r25, r21
    74b0:	11 f0       	breq	.+4      	; 0x74b6 <__mulsf3+0x1c>
    74b2:	0c 94 fc 39 	jmp	0x73f8	; 0x73f8 <__fp_inf>
    74b6:	0c 94 02 3a 	jmp	0x7404	; 0x7404 <__fp_nan>
    74ba:	11 24       	eor	r1, r1
    74bc:	0c 94 47 3a 	jmp	0x748e	; 0x748e <__fp_szero>

000074c0 <__mulsf3x>:
    74c0:	0e 94 24 3a 	call	0x7448	; 0x7448 <__fp_split3>
    74c4:	70 f3       	brcs	.-36     	; 0x74a2 <__mulsf3+0x8>

000074c6 <__mulsf3_pse>:
    74c6:	95 9f       	mul	r25, r21
    74c8:	c1 f3       	breq	.-16     	; 0x74ba <__mulsf3+0x20>
    74ca:	95 0f       	add	r25, r21
    74cc:	50 e0       	ldi	r21, 0x00	; 0
    74ce:	55 1f       	adc	r21, r21
    74d0:	62 9f       	mul	r22, r18
    74d2:	f0 01       	movw	r30, r0
    74d4:	72 9f       	mul	r23, r18
    74d6:	bb 27       	eor	r27, r27
    74d8:	f0 0d       	add	r31, r0
    74da:	b1 1d       	adc	r27, r1
    74dc:	63 9f       	mul	r22, r19
    74de:	aa 27       	eor	r26, r26
    74e0:	f0 0d       	add	r31, r0
    74e2:	b1 1d       	adc	r27, r1
    74e4:	aa 1f       	adc	r26, r26
    74e6:	64 9f       	mul	r22, r20
    74e8:	66 27       	eor	r22, r22
    74ea:	b0 0d       	add	r27, r0
    74ec:	a1 1d       	adc	r26, r1
    74ee:	66 1f       	adc	r22, r22
    74f0:	82 9f       	mul	r24, r18
    74f2:	22 27       	eor	r18, r18
    74f4:	b0 0d       	add	r27, r0
    74f6:	a1 1d       	adc	r26, r1
    74f8:	62 1f       	adc	r22, r18
    74fa:	73 9f       	mul	r23, r19
    74fc:	b0 0d       	add	r27, r0
    74fe:	a1 1d       	adc	r26, r1
    7500:	62 1f       	adc	r22, r18
    7502:	83 9f       	mul	r24, r19
    7504:	a0 0d       	add	r26, r0
    7506:	61 1d       	adc	r22, r1
    7508:	22 1f       	adc	r18, r18
    750a:	74 9f       	mul	r23, r20
    750c:	33 27       	eor	r19, r19
    750e:	a0 0d       	add	r26, r0
    7510:	61 1d       	adc	r22, r1
    7512:	23 1f       	adc	r18, r19
    7514:	84 9f       	mul	r24, r20
    7516:	60 0d       	add	r22, r0
    7518:	21 1d       	adc	r18, r1
    751a:	82 2f       	mov	r24, r18
    751c:	76 2f       	mov	r23, r22
    751e:	6a 2f       	mov	r22, r26
    7520:	11 24       	eor	r1, r1
    7522:	9f 57       	subi	r25, 0x7F	; 127
    7524:	50 40       	sbci	r21, 0x00	; 0
    7526:	9a f0       	brmi	.+38     	; 0x754e <__mulsf3_pse+0x88>
    7528:	f1 f0       	breq	.+60     	; 0x7566 <__mulsf3_pse+0xa0>
    752a:	88 23       	and	r24, r24
    752c:	4a f0       	brmi	.+18     	; 0x7540 <__mulsf3_pse+0x7a>
    752e:	ee 0f       	add	r30, r30
    7530:	ff 1f       	adc	r31, r31
    7532:	bb 1f       	adc	r27, r27
    7534:	66 1f       	adc	r22, r22
    7536:	77 1f       	adc	r23, r23
    7538:	88 1f       	adc	r24, r24
    753a:	91 50       	subi	r25, 0x01	; 1
    753c:	50 40       	sbci	r21, 0x00	; 0
    753e:	a9 f7       	brne	.-22     	; 0x752a <__mulsf3_pse+0x64>
    7540:	9e 3f       	cpi	r25, 0xFE	; 254
    7542:	51 05       	cpc	r21, r1
    7544:	80 f0       	brcs	.+32     	; 0x7566 <__mulsf3_pse+0xa0>
    7546:	0c 94 fc 39 	jmp	0x73f8	; 0x73f8 <__fp_inf>
    754a:	0c 94 47 3a 	jmp	0x748e	; 0x748e <__fp_szero>
    754e:	5f 3f       	cpi	r21, 0xFF	; 255
    7550:	e4 f3       	brlt	.-8      	; 0x754a <__mulsf3_pse+0x84>
    7552:	98 3e       	cpi	r25, 0xE8	; 232
    7554:	d4 f3       	brlt	.-12     	; 0x754a <__mulsf3_pse+0x84>
    7556:	86 95       	lsr	r24
    7558:	77 95       	ror	r23
    755a:	67 95       	ror	r22
    755c:	b7 95       	ror	r27
    755e:	f7 95       	ror	r31
    7560:	e7 95       	ror	r30
    7562:	9f 5f       	subi	r25, 0xFF	; 255
    7564:	c1 f7       	brne	.-16     	; 0x7556 <__mulsf3_pse+0x90>
    7566:	fe 2b       	or	r31, r30
    7568:	88 0f       	add	r24, r24
    756a:	91 1d       	adc	r25, r1
    756c:	96 95       	lsr	r25
    756e:	87 95       	ror	r24
    7570:	97 f9       	bld	r25, 7
    7572:	08 95       	ret

00007574 <__udivmodqi4>:
    7574:	99 1b       	sub	r25, r25
    7576:	79 e0       	ldi	r23, 0x09	; 9
    7578:	04 c0       	rjmp	.+8      	; 0x7582 <__udivmodqi4_ep>

0000757a <__udivmodqi4_loop>:
    757a:	99 1f       	adc	r25, r25
    757c:	96 17       	cp	r25, r22
    757e:	08 f0       	brcs	.+2      	; 0x7582 <__udivmodqi4_ep>
    7580:	96 1b       	sub	r25, r22

00007582 <__udivmodqi4_ep>:
    7582:	88 1f       	adc	r24, r24
    7584:	7a 95       	dec	r23
    7586:	c9 f7       	brne	.-14     	; 0x757a <__udivmodqi4_loop>
    7588:	80 95       	com	r24
    758a:	08 95       	ret

0000758c <__divmodhi4>:
    758c:	97 fb       	bst	r25, 7
    758e:	07 2e       	mov	r0, r23
    7590:	16 f4       	brtc	.+4      	; 0x7596 <__divmodhi4+0xa>
    7592:	00 94       	com	r0
    7594:	07 d0       	rcall	.+14     	; 0x75a4 <__divmodhi4_neg1>
    7596:	77 fd       	sbrc	r23, 7
    7598:	09 d0       	rcall	.+18     	; 0x75ac <__divmodhi4_neg2>
    759a:	0e 94 ef 3a 	call	0x75de	; 0x75de <__udivmodhi4>
    759e:	07 fc       	sbrc	r0, 7
    75a0:	05 d0       	rcall	.+10     	; 0x75ac <__divmodhi4_neg2>
    75a2:	3e f4       	brtc	.+14     	; 0x75b2 <__divmodhi4_exit>

000075a4 <__divmodhi4_neg1>:
    75a4:	90 95       	com	r25
    75a6:	81 95       	neg	r24
    75a8:	9f 4f       	sbci	r25, 0xFF	; 255
    75aa:	08 95       	ret

000075ac <__divmodhi4_neg2>:
    75ac:	70 95       	com	r23
    75ae:	61 95       	neg	r22
    75b0:	7f 4f       	sbci	r23, 0xFF	; 255

000075b2 <__divmodhi4_exit>:
    75b2:	08 95       	ret

000075b4 <__tablejump2__>:
    75b4:	ee 0f       	add	r30, r30
    75b6:	ff 1f       	adc	r31, r31
    75b8:	05 90       	lpm	r0, Z+
    75ba:	f4 91       	lpm	r31, Z
    75bc:	e0 2d       	mov	r30, r0
    75be:	09 94       	ijmp

000075c0 <__umulhisi3>:
    75c0:	a2 9f       	mul	r26, r18
    75c2:	b0 01       	movw	r22, r0
    75c4:	b3 9f       	mul	r27, r19
    75c6:	c0 01       	movw	r24, r0
    75c8:	a3 9f       	mul	r26, r19
    75ca:	70 0d       	add	r23, r0
    75cc:	81 1d       	adc	r24, r1
    75ce:	11 24       	eor	r1, r1
    75d0:	91 1d       	adc	r25, r1
    75d2:	b2 9f       	mul	r27, r18
    75d4:	70 0d       	add	r23, r0
    75d6:	81 1d       	adc	r24, r1
    75d8:	11 24       	eor	r1, r1
    75da:	91 1d       	adc	r25, r1
    75dc:	08 95       	ret

000075de <__udivmodhi4>:
    75de:	aa 1b       	sub	r26, r26
    75e0:	bb 1b       	sub	r27, r27
    75e2:	51 e1       	ldi	r21, 0x11	; 17
    75e4:	07 c0       	rjmp	.+14     	; 0x75f4 <__udivmodhi4_ep>

000075e6 <__udivmodhi4_loop>:
    75e6:	aa 1f       	adc	r26, r26
    75e8:	bb 1f       	adc	r27, r27
    75ea:	a6 17       	cp	r26, r22
    75ec:	b7 07       	cpc	r27, r23
    75ee:	10 f0       	brcs	.+4      	; 0x75f4 <__udivmodhi4_ep>
    75f0:	a6 1b       	sub	r26, r22
    75f2:	b7 0b       	sbc	r27, r23

000075f4 <__udivmodhi4_ep>:
    75f4:	88 1f       	adc	r24, r24
    75f6:	99 1f       	adc	r25, r25
    75f8:	5a 95       	dec	r21
    75fa:	a9 f7       	brne	.-22     	; 0x75e6 <__udivmodhi4_loop>
    75fc:	80 95       	com	r24
    75fe:	90 95       	com	r25
    7600:	bc 01       	movw	r22, r24
    7602:	cd 01       	movw	r24, r26
    7604:	08 95       	ret

00007606 <strcpy_P>:
    7606:	fb 01       	movw	r30, r22
    7608:	dc 01       	movw	r26, r24
    760a:	05 90       	lpm	r0, Z+
    760c:	0d 92       	st	X+, r0
    760e:	00 20       	and	r0, r0
    7610:	e1 f7       	brne	.-8      	; 0x760a <strcpy_P+0x4>
    7612:	08 95       	ret

00007614 <sprintf>:
    7614:	ae e0       	ldi	r26, 0x0E	; 14
    7616:	b0 e0       	ldi	r27, 0x00	; 0
    7618:	e0 e1       	ldi	r30, 0x10	; 16
    761a:	fb e3       	ldi	r31, 0x3B	; 59
    761c:	0c 94 10 3e 	jmp	0x7c20	; 0x7c20 <__prologue_saves__+0x1c>
    7620:	0d 89       	ldd	r16, Y+21	; 0x15
    7622:	1e 89       	ldd	r17, Y+22	; 0x16
    7624:	86 e0       	ldi	r24, 0x06	; 6
    7626:	8c 83       	std	Y+4, r24	; 0x04
    7628:	1a 83       	std	Y+2, r17	; 0x02
    762a:	09 83       	std	Y+1, r16	; 0x01
    762c:	8f ef       	ldi	r24, 0xFF	; 255
    762e:	9f e7       	ldi	r25, 0x7F	; 127
    7630:	9e 83       	std	Y+6, r25	; 0x06
    7632:	8d 83       	std	Y+5, r24	; 0x05
    7634:	ae 01       	movw	r20, r28
    7636:	47 5e       	subi	r20, 0xE7	; 231
    7638:	5f 4f       	sbci	r21, 0xFF	; 255
    763a:	6f 89       	ldd	r22, Y+23	; 0x17
    763c:	78 8d       	ldd	r23, Y+24	; 0x18
    763e:	ce 01       	movw	r24, r28
    7640:	01 96       	adiw	r24, 0x01	; 1
    7642:	0e 94 2c 3b 	call	0x7658	; 0x7658 <vfprintf>
    7646:	ef 81       	ldd	r30, Y+7	; 0x07
    7648:	f8 85       	ldd	r31, Y+8	; 0x08
    764a:	e0 0f       	add	r30, r16
    764c:	f1 1f       	adc	r31, r17
    764e:	10 82       	st	Z, r1
    7650:	2e 96       	adiw	r28, 0x0e	; 14
    7652:	e4 e0       	ldi	r30, 0x04	; 4
    7654:	0c 94 2c 3e 	jmp	0x7c58	; 0x7c58 <__epilogue_restores__+0x1c>

00007658 <vfprintf>:
    7658:	ab e0       	ldi	r26, 0x0B	; 11
    765a:	b0 e0       	ldi	r27, 0x00	; 0
    765c:	e2 e3       	ldi	r30, 0x32	; 50
    765e:	fb e3       	ldi	r31, 0x3B	; 59
    7660:	0c 94 02 3e 	jmp	0x7c04	; 0x7c04 <__prologue_saves__>
    7664:	6c 01       	movw	r12, r24
    7666:	7b 01       	movw	r14, r22
    7668:	8a 01       	movw	r16, r20
    766a:	fc 01       	movw	r30, r24
    766c:	17 82       	std	Z+7, r1	; 0x07
    766e:	16 82       	std	Z+6, r1	; 0x06
    7670:	83 81       	ldd	r24, Z+3	; 0x03
    7672:	81 ff       	sbrs	r24, 1
    7674:	cc c1       	rjmp	.+920    	; 0x7a0e <vfprintf+0x3b6>
    7676:	ce 01       	movw	r24, r28
    7678:	01 96       	adiw	r24, 0x01	; 1
    767a:	3c 01       	movw	r6, r24
    767c:	f6 01       	movw	r30, r12
    767e:	93 81       	ldd	r25, Z+3	; 0x03
    7680:	f7 01       	movw	r30, r14
    7682:	93 fd       	sbrc	r25, 3
    7684:	85 91       	lpm	r24, Z+
    7686:	93 ff       	sbrs	r25, 3
    7688:	81 91       	ld	r24, Z+
    768a:	7f 01       	movw	r14, r30
    768c:	88 23       	and	r24, r24
    768e:	09 f4       	brne	.+2      	; 0x7692 <vfprintf+0x3a>
    7690:	ba c1       	rjmp	.+884    	; 0x7a06 <vfprintf+0x3ae>
    7692:	85 32       	cpi	r24, 0x25	; 37
    7694:	39 f4       	brne	.+14     	; 0x76a4 <vfprintf+0x4c>
    7696:	93 fd       	sbrc	r25, 3
    7698:	85 91       	lpm	r24, Z+
    769a:	93 ff       	sbrs	r25, 3
    769c:	81 91       	ld	r24, Z+
    769e:	7f 01       	movw	r14, r30
    76a0:	85 32       	cpi	r24, 0x25	; 37
    76a2:	29 f4       	brne	.+10     	; 0x76ae <vfprintf+0x56>
    76a4:	b6 01       	movw	r22, r12
    76a6:	90 e0       	ldi	r25, 0x00	; 0
    76a8:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    76ac:	e7 cf       	rjmp	.-50     	; 0x767c <vfprintf+0x24>
    76ae:	91 2c       	mov	r9, r1
    76b0:	21 2c       	mov	r2, r1
    76b2:	31 2c       	mov	r3, r1
    76b4:	ff e1       	ldi	r31, 0x1F	; 31
    76b6:	f3 15       	cp	r31, r3
    76b8:	d8 f0       	brcs	.+54     	; 0x76f0 <vfprintf+0x98>
    76ba:	8b 32       	cpi	r24, 0x2B	; 43
    76bc:	79 f0       	breq	.+30     	; 0x76dc <vfprintf+0x84>
    76be:	38 f4       	brcc	.+14     	; 0x76ce <vfprintf+0x76>
    76c0:	80 32       	cpi	r24, 0x20	; 32
    76c2:	79 f0       	breq	.+30     	; 0x76e2 <vfprintf+0x8a>
    76c4:	83 32       	cpi	r24, 0x23	; 35
    76c6:	a1 f4       	brne	.+40     	; 0x76f0 <vfprintf+0x98>
    76c8:	23 2d       	mov	r18, r3
    76ca:	20 61       	ori	r18, 0x10	; 16
    76cc:	1d c0       	rjmp	.+58     	; 0x7708 <vfprintf+0xb0>
    76ce:	8d 32       	cpi	r24, 0x2D	; 45
    76d0:	61 f0       	breq	.+24     	; 0x76ea <vfprintf+0x92>
    76d2:	80 33       	cpi	r24, 0x30	; 48
    76d4:	69 f4       	brne	.+26     	; 0x76f0 <vfprintf+0x98>
    76d6:	23 2d       	mov	r18, r3
    76d8:	21 60       	ori	r18, 0x01	; 1
    76da:	16 c0       	rjmp	.+44     	; 0x7708 <vfprintf+0xb0>
    76dc:	83 2d       	mov	r24, r3
    76de:	82 60       	ori	r24, 0x02	; 2
    76e0:	38 2e       	mov	r3, r24
    76e2:	e3 2d       	mov	r30, r3
    76e4:	e4 60       	ori	r30, 0x04	; 4
    76e6:	3e 2e       	mov	r3, r30
    76e8:	2a c0       	rjmp	.+84     	; 0x773e <vfprintf+0xe6>
    76ea:	f3 2d       	mov	r31, r3
    76ec:	f8 60       	ori	r31, 0x08	; 8
    76ee:	1d c0       	rjmp	.+58     	; 0x772a <vfprintf+0xd2>
    76f0:	37 fc       	sbrc	r3, 7
    76f2:	2d c0       	rjmp	.+90     	; 0x774e <vfprintf+0xf6>
    76f4:	20 ed       	ldi	r18, 0xD0	; 208
    76f6:	28 0f       	add	r18, r24
    76f8:	2a 30       	cpi	r18, 0x0A	; 10
    76fa:	40 f0       	brcs	.+16     	; 0x770c <vfprintf+0xb4>
    76fc:	8e 32       	cpi	r24, 0x2E	; 46
    76fe:	b9 f4       	brne	.+46     	; 0x772e <vfprintf+0xd6>
    7700:	36 fc       	sbrc	r3, 6
    7702:	81 c1       	rjmp	.+770    	; 0x7a06 <vfprintf+0x3ae>
    7704:	23 2d       	mov	r18, r3
    7706:	20 64       	ori	r18, 0x40	; 64
    7708:	32 2e       	mov	r3, r18
    770a:	19 c0       	rjmp	.+50     	; 0x773e <vfprintf+0xe6>
    770c:	36 fe       	sbrs	r3, 6
    770e:	06 c0       	rjmp	.+12     	; 0x771c <vfprintf+0xc4>
    7710:	8a e0       	ldi	r24, 0x0A	; 10
    7712:	98 9e       	mul	r9, r24
    7714:	20 0d       	add	r18, r0
    7716:	11 24       	eor	r1, r1
    7718:	92 2e       	mov	r9, r18
    771a:	11 c0       	rjmp	.+34     	; 0x773e <vfprintf+0xe6>
    771c:	ea e0       	ldi	r30, 0x0A	; 10
    771e:	2e 9e       	mul	r2, r30
    7720:	20 0d       	add	r18, r0
    7722:	11 24       	eor	r1, r1
    7724:	22 2e       	mov	r2, r18
    7726:	f3 2d       	mov	r31, r3
    7728:	f0 62       	ori	r31, 0x20	; 32
    772a:	3f 2e       	mov	r3, r31
    772c:	08 c0       	rjmp	.+16     	; 0x773e <vfprintf+0xe6>
    772e:	8c 36       	cpi	r24, 0x6C	; 108
    7730:	21 f4       	brne	.+8      	; 0x773a <vfprintf+0xe2>
    7732:	83 2d       	mov	r24, r3
    7734:	80 68       	ori	r24, 0x80	; 128
    7736:	38 2e       	mov	r3, r24
    7738:	02 c0       	rjmp	.+4      	; 0x773e <vfprintf+0xe6>
    773a:	88 36       	cpi	r24, 0x68	; 104
    773c:	41 f4       	brne	.+16     	; 0x774e <vfprintf+0xf6>
    773e:	f7 01       	movw	r30, r14
    7740:	93 fd       	sbrc	r25, 3
    7742:	85 91       	lpm	r24, Z+
    7744:	93 ff       	sbrs	r25, 3
    7746:	81 91       	ld	r24, Z+
    7748:	7f 01       	movw	r14, r30
    774a:	81 11       	cpse	r24, r1
    774c:	b3 cf       	rjmp	.-154    	; 0x76b4 <vfprintf+0x5c>
    774e:	98 2f       	mov	r25, r24
    7750:	9f 7d       	andi	r25, 0xDF	; 223
    7752:	95 54       	subi	r25, 0x45	; 69
    7754:	93 30       	cpi	r25, 0x03	; 3
    7756:	28 f4       	brcc	.+10     	; 0x7762 <vfprintf+0x10a>
    7758:	0c 5f       	subi	r16, 0xFC	; 252
    775a:	1f 4f       	sbci	r17, 0xFF	; 255
    775c:	9f e3       	ldi	r25, 0x3F	; 63
    775e:	99 83       	std	Y+1, r25	; 0x01
    7760:	0d c0       	rjmp	.+26     	; 0x777c <vfprintf+0x124>
    7762:	83 36       	cpi	r24, 0x63	; 99
    7764:	31 f0       	breq	.+12     	; 0x7772 <vfprintf+0x11a>
    7766:	83 37       	cpi	r24, 0x73	; 115
    7768:	71 f0       	breq	.+28     	; 0x7786 <vfprintf+0x12e>
    776a:	83 35       	cpi	r24, 0x53	; 83
    776c:	09 f0       	breq	.+2      	; 0x7770 <vfprintf+0x118>
    776e:	59 c0       	rjmp	.+178    	; 0x7822 <vfprintf+0x1ca>
    7770:	21 c0       	rjmp	.+66     	; 0x77b4 <vfprintf+0x15c>
    7772:	f8 01       	movw	r30, r16
    7774:	80 81       	ld	r24, Z
    7776:	89 83       	std	Y+1, r24	; 0x01
    7778:	0e 5f       	subi	r16, 0xFE	; 254
    777a:	1f 4f       	sbci	r17, 0xFF	; 255
    777c:	88 24       	eor	r8, r8
    777e:	83 94       	inc	r8
    7780:	91 2c       	mov	r9, r1
    7782:	53 01       	movw	r10, r6
    7784:	13 c0       	rjmp	.+38     	; 0x77ac <vfprintf+0x154>
    7786:	28 01       	movw	r4, r16
    7788:	f2 e0       	ldi	r31, 0x02	; 2
    778a:	4f 0e       	add	r4, r31
    778c:	51 1c       	adc	r5, r1
    778e:	f8 01       	movw	r30, r16
    7790:	a0 80       	ld	r10, Z
    7792:	b1 80       	ldd	r11, Z+1	; 0x01
    7794:	36 fe       	sbrs	r3, 6
    7796:	03 c0       	rjmp	.+6      	; 0x779e <vfprintf+0x146>
    7798:	69 2d       	mov	r22, r9
    779a:	70 e0       	ldi	r23, 0x00	; 0
    779c:	02 c0       	rjmp	.+4      	; 0x77a2 <vfprintf+0x14a>
    779e:	6f ef       	ldi	r22, 0xFF	; 255
    77a0:	7f ef       	ldi	r23, 0xFF	; 255
    77a2:	c5 01       	movw	r24, r10
    77a4:	0e 94 18 3d 	call	0x7a30	; 0x7a30 <strnlen>
    77a8:	4c 01       	movw	r8, r24
    77aa:	82 01       	movw	r16, r4
    77ac:	f3 2d       	mov	r31, r3
    77ae:	ff 77       	andi	r31, 0x7F	; 127
    77b0:	3f 2e       	mov	r3, r31
    77b2:	16 c0       	rjmp	.+44     	; 0x77e0 <vfprintf+0x188>
    77b4:	28 01       	movw	r4, r16
    77b6:	22 e0       	ldi	r18, 0x02	; 2
    77b8:	42 0e       	add	r4, r18
    77ba:	51 1c       	adc	r5, r1
    77bc:	f8 01       	movw	r30, r16
    77be:	a0 80       	ld	r10, Z
    77c0:	b1 80       	ldd	r11, Z+1	; 0x01
    77c2:	36 fe       	sbrs	r3, 6
    77c4:	03 c0       	rjmp	.+6      	; 0x77cc <vfprintf+0x174>
    77c6:	69 2d       	mov	r22, r9
    77c8:	70 e0       	ldi	r23, 0x00	; 0
    77ca:	02 c0       	rjmp	.+4      	; 0x77d0 <vfprintf+0x178>
    77cc:	6f ef       	ldi	r22, 0xFF	; 255
    77ce:	7f ef       	ldi	r23, 0xFF	; 255
    77d0:	c5 01       	movw	r24, r10
    77d2:	0e 94 0d 3d 	call	0x7a1a	; 0x7a1a <strnlen_P>
    77d6:	4c 01       	movw	r8, r24
    77d8:	f3 2d       	mov	r31, r3
    77da:	f0 68       	ori	r31, 0x80	; 128
    77dc:	3f 2e       	mov	r3, r31
    77de:	82 01       	movw	r16, r4
    77e0:	33 fc       	sbrc	r3, 3
    77e2:	1b c0       	rjmp	.+54     	; 0x781a <vfprintf+0x1c2>
    77e4:	82 2d       	mov	r24, r2
    77e6:	90 e0       	ldi	r25, 0x00	; 0
    77e8:	88 16       	cp	r8, r24
    77ea:	99 06       	cpc	r9, r25
    77ec:	b0 f4       	brcc	.+44     	; 0x781a <vfprintf+0x1c2>
    77ee:	b6 01       	movw	r22, r12
    77f0:	80 e2       	ldi	r24, 0x20	; 32
    77f2:	90 e0       	ldi	r25, 0x00	; 0
    77f4:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    77f8:	2a 94       	dec	r2
    77fa:	f4 cf       	rjmp	.-24     	; 0x77e4 <vfprintf+0x18c>
    77fc:	f5 01       	movw	r30, r10
    77fe:	37 fc       	sbrc	r3, 7
    7800:	85 91       	lpm	r24, Z+
    7802:	37 fe       	sbrs	r3, 7
    7804:	81 91       	ld	r24, Z+
    7806:	5f 01       	movw	r10, r30
    7808:	b6 01       	movw	r22, r12
    780a:	90 e0       	ldi	r25, 0x00	; 0
    780c:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    7810:	21 10       	cpse	r2, r1
    7812:	2a 94       	dec	r2
    7814:	21 e0       	ldi	r18, 0x01	; 1
    7816:	82 1a       	sub	r8, r18
    7818:	91 08       	sbc	r9, r1
    781a:	81 14       	cp	r8, r1
    781c:	91 04       	cpc	r9, r1
    781e:	71 f7       	brne	.-36     	; 0x77fc <vfprintf+0x1a4>
    7820:	e8 c0       	rjmp	.+464    	; 0x79f2 <vfprintf+0x39a>
    7822:	84 36       	cpi	r24, 0x64	; 100
    7824:	11 f0       	breq	.+4      	; 0x782a <vfprintf+0x1d2>
    7826:	89 36       	cpi	r24, 0x69	; 105
    7828:	41 f5       	brne	.+80     	; 0x787a <vfprintf+0x222>
    782a:	f8 01       	movw	r30, r16
    782c:	37 fe       	sbrs	r3, 7
    782e:	07 c0       	rjmp	.+14     	; 0x783e <vfprintf+0x1e6>
    7830:	60 81       	ld	r22, Z
    7832:	71 81       	ldd	r23, Z+1	; 0x01
    7834:	82 81       	ldd	r24, Z+2	; 0x02
    7836:	93 81       	ldd	r25, Z+3	; 0x03
    7838:	0c 5f       	subi	r16, 0xFC	; 252
    783a:	1f 4f       	sbci	r17, 0xFF	; 255
    783c:	08 c0       	rjmp	.+16     	; 0x784e <vfprintf+0x1f6>
    783e:	60 81       	ld	r22, Z
    7840:	71 81       	ldd	r23, Z+1	; 0x01
    7842:	07 2e       	mov	r0, r23
    7844:	00 0c       	add	r0, r0
    7846:	88 0b       	sbc	r24, r24
    7848:	99 0b       	sbc	r25, r25
    784a:	0e 5f       	subi	r16, 0xFE	; 254
    784c:	1f 4f       	sbci	r17, 0xFF	; 255
    784e:	f3 2d       	mov	r31, r3
    7850:	ff 76       	andi	r31, 0x6F	; 111
    7852:	3f 2e       	mov	r3, r31
    7854:	97 ff       	sbrs	r25, 7
    7856:	09 c0       	rjmp	.+18     	; 0x786a <vfprintf+0x212>
    7858:	90 95       	com	r25
    785a:	80 95       	com	r24
    785c:	70 95       	com	r23
    785e:	61 95       	neg	r22
    7860:	7f 4f       	sbci	r23, 0xFF	; 255
    7862:	8f 4f       	sbci	r24, 0xFF	; 255
    7864:	9f 4f       	sbci	r25, 0xFF	; 255
    7866:	f0 68       	ori	r31, 0x80	; 128
    7868:	3f 2e       	mov	r3, r31
    786a:	2a e0       	ldi	r18, 0x0A	; 10
    786c:	30 e0       	ldi	r19, 0x00	; 0
    786e:	a3 01       	movw	r20, r6
    7870:	0e 94 5f 3d 	call	0x7abe	; 0x7abe <__ultoa_invert>
    7874:	88 2e       	mov	r8, r24
    7876:	86 18       	sub	r8, r6
    7878:	45 c0       	rjmp	.+138    	; 0x7904 <vfprintf+0x2ac>
    787a:	85 37       	cpi	r24, 0x75	; 117
    787c:	31 f4       	brne	.+12     	; 0x788a <vfprintf+0x232>
    787e:	23 2d       	mov	r18, r3
    7880:	2f 7e       	andi	r18, 0xEF	; 239
    7882:	b2 2e       	mov	r11, r18
    7884:	2a e0       	ldi	r18, 0x0A	; 10
    7886:	30 e0       	ldi	r19, 0x00	; 0
    7888:	25 c0       	rjmp	.+74     	; 0x78d4 <vfprintf+0x27c>
    788a:	93 2d       	mov	r25, r3
    788c:	99 7f       	andi	r25, 0xF9	; 249
    788e:	b9 2e       	mov	r11, r25
    7890:	8f 36       	cpi	r24, 0x6F	; 111
    7892:	c1 f0       	breq	.+48     	; 0x78c4 <vfprintf+0x26c>
    7894:	18 f4       	brcc	.+6      	; 0x789c <vfprintf+0x244>
    7896:	88 35       	cpi	r24, 0x58	; 88
    7898:	79 f0       	breq	.+30     	; 0x78b8 <vfprintf+0x260>
    789a:	b5 c0       	rjmp	.+362    	; 0x7a06 <vfprintf+0x3ae>
    789c:	80 37       	cpi	r24, 0x70	; 112
    789e:	19 f0       	breq	.+6      	; 0x78a6 <vfprintf+0x24e>
    78a0:	88 37       	cpi	r24, 0x78	; 120
    78a2:	21 f0       	breq	.+8      	; 0x78ac <vfprintf+0x254>
    78a4:	b0 c0       	rjmp	.+352    	; 0x7a06 <vfprintf+0x3ae>
    78a6:	e9 2f       	mov	r30, r25
    78a8:	e0 61       	ori	r30, 0x10	; 16
    78aa:	be 2e       	mov	r11, r30
    78ac:	b4 fe       	sbrs	r11, 4
    78ae:	0d c0       	rjmp	.+26     	; 0x78ca <vfprintf+0x272>
    78b0:	fb 2d       	mov	r31, r11
    78b2:	f4 60       	ori	r31, 0x04	; 4
    78b4:	bf 2e       	mov	r11, r31
    78b6:	09 c0       	rjmp	.+18     	; 0x78ca <vfprintf+0x272>
    78b8:	34 fe       	sbrs	r3, 4
    78ba:	0a c0       	rjmp	.+20     	; 0x78d0 <vfprintf+0x278>
    78bc:	29 2f       	mov	r18, r25
    78be:	26 60       	ori	r18, 0x06	; 6
    78c0:	b2 2e       	mov	r11, r18
    78c2:	06 c0       	rjmp	.+12     	; 0x78d0 <vfprintf+0x278>
    78c4:	28 e0       	ldi	r18, 0x08	; 8
    78c6:	30 e0       	ldi	r19, 0x00	; 0
    78c8:	05 c0       	rjmp	.+10     	; 0x78d4 <vfprintf+0x27c>
    78ca:	20 e1       	ldi	r18, 0x10	; 16
    78cc:	30 e0       	ldi	r19, 0x00	; 0
    78ce:	02 c0       	rjmp	.+4      	; 0x78d4 <vfprintf+0x27c>
    78d0:	20 e1       	ldi	r18, 0x10	; 16
    78d2:	32 e0       	ldi	r19, 0x02	; 2
    78d4:	f8 01       	movw	r30, r16
    78d6:	b7 fe       	sbrs	r11, 7
    78d8:	07 c0       	rjmp	.+14     	; 0x78e8 <vfprintf+0x290>
    78da:	60 81       	ld	r22, Z
    78dc:	71 81       	ldd	r23, Z+1	; 0x01
    78de:	82 81       	ldd	r24, Z+2	; 0x02
    78e0:	93 81       	ldd	r25, Z+3	; 0x03
    78e2:	0c 5f       	subi	r16, 0xFC	; 252
    78e4:	1f 4f       	sbci	r17, 0xFF	; 255
    78e6:	06 c0       	rjmp	.+12     	; 0x78f4 <vfprintf+0x29c>
    78e8:	60 81       	ld	r22, Z
    78ea:	71 81       	ldd	r23, Z+1	; 0x01
    78ec:	80 e0       	ldi	r24, 0x00	; 0
    78ee:	90 e0       	ldi	r25, 0x00	; 0
    78f0:	0e 5f       	subi	r16, 0xFE	; 254
    78f2:	1f 4f       	sbci	r17, 0xFF	; 255
    78f4:	a3 01       	movw	r20, r6
    78f6:	0e 94 5f 3d 	call	0x7abe	; 0x7abe <__ultoa_invert>
    78fa:	88 2e       	mov	r8, r24
    78fc:	86 18       	sub	r8, r6
    78fe:	fb 2d       	mov	r31, r11
    7900:	ff 77       	andi	r31, 0x7F	; 127
    7902:	3f 2e       	mov	r3, r31
    7904:	36 fe       	sbrs	r3, 6
    7906:	0d c0       	rjmp	.+26     	; 0x7922 <vfprintf+0x2ca>
    7908:	23 2d       	mov	r18, r3
    790a:	2e 7f       	andi	r18, 0xFE	; 254
    790c:	a2 2e       	mov	r10, r18
    790e:	89 14       	cp	r8, r9
    7910:	58 f4       	brcc	.+22     	; 0x7928 <vfprintf+0x2d0>
    7912:	34 fe       	sbrs	r3, 4
    7914:	0b c0       	rjmp	.+22     	; 0x792c <vfprintf+0x2d4>
    7916:	32 fc       	sbrc	r3, 2
    7918:	09 c0       	rjmp	.+18     	; 0x792c <vfprintf+0x2d4>
    791a:	83 2d       	mov	r24, r3
    791c:	8e 7e       	andi	r24, 0xEE	; 238
    791e:	a8 2e       	mov	r10, r24
    7920:	05 c0       	rjmp	.+10     	; 0x792c <vfprintf+0x2d4>
    7922:	b8 2c       	mov	r11, r8
    7924:	a3 2c       	mov	r10, r3
    7926:	03 c0       	rjmp	.+6      	; 0x792e <vfprintf+0x2d6>
    7928:	b8 2c       	mov	r11, r8
    792a:	01 c0       	rjmp	.+2      	; 0x792e <vfprintf+0x2d6>
    792c:	b9 2c       	mov	r11, r9
    792e:	a4 fe       	sbrs	r10, 4
    7930:	0f c0       	rjmp	.+30     	; 0x7950 <vfprintf+0x2f8>
    7932:	fe 01       	movw	r30, r28
    7934:	e8 0d       	add	r30, r8
    7936:	f1 1d       	adc	r31, r1
    7938:	80 81       	ld	r24, Z
    793a:	80 33       	cpi	r24, 0x30	; 48
    793c:	21 f4       	brne	.+8      	; 0x7946 <vfprintf+0x2ee>
    793e:	9a 2d       	mov	r25, r10
    7940:	99 7e       	andi	r25, 0xE9	; 233
    7942:	a9 2e       	mov	r10, r25
    7944:	09 c0       	rjmp	.+18     	; 0x7958 <vfprintf+0x300>
    7946:	a2 fe       	sbrs	r10, 2
    7948:	06 c0       	rjmp	.+12     	; 0x7956 <vfprintf+0x2fe>
    794a:	b3 94       	inc	r11
    794c:	b3 94       	inc	r11
    794e:	04 c0       	rjmp	.+8      	; 0x7958 <vfprintf+0x300>
    7950:	8a 2d       	mov	r24, r10
    7952:	86 78       	andi	r24, 0x86	; 134
    7954:	09 f0       	breq	.+2      	; 0x7958 <vfprintf+0x300>
    7956:	b3 94       	inc	r11
    7958:	a3 fc       	sbrc	r10, 3
    795a:	11 c0       	rjmp	.+34     	; 0x797e <vfprintf+0x326>
    795c:	a0 fe       	sbrs	r10, 0
    795e:	06 c0       	rjmp	.+12     	; 0x796c <vfprintf+0x314>
    7960:	b2 14       	cp	r11, r2
    7962:	88 f4       	brcc	.+34     	; 0x7986 <vfprintf+0x32e>
    7964:	28 0c       	add	r2, r8
    7966:	92 2c       	mov	r9, r2
    7968:	9b 18       	sub	r9, r11
    796a:	0e c0       	rjmp	.+28     	; 0x7988 <vfprintf+0x330>
    796c:	b2 14       	cp	r11, r2
    796e:	60 f4       	brcc	.+24     	; 0x7988 <vfprintf+0x330>
    7970:	b6 01       	movw	r22, r12
    7972:	80 e2       	ldi	r24, 0x20	; 32
    7974:	90 e0       	ldi	r25, 0x00	; 0
    7976:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    797a:	b3 94       	inc	r11
    797c:	f7 cf       	rjmp	.-18     	; 0x796c <vfprintf+0x314>
    797e:	b2 14       	cp	r11, r2
    7980:	18 f4       	brcc	.+6      	; 0x7988 <vfprintf+0x330>
    7982:	2b 18       	sub	r2, r11
    7984:	02 c0       	rjmp	.+4      	; 0x798a <vfprintf+0x332>
    7986:	98 2c       	mov	r9, r8
    7988:	21 2c       	mov	r2, r1
    798a:	a4 fe       	sbrs	r10, 4
    798c:	10 c0       	rjmp	.+32     	; 0x79ae <vfprintf+0x356>
    798e:	b6 01       	movw	r22, r12
    7990:	80 e3       	ldi	r24, 0x30	; 48
    7992:	90 e0       	ldi	r25, 0x00	; 0
    7994:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    7998:	a2 fe       	sbrs	r10, 2
    799a:	17 c0       	rjmp	.+46     	; 0x79ca <vfprintf+0x372>
    799c:	a1 fc       	sbrc	r10, 1
    799e:	03 c0       	rjmp	.+6      	; 0x79a6 <vfprintf+0x34e>
    79a0:	88 e7       	ldi	r24, 0x78	; 120
    79a2:	90 e0       	ldi	r25, 0x00	; 0
    79a4:	02 c0       	rjmp	.+4      	; 0x79aa <vfprintf+0x352>
    79a6:	88 e5       	ldi	r24, 0x58	; 88
    79a8:	90 e0       	ldi	r25, 0x00	; 0
    79aa:	b6 01       	movw	r22, r12
    79ac:	0c c0       	rjmp	.+24     	; 0x79c6 <vfprintf+0x36e>
    79ae:	8a 2d       	mov	r24, r10
    79b0:	86 78       	andi	r24, 0x86	; 134
    79b2:	59 f0       	breq	.+22     	; 0x79ca <vfprintf+0x372>
    79b4:	a1 fe       	sbrs	r10, 1
    79b6:	02 c0       	rjmp	.+4      	; 0x79bc <vfprintf+0x364>
    79b8:	8b e2       	ldi	r24, 0x2B	; 43
    79ba:	01 c0       	rjmp	.+2      	; 0x79be <vfprintf+0x366>
    79bc:	80 e2       	ldi	r24, 0x20	; 32
    79be:	a7 fc       	sbrc	r10, 7
    79c0:	8d e2       	ldi	r24, 0x2D	; 45
    79c2:	b6 01       	movw	r22, r12
    79c4:	90 e0       	ldi	r25, 0x00	; 0
    79c6:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    79ca:	89 14       	cp	r8, r9
    79cc:	38 f4       	brcc	.+14     	; 0x79dc <vfprintf+0x384>
    79ce:	b6 01       	movw	r22, r12
    79d0:	80 e3       	ldi	r24, 0x30	; 48
    79d2:	90 e0       	ldi	r25, 0x00	; 0
    79d4:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    79d8:	9a 94       	dec	r9
    79da:	f7 cf       	rjmp	.-18     	; 0x79ca <vfprintf+0x372>
    79dc:	8a 94       	dec	r8
    79de:	f3 01       	movw	r30, r6
    79e0:	e8 0d       	add	r30, r8
    79e2:	f1 1d       	adc	r31, r1
    79e4:	80 81       	ld	r24, Z
    79e6:	b6 01       	movw	r22, r12
    79e8:	90 e0       	ldi	r25, 0x00	; 0
    79ea:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    79ee:	81 10       	cpse	r8, r1
    79f0:	f5 cf       	rjmp	.-22     	; 0x79dc <vfprintf+0x384>
    79f2:	22 20       	and	r2, r2
    79f4:	09 f4       	brne	.+2      	; 0x79f8 <vfprintf+0x3a0>
    79f6:	42 ce       	rjmp	.-892    	; 0x767c <vfprintf+0x24>
    79f8:	b6 01       	movw	r22, r12
    79fa:	80 e2       	ldi	r24, 0x20	; 32
    79fc:	90 e0       	ldi	r25, 0x00	; 0
    79fe:	0e 94 23 3d 	call	0x7a46	; 0x7a46 <fputc>
    7a02:	2a 94       	dec	r2
    7a04:	f6 cf       	rjmp	.-20     	; 0x79f2 <vfprintf+0x39a>
    7a06:	f6 01       	movw	r30, r12
    7a08:	86 81       	ldd	r24, Z+6	; 0x06
    7a0a:	97 81       	ldd	r25, Z+7	; 0x07
    7a0c:	02 c0       	rjmp	.+4      	; 0x7a12 <vfprintf+0x3ba>
    7a0e:	8f ef       	ldi	r24, 0xFF	; 255
    7a10:	9f ef       	ldi	r25, 0xFF	; 255
    7a12:	2b 96       	adiw	r28, 0x0b	; 11
    7a14:	e2 e1       	ldi	r30, 0x12	; 18
    7a16:	0c 94 1e 3e 	jmp	0x7c3c	; 0x7c3c <__epilogue_restores__>

00007a1a <strnlen_P>:
    7a1a:	fc 01       	movw	r30, r24
    7a1c:	05 90       	lpm	r0, Z+
    7a1e:	61 50       	subi	r22, 0x01	; 1
    7a20:	70 40       	sbci	r23, 0x00	; 0
    7a22:	01 10       	cpse	r0, r1
    7a24:	d8 f7       	brcc	.-10     	; 0x7a1c <strnlen_P+0x2>
    7a26:	80 95       	com	r24
    7a28:	90 95       	com	r25
    7a2a:	8e 0f       	add	r24, r30
    7a2c:	9f 1f       	adc	r25, r31
    7a2e:	08 95       	ret

00007a30 <strnlen>:
    7a30:	fc 01       	movw	r30, r24
    7a32:	61 50       	subi	r22, 0x01	; 1
    7a34:	70 40       	sbci	r23, 0x00	; 0
    7a36:	01 90       	ld	r0, Z+
    7a38:	01 10       	cpse	r0, r1
    7a3a:	d8 f7       	brcc	.-10     	; 0x7a32 <strnlen+0x2>
    7a3c:	80 95       	com	r24
    7a3e:	90 95       	com	r25
    7a40:	8e 0f       	add	r24, r30
    7a42:	9f 1f       	adc	r25, r31
    7a44:	08 95       	ret

00007a46 <fputc>:
    7a46:	0f 93       	push	r16
    7a48:	1f 93       	push	r17
    7a4a:	cf 93       	push	r28
    7a4c:	df 93       	push	r29
    7a4e:	fb 01       	movw	r30, r22
    7a50:	23 81       	ldd	r18, Z+3	; 0x03
    7a52:	21 fd       	sbrc	r18, 1
    7a54:	03 c0       	rjmp	.+6      	; 0x7a5c <fputc+0x16>
    7a56:	8f ef       	ldi	r24, 0xFF	; 255
    7a58:	9f ef       	ldi	r25, 0xFF	; 255
    7a5a:	2c c0       	rjmp	.+88     	; 0x7ab4 <fputc+0x6e>
    7a5c:	22 ff       	sbrs	r18, 2
    7a5e:	16 c0       	rjmp	.+44     	; 0x7a8c <fputc+0x46>
    7a60:	46 81       	ldd	r20, Z+6	; 0x06
    7a62:	57 81       	ldd	r21, Z+7	; 0x07
    7a64:	24 81       	ldd	r18, Z+4	; 0x04
    7a66:	35 81       	ldd	r19, Z+5	; 0x05
    7a68:	42 17       	cp	r20, r18
    7a6a:	53 07       	cpc	r21, r19
    7a6c:	44 f4       	brge	.+16     	; 0x7a7e <fputc+0x38>
    7a6e:	a0 81       	ld	r26, Z
    7a70:	b1 81       	ldd	r27, Z+1	; 0x01
    7a72:	9d 01       	movw	r18, r26
    7a74:	2f 5f       	subi	r18, 0xFF	; 255
    7a76:	3f 4f       	sbci	r19, 0xFF	; 255
    7a78:	31 83       	std	Z+1, r19	; 0x01
    7a7a:	20 83       	st	Z, r18
    7a7c:	8c 93       	st	X, r24
    7a7e:	26 81       	ldd	r18, Z+6	; 0x06
    7a80:	37 81       	ldd	r19, Z+7	; 0x07
    7a82:	2f 5f       	subi	r18, 0xFF	; 255
    7a84:	3f 4f       	sbci	r19, 0xFF	; 255
    7a86:	37 83       	std	Z+7, r19	; 0x07
    7a88:	26 83       	std	Z+6, r18	; 0x06
    7a8a:	14 c0       	rjmp	.+40     	; 0x7ab4 <fputc+0x6e>
    7a8c:	8b 01       	movw	r16, r22
    7a8e:	ec 01       	movw	r28, r24
    7a90:	fb 01       	movw	r30, r22
    7a92:	00 84       	ldd	r0, Z+8	; 0x08
    7a94:	f1 85       	ldd	r31, Z+9	; 0x09
    7a96:	e0 2d       	mov	r30, r0
    7a98:	09 95       	icall
    7a9a:	89 2b       	or	r24, r25
    7a9c:	e1 f6       	brne	.-72     	; 0x7a56 <fputc+0x10>
    7a9e:	d8 01       	movw	r26, r16
    7aa0:	16 96       	adiw	r26, 0x06	; 6
    7aa2:	8d 91       	ld	r24, X+
    7aa4:	9c 91       	ld	r25, X
    7aa6:	17 97       	sbiw	r26, 0x07	; 7
    7aa8:	01 96       	adiw	r24, 0x01	; 1
    7aaa:	17 96       	adiw	r26, 0x07	; 7
    7aac:	9c 93       	st	X, r25
    7aae:	8e 93       	st	-X, r24
    7ab0:	16 97       	sbiw	r26, 0x06	; 6
    7ab2:	ce 01       	movw	r24, r28
    7ab4:	df 91       	pop	r29
    7ab6:	cf 91       	pop	r28
    7ab8:	1f 91       	pop	r17
    7aba:	0f 91       	pop	r16
    7abc:	08 95       	ret

00007abe <__ultoa_invert>:
    7abe:	fa 01       	movw	r30, r20
    7ac0:	aa 27       	eor	r26, r26
    7ac2:	28 30       	cpi	r18, 0x08	; 8
    7ac4:	51 f1       	breq	.+84     	; 0x7b1a <__ultoa_invert+0x5c>
    7ac6:	20 31       	cpi	r18, 0x10	; 16
    7ac8:	81 f1       	breq	.+96     	; 0x7b2a <__ultoa_invert+0x6c>
    7aca:	e8 94       	clt
    7acc:	6f 93       	push	r22
    7ace:	6e 7f       	andi	r22, 0xFE	; 254
    7ad0:	6e 5f       	subi	r22, 0xFE	; 254
    7ad2:	7f 4f       	sbci	r23, 0xFF	; 255
    7ad4:	8f 4f       	sbci	r24, 0xFF	; 255
    7ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    7ad8:	af 4f       	sbci	r26, 0xFF	; 255
    7ada:	b1 e0       	ldi	r27, 0x01	; 1
    7adc:	3e d0       	rcall	.+124    	; 0x7b5a <__ultoa_invert+0x9c>
    7ade:	b4 e0       	ldi	r27, 0x04	; 4
    7ae0:	3c d0       	rcall	.+120    	; 0x7b5a <__ultoa_invert+0x9c>
    7ae2:	67 0f       	add	r22, r23
    7ae4:	78 1f       	adc	r23, r24
    7ae6:	89 1f       	adc	r24, r25
    7ae8:	9a 1f       	adc	r25, r26
    7aea:	a1 1d       	adc	r26, r1
    7aec:	68 0f       	add	r22, r24
    7aee:	79 1f       	adc	r23, r25
    7af0:	8a 1f       	adc	r24, r26
    7af2:	91 1d       	adc	r25, r1
    7af4:	a1 1d       	adc	r26, r1
    7af6:	6a 0f       	add	r22, r26
    7af8:	71 1d       	adc	r23, r1
    7afa:	81 1d       	adc	r24, r1
    7afc:	91 1d       	adc	r25, r1
    7afe:	a1 1d       	adc	r26, r1
    7b00:	20 d0       	rcall	.+64     	; 0x7b42 <__ultoa_invert+0x84>
    7b02:	09 f4       	brne	.+2      	; 0x7b06 <__ultoa_invert+0x48>
    7b04:	68 94       	set
    7b06:	3f 91       	pop	r19
    7b08:	2a e0       	ldi	r18, 0x0A	; 10
    7b0a:	26 9f       	mul	r18, r22
    7b0c:	11 24       	eor	r1, r1
    7b0e:	30 19       	sub	r19, r0
    7b10:	30 5d       	subi	r19, 0xD0	; 208
    7b12:	31 93       	st	Z+, r19
    7b14:	de f6       	brtc	.-74     	; 0x7acc <__ultoa_invert+0xe>
    7b16:	cf 01       	movw	r24, r30
    7b18:	08 95       	ret
    7b1a:	46 2f       	mov	r20, r22
    7b1c:	47 70       	andi	r20, 0x07	; 7
    7b1e:	40 5d       	subi	r20, 0xD0	; 208
    7b20:	41 93       	st	Z+, r20
    7b22:	b3 e0       	ldi	r27, 0x03	; 3
    7b24:	0f d0       	rcall	.+30     	; 0x7b44 <__ultoa_invert+0x86>
    7b26:	c9 f7       	brne	.-14     	; 0x7b1a <__ultoa_invert+0x5c>
    7b28:	f6 cf       	rjmp	.-20     	; 0x7b16 <__ultoa_invert+0x58>
    7b2a:	46 2f       	mov	r20, r22
    7b2c:	4f 70       	andi	r20, 0x0F	; 15
    7b2e:	40 5d       	subi	r20, 0xD0	; 208
    7b30:	4a 33       	cpi	r20, 0x3A	; 58
    7b32:	18 f0       	brcs	.+6      	; 0x7b3a <__ultoa_invert+0x7c>
    7b34:	49 5d       	subi	r20, 0xD9	; 217
    7b36:	31 fd       	sbrc	r19, 1
    7b38:	40 52       	subi	r20, 0x20	; 32
    7b3a:	41 93       	st	Z+, r20
    7b3c:	02 d0       	rcall	.+4      	; 0x7b42 <__ultoa_invert+0x84>
    7b3e:	a9 f7       	brne	.-22     	; 0x7b2a <__ultoa_invert+0x6c>
    7b40:	ea cf       	rjmp	.-44     	; 0x7b16 <__ultoa_invert+0x58>
    7b42:	b4 e0       	ldi	r27, 0x04	; 4
    7b44:	a6 95       	lsr	r26
    7b46:	97 95       	ror	r25
    7b48:	87 95       	ror	r24
    7b4a:	77 95       	ror	r23
    7b4c:	67 95       	ror	r22
    7b4e:	ba 95       	dec	r27
    7b50:	c9 f7       	brne	.-14     	; 0x7b44 <__ultoa_invert+0x86>
    7b52:	00 97       	sbiw	r24, 0x00	; 0
    7b54:	61 05       	cpc	r22, r1
    7b56:	71 05       	cpc	r23, r1
    7b58:	08 95       	ret
    7b5a:	9b 01       	movw	r18, r22
    7b5c:	ac 01       	movw	r20, r24
    7b5e:	0a 2e       	mov	r0, r26
    7b60:	06 94       	lsr	r0
    7b62:	57 95       	ror	r21
    7b64:	47 95       	ror	r20
    7b66:	37 95       	ror	r19
    7b68:	27 95       	ror	r18
    7b6a:	ba 95       	dec	r27
    7b6c:	c9 f7       	brne	.-14     	; 0x7b60 <__ultoa_invert+0xa2>
    7b6e:	62 0f       	add	r22, r18
    7b70:	73 1f       	adc	r23, r19
    7b72:	84 1f       	adc	r24, r20
    7b74:	95 1f       	adc	r25, r21
    7b76:	a0 1d       	adc	r26, r0
    7b78:	08 95       	ret

00007b7a <eeprom_read_block>:
    7b7a:	dc 01       	movw	r26, r24
    7b7c:	cb 01       	movw	r24, r22

00007b7e <eeprom_read_blraw>:
    7b7e:	fc 01       	movw	r30, r24
    7b80:	e1 99       	sbic	0x1c, 1	; 28
    7b82:	fe cf       	rjmp	.-4      	; 0x7b80 <eeprom_read_blraw+0x2>
    7b84:	06 c0       	rjmp	.+12     	; 0x7b92 <eeprom_read_blraw+0x14>
    7b86:	ff bb       	out	0x1f, r31	; 31
    7b88:	ee bb       	out	0x1e, r30	; 30
    7b8a:	e0 9a       	sbi	0x1c, 0	; 28
    7b8c:	31 96       	adiw	r30, 0x01	; 1
    7b8e:	0d b2       	in	r0, 0x1d	; 29
    7b90:	0d 92       	st	X+, r0
    7b92:	41 50       	subi	r20, 0x01	; 1
    7b94:	50 40       	sbci	r21, 0x00	; 0
    7b96:	b8 f7       	brcc	.-18     	; 0x7b86 <eeprom_read_blraw+0x8>
    7b98:	08 95       	ret

00007b9a <eeprom_read_byte>:
    7b9a:	e1 99       	sbic	0x1c, 1	; 28
    7b9c:	fe cf       	rjmp	.-4      	; 0x7b9a <eeprom_read_byte>
    7b9e:	9f bb       	out	0x1f, r25	; 31
    7ba0:	8e bb       	out	0x1e, r24	; 30
    7ba2:	e0 9a       	sbi	0x1c, 0	; 28
    7ba4:	99 27       	eor	r25, r25
    7ba6:	8d b3       	in	r24, 0x1d	; 29
    7ba8:	08 95       	ret

00007baa <eeprom_read_word>:
    7baa:	a8 e1       	ldi	r26, 0x18	; 24
    7bac:	b0 e0       	ldi	r27, 0x00	; 0
    7bae:	42 e0       	ldi	r20, 0x02	; 2
    7bb0:	50 e0       	ldi	r21, 0x00	; 0
    7bb2:	0c 94 bf 3d 	jmp	0x7b7e	; 0x7b7e <eeprom_read_blraw>

00007bb6 <eeprom_update_block>:
    7bb6:	dc 01       	movw	r26, r24
    7bb8:	a4 0f       	add	r26, r20
    7bba:	b5 1f       	adc	r27, r21
    7bbc:	41 50       	subi	r20, 0x01	; 1
    7bbe:	50 40       	sbci	r21, 0x00	; 0
    7bc0:	48 f0       	brcs	.+18     	; 0x7bd4 <eeprom_update_block+0x1e>
    7bc2:	cb 01       	movw	r24, r22
    7bc4:	84 0f       	add	r24, r20
    7bc6:	95 1f       	adc	r25, r21
    7bc8:	2e 91       	ld	r18, -X
    7bca:	0e 94 ec 3d 	call	0x7bd8	; 0x7bd8 <eeprom_update_r18>
    7bce:	41 50       	subi	r20, 0x01	; 1
    7bd0:	50 40       	sbci	r21, 0x00	; 0
    7bd2:	d0 f7       	brcc	.-12     	; 0x7bc8 <eeprom_update_block+0x12>
    7bd4:	08 95       	ret

00007bd6 <eeprom_update_byte>:
    7bd6:	26 2f       	mov	r18, r22

00007bd8 <eeprom_update_r18>:
    7bd8:	e1 99       	sbic	0x1c, 1	; 28
    7bda:	fe cf       	rjmp	.-4      	; 0x7bd8 <eeprom_update_r18>
    7bdc:	9f bb       	out	0x1f, r25	; 31
    7bde:	8e bb       	out	0x1e, r24	; 30
    7be0:	e0 9a       	sbi	0x1c, 0	; 28
    7be2:	01 97       	sbiw	r24, 0x01	; 1
    7be4:	0d b2       	in	r0, 0x1d	; 29
    7be6:	02 16       	cp	r0, r18
    7be8:	31 f0       	breq	.+12     	; 0x7bf6 <eeprom_update_r18+0x1e>
    7bea:	2d bb       	out	0x1d, r18	; 29
    7bec:	0f b6       	in	r0, 0x3f	; 63
    7bee:	f8 94       	cli
    7bf0:	e2 9a       	sbi	0x1c, 2	; 28
    7bf2:	e1 9a       	sbi	0x1c, 1	; 28
    7bf4:	0f be       	out	0x3f, r0	; 63
    7bf6:	08 95       	ret

00007bf8 <eeprom_update_word>:
    7bf8:	01 96       	adiw	r24, 0x01	; 1
    7bfa:	27 2f       	mov	r18, r23
    7bfc:	0e 94 ec 3d 	call	0x7bd8	; 0x7bd8 <eeprom_update_r18>
    7c00:	0c 94 eb 3d 	jmp	0x7bd6	; 0x7bd6 <eeprom_update_byte>

00007c04 <__prologue_saves__>:
    7c04:	2f 92       	push	r2
    7c06:	3f 92       	push	r3
    7c08:	4f 92       	push	r4
    7c0a:	5f 92       	push	r5
    7c0c:	6f 92       	push	r6
    7c0e:	7f 92       	push	r7
    7c10:	8f 92       	push	r8
    7c12:	9f 92       	push	r9
    7c14:	af 92       	push	r10
    7c16:	bf 92       	push	r11
    7c18:	cf 92       	push	r12
    7c1a:	df 92       	push	r13
    7c1c:	ef 92       	push	r14
    7c1e:	ff 92       	push	r15
    7c20:	0f 93       	push	r16
    7c22:	1f 93       	push	r17
    7c24:	cf 93       	push	r28
    7c26:	df 93       	push	r29
    7c28:	cd b7       	in	r28, 0x3d	; 61
    7c2a:	de b7       	in	r29, 0x3e	; 62
    7c2c:	ca 1b       	sub	r28, r26
    7c2e:	db 0b       	sbc	r29, r27
    7c30:	0f b6       	in	r0, 0x3f	; 63
    7c32:	f8 94       	cli
    7c34:	de bf       	out	0x3e, r29	; 62
    7c36:	0f be       	out	0x3f, r0	; 63
    7c38:	cd bf       	out	0x3d, r28	; 61
    7c3a:	09 94       	ijmp

00007c3c <__epilogue_restores__>:
    7c3c:	2a 88       	ldd	r2, Y+18	; 0x12
    7c3e:	39 88       	ldd	r3, Y+17	; 0x11
    7c40:	48 88       	ldd	r4, Y+16	; 0x10
    7c42:	5f 84       	ldd	r5, Y+15	; 0x0f
    7c44:	6e 84       	ldd	r6, Y+14	; 0x0e
    7c46:	7d 84       	ldd	r7, Y+13	; 0x0d
    7c48:	8c 84       	ldd	r8, Y+12	; 0x0c
    7c4a:	9b 84       	ldd	r9, Y+11	; 0x0b
    7c4c:	aa 84       	ldd	r10, Y+10	; 0x0a
    7c4e:	b9 84       	ldd	r11, Y+9	; 0x09
    7c50:	c8 84       	ldd	r12, Y+8	; 0x08
    7c52:	df 80       	ldd	r13, Y+7	; 0x07
    7c54:	ee 80       	ldd	r14, Y+6	; 0x06
    7c56:	fd 80       	ldd	r15, Y+5	; 0x05
    7c58:	0c 81       	ldd	r16, Y+4	; 0x04
    7c5a:	1b 81       	ldd	r17, Y+3	; 0x03
    7c5c:	aa 81       	ldd	r26, Y+2	; 0x02
    7c5e:	b9 81       	ldd	r27, Y+1	; 0x01
    7c60:	ce 0f       	add	r28, r30
    7c62:	d1 1d       	adc	r29, r1
    7c64:	0f b6       	in	r0, 0x3f	; 63
    7c66:	f8 94       	cli
    7c68:	de bf       	out	0x3e, r29	; 62
    7c6a:	0f be       	out	0x3f, r0	; 63
    7c6c:	cd bf       	out	0x3d, r28	; 61
    7c6e:	ed 01       	movw	r28, r26
    7c70:	08 95       	ret

00007c72 <_exit>:
    7c72:	f8 94       	cli

00007c74 <__stop_program>:
    7c74:	ff cf       	rjmp	.-2      	; 0x7c74 <__stop_program>
